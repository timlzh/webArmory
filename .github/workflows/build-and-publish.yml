name: Build and Publish Image

on:
  push: # push 到主分支自动 发布
    branches: ["main"]
    paths-ignore: # 忽略一些不必要的文件
      - ".gitignore"
      - "README.md"
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the mkdocs
        run: | 
          pip install -r requirements.txt
          python -m mkdocs build --clean
      - name: Build the Docker image
        run:
          | # 使用 上一步写的 Dockerfile 构建镜像并发布到私有仓库； 发布完成可以去 https://github.com/MrGaoGang?tab=packages 查看
          docker build . --file Dockerfile --tag ghcr.io/timlzh/webarmory:latest --tag timlzh/webarmory:latest
          python compressImgs.py
          docker build . --file Dockerfile --tag ghcr.io/timlzh/webarmory:min-latest --tag timlzh/webarmory:min-latest
      - name: Docker hub Login
        uses: docker/login-action@v2.2.0
        with:
          registry: docker.io # 声明镜像源
          username: ${{ github.actor }} # 当前github 用户名
          password: ${{ secrets.DOCKER_HUB_TOKEN }} # 需要去 https://hub.docker.com/settings/security 生成一个 名为 token，注意此token 需要读写 packages 等权限
      - name: Push image to docker hub
        run:
          | # 使用 上一步写的 Dockerfile 构建镜像并发布到私有仓库； 发布完成可以去 https://hub.docker.com/r/timlzh/web-armory 查看
          docker push timlzh/webarmory:latest
          docker push timlzh/webarmory:min-latest
          docker logout docker.io
      - name: Ghcr.io Login
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io # 声明镜像源
          username: ${{ github.actor }} # 当前github 用户名
          password: ${{ secrets.HUB_GITHUB_TOKEN }} # 需要去 https://github.com/settings/tokens 生成一个 名为 token，注意此token 需要读写 packages 等权限 
      - name: Push image to ghcr.io
        run:
          | # 使用 上一步写的 Dockerfile 构建镜像并发布到私有仓库； 发布完成可以去 https://github.com/MrGaoGang?tab=packages 查看
          docker push ghcr.io/timlzh/webarmory:latest
          docker push ghcr.io/timlzh/webarmory:min-latest
          docker logout ghcr.io
      - name: Update image on server via ssh
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }} # 服务器ip地址 ; 需要去仓库的 settings/secrets/actions 去创建
          username: ${{ secrets.SERVER_USER }} # 服务器用户名称；需要去仓库的 settings/secrets/actions 去创建
          password: ${{ secrets.SERVER_PWD }} # 服务器密码；需要去仓库的 settings/secrets/actions 去创建
          port: ${{ secrets.SERVER_PORT }} # 服务器端口，默认22；需要去仓库的 settings/secrets/actions 去创建
          script: | # 重启更新镜像
            docker stop webarmory 
            docker rm webarmory
            docker pull timlzh/webarmory:latest
            docker run -dp 60001:80  --restart=always --name webarmory timlzh/webarmory:latest
